
bin\Debug\Project_AGV_2.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  000017fa  000018ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000017fa  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000028  00800202  00800202  000018b0  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000018b0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000018b3  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000018c8  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000178  00000000  00000000  00001908  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   0000117f  00000000  00000000  00001a80  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000ee6  00000000  00000000  00002bff  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00001095  00000000  00000000  00003ae5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  000003d4  00000000  00000000  00004b7c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000669  00000000  00000000  00004f50  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000012c  00000000  00000000  000055b9  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 82 00 	jmp	0x104	; 0x104 <__ctors_end>
       4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
       8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
       c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      10:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      14:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      18:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      1c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      20:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      24:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      28:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      2c:	0c 94 3c 02 	jmp	0x478	; 0x478 <__vector_11>
      30:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      34:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      38:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      3c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      40:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      44:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      48:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      4c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      50:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      54:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      58:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      5c:	0c 94 f2 03 	jmp	0x7e4	; 0x7e4 <__vector_23>
      60:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      64:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      68:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      6c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      70:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      74:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      78:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      7c:	0c 94 2b 01 	jmp	0x256	; 0x256 <__vector_31>
      80:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      84:	0c 94 f1 00 	jmp	0x1e2	; 0x1e2 <__vector_33>
      88:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      8c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      90:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      94:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      98:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      9c:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      a0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      a4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      a8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      ac:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      b0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      b4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      b8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      bc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      c8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      cc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d4:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      d8:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      dc:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>
      e0:	0c 94 a3 00 	jmp	0x146	; 0x146 <__bad_interrupt>

000000e4 <__trampolines_start>:
      e4:	0c 94 c7 09 	jmp	0x138e	; 0x138e <.L37>
      e8:	0c 94 d9 09 	jmp	0x13b2	; 0x13b2 <.L35>
      ec:	0c 94 d0 09 	jmp	0x13a0	; 0x13a0 <.L36>
      f0:	0c 94 2e 09 	jmp	0x125c	; 0x125c <.L39>
      f4:	0c 94 7a 0a 	jmp	0x14f4	; 0x14f4 <.L31>
      f8:	0c 94 3a 09 	jmp	0x1274	; 0x1274 <.L38>
      fc:	0c 94 71 0a 	jmp	0x14e2	; 0x14e2 <.L33>
     100:	0c 94 68 0a 	jmp	0x14d0	; 0x14d0 <.L34>

00000104 <__ctors_end>:
     104:	11 24       	eor	r1, r1
     106:	1f be       	out	0x3f, r1	; 63
     108:	cf ef       	ldi	r28, 0xFF	; 255
     10a:	d1 e2       	ldi	r29, 0x21	; 33
     10c:	de bf       	out	0x3e, r29	; 62
     10e:	cd bf       	out	0x3d, r28	; 61
     110:	00 e0       	ldi	r16, 0x00	; 0
     112:	0c bf       	out	0x3c, r16	; 60

00000114 <__do_copy_data>:
     114:	12 e0       	ldi	r17, 0x02	; 2

00000116 <.Loc.1>:
     116:	a0 e0       	ldi	r26, 0x00	; 0

00000118 <.Loc.2>:
     118:	b2 e0       	ldi	r27, 0x02	; 2

0000011a <.Loc.3>:
     11a:	ea ef       	ldi	r30, 0xFA	; 250

0000011c <.Loc.4>:
     11c:	f7 e1       	ldi	r31, 0x17	; 23

0000011e <.Loc.5>:
     11e:	00 e0       	ldi	r16, 0x00	; 0

00000120 <.Loc.6>:
     120:	0b bf       	out	0x3b, r16	; 59

00000122 <.Loc.7>:
     122:	02 c0       	rjmp	.+4      	; 0x128 <.L__do_copy_data_start>

00000124 <.L__do_copy_data_loop>:
     124:	07 90       	elpm	r0, Z+

00000126 <.Loc.9>:
     126:	0d 92       	st	X+, r0

00000128 <.L__do_copy_data_start>:
     128:	a2 30       	cpi	r26, 0x02	; 2

0000012a <.Loc.11>:
     12a:	b1 07       	cpc	r27, r17

0000012c <.Loc.12>:
     12c:	d9 f7       	brne	.-10     	; 0x124 <.L__do_copy_data_loop>

0000012e <__do_clear_bss>:
     12e:	22 e0       	ldi	r18, 0x02	; 2

00000130 <.Loc.1>:
     130:	a2 e0       	ldi	r26, 0x02	; 2

00000132 <.Loc.2>:
     132:	b2 e0       	ldi	r27, 0x02	; 2

00000134 <.Loc.3>:
     134:	01 c0       	rjmp	.+2      	; 0x138 <.Loc.5>

00000136 <.Loc.4>:
     136:	1d 92       	st	X+, r1

00000138 <.Loc.5>:
     138:	aa 32       	cpi	r26, 0x2A	; 42

0000013a <.Loc.6>:
     13a:	b2 07       	cpc	r27, r18

0000013c <.Loc.7>:
     13c:	e1 f7       	brne	.-8      	; 0x136 <.Loc.4>

0000013e <L0^A>:
     13e:	0e 94 00 09 	call	0x1200	; 0x1200 <main>
     142:	0c 94 f3 0b 	jmp	0x17e6	; 0x17e6 <_exit>

00000146 <__bad_interrupt>:
     146:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000014a <agv_ultrasoon_init>:
volatile uint16_t agv_ultrasoon_LV = 0;
volatile uint16_t agv_ultrasoon_voor = 0;
volatile uint8_t agv_ultrasoon_current_sensor = 1;

void agv_ultrasoon_init()
{
     14a:	cf 93       	push	r28
     14c:	df 93       	push	r29
     14e:	cd b7       	in	r28, 0x3d	; 61
     150:	de b7       	in	r29, 0x3e	; 62

00000152 <.Loc.1>:
    cli();
     152:	f8 94       	cli

00000154 <.Loc.2>:
    //PORTA = 0b11111111;
    //triger configuratie
    TCCR3A |= (1<<COM3A1) | (1<<WGM31);
     154:	80 e9       	ldi	r24, 0x90	; 144
     156:	90 e0       	ldi	r25, 0x00	; 0
     158:	fc 01       	movw	r30, r24
     15a:	20 81       	ld	r18, Z
     15c:	80 e9       	ldi	r24, 0x90	; 144
     15e:	90 e0       	ldi	r25, 0x00	; 0

00000160 <.Loc.3>:
     160:	22 68       	ori	r18, 0x82	; 130
     162:	fc 01       	movw	r30, r24
     164:	20 83       	st	Z, r18

00000166 <.Loc.4>:
    TCCR3B |= (1<<WGM33) | (1<<CS31) | (1<<WGM32);//wgm33 wgm32 wgm31
     166:	81 e9       	ldi	r24, 0x91	; 145
     168:	90 e0       	ldi	r25, 0x00	; 0
     16a:	fc 01       	movw	r30, r24
     16c:	20 81       	ld	r18, Z
     16e:	81 e9       	ldi	r24, 0x91	; 145
     170:	90 e0       	ldi	r25, 0x00	; 0

00000172 <.Loc.5>:
     172:	2a 61       	ori	r18, 0x1A	; 26
     174:	fc 01       	movw	r30, r24
     176:	20 83       	st	Z, r18

00000178 <.Loc.6>:
    ICR3 = 32768;
     178:	86 e9       	ldi	r24, 0x96	; 150
     17a:	90 e0       	ldi	r25, 0x00	; 0

0000017c <.Loc.7>:
     17c:	20 e0       	ldi	r18, 0x00	; 0
     17e:	30 e8       	ldi	r19, 0x80	; 128
     180:	fc 01       	movw	r30, r24
     182:	31 83       	std	Z+1, r19	; 0x01
     184:	20 83       	st	Z, r18

00000186 <.Loc.8>:
    OCR3A = 20;//10microsec
     186:	88 e9       	ldi	r24, 0x98	; 152
     188:	90 e0       	ldi	r25, 0x00	; 0

0000018a <.Loc.9>:
     18a:	24 e1       	ldi	r18, 0x14	; 20
     18c:	30 e0       	ldi	r19, 0x00	; 0
     18e:	fc 01       	movw	r30, r24
     190:	31 83       	std	Z+1, r19	; 0x01
     192:	20 83       	st	Z, r18

00000194 <.Loc.10>:
    OCR3B = 4500;// (10microsec + 480microsec+ marge) *2
     194:	8a e9       	ldi	r24, 0x9A	; 154
     196:	90 e0       	ldi	r25, 0x00	; 0

00000198 <.Loc.11>:
     198:	24 e9       	ldi	r18, 0x94	; 148
     19a:	31 e1       	ldi	r19, 0x11	; 17
     19c:	fc 01       	movw	r30, r24
     19e:	31 83       	std	Z+1, r19	; 0x01
     1a0:	20 83       	st	Z, r18

000001a2 <.Loc.12>:
    DDRE |= (1<<PE3);
     1a2:	8d e2       	ldi	r24, 0x2D	; 45
     1a4:	90 e0       	ldi	r25, 0x00	; 0
     1a6:	fc 01       	movw	r30, r24
     1a8:	20 81       	ld	r18, Z
     1aa:	8d e2       	ldi	r24, 0x2D	; 45
     1ac:	90 e0       	ldi	r25, 0x00	; 0

000001ae <.Loc.13>:
     1ae:	28 60       	ori	r18, 0x08	; 8
     1b0:	fc 01       	movw	r30, r24
     1b2:	20 83       	st	Z, r18

000001b4 <.Loc.14>:
    TIMSK3 |= (1<<ICIE3) | (1<<OCIE3B);
     1b4:	81 e7       	ldi	r24, 0x71	; 113
     1b6:	90 e0       	ldi	r25, 0x00	; 0
     1b8:	fc 01       	movw	r30, r24
     1ba:	20 81       	ld	r18, Z
     1bc:	81 e7       	ldi	r24, 0x71	; 113
     1be:	90 e0       	ldi	r25, 0x00	; 0

000001c0 <.Loc.15>:
     1c0:	24 62       	ori	r18, 0x24	; 36
     1c2:	fc 01       	movw	r30, r24
     1c4:	20 83       	st	Z, r18

000001c6 <.Loc.16>:
    //pin change interrupt:
    PCICR |= (1<<PCIE2);//enables pci 16 tot 23
     1c6:	88 e6       	ldi	r24, 0x68	; 104
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	fc 01       	movw	r30, r24
     1cc:	20 81       	ld	r18, Z
     1ce:	88 e6       	ldi	r24, 0x68	; 104
     1d0:	90 e0       	ldi	r25, 0x00	; 0

000001d2 <.Loc.17>:
     1d2:	24 60       	ori	r18, 0x04	; 4
     1d4:	fc 01       	movw	r30, r24
     1d6:	20 83       	st	Z, r18

000001d8 <.Loc.18>:
    sei();
     1d8:	78 94       	sei

000001da <.Loc.19>:
}
     1da:	00 00       	nop
     1dc:	df 91       	pop	r29
     1de:	cf 91       	pop	r28
     1e0:	08 95       	ret

000001e2 <__vector_33>:


ISR(TIMER3_COMPB_vect)
{
     1e2:	1f 92       	push	r1
     1e4:	0f 92       	push	r0
     1e6:	0f b6       	in	r0, 0x3f	; 63
     1e8:	0f 92       	push	r0
     1ea:	11 24       	eor	r1, r1
     1ec:	0b b6       	in	r0, 0x3b	; 59
     1ee:	0f 92       	push	r0
     1f0:	2f 93       	push	r18
     1f2:	8f 93       	push	r24
     1f4:	9f 93       	push	r25
     1f6:	ef 93       	push	r30
     1f8:	ff 93       	push	r31
     1fa:	cf 93       	push	r28
     1fc:	df 93       	push	r29
     1fe:	cd b7       	in	r28, 0x3d	; 61
     200:	de b7       	in	r29, 0x3e	; 62

00000202 <.Loc.21>:
    agv_ultrasoon_current_sensor = (agv_ultrasoon_current_sensor<<1);
     202:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>
     206:	88 0f       	add	r24, r24

00000208 <.Loc.22>:
     208:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_ultrasoon_current_sensor>

0000020c <.Loc.23>:
    if (agv_ultrasoon_current_sensor == (1<<3))//0b00100000
     20c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

00000210 <.Loc.24>:
     210:	88 30       	cpi	r24, 0x08	; 8
     212:	19 f4       	brne	.+6      	; 0x21a <.L3>

00000214 <.Loc.25>:
    {
        agv_ultrasoon_current_sensor = 1;
     214:	81 e0       	ldi	r24, 0x01	; 1
     216:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_ultrasoon_current_sensor>

0000021a <.L3>:
    }
    PCMSK2 = agv_ultrasoon_current_sensor; //zet pin change aan na rising edge voor falling edge
     21a:	8d e6       	ldi	r24, 0x6D	; 109
     21c:	90 e0       	ldi	r25, 0x00	; 0

0000021e <.Loc.27>:
     21e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>
     222:	fc 01       	movw	r30, r24
     224:	20 83       	st	Z, r18

00000226 <.Loc.28>:
    //PORTA = agv_ultrasoon_current_sensor;
    TIMSK3 |= (1<<OCIE3B); //zet timer max aan voor out of range detectie
     226:	81 e7       	ldi	r24, 0x71	; 113
     228:	90 e0       	ldi	r25, 0x00	; 0
     22a:	fc 01       	movw	r30, r24
     22c:	20 81       	ld	r18, Z
     22e:	81 e7       	ldi	r24, 0x71	; 113
     230:	90 e0       	ldi	r25, 0x00	; 0

00000232 <.Loc.29>:
     232:	24 60       	ori	r18, 0x04	; 4
     234:	fc 01       	movw	r30, r24
     236:	20 83       	st	Z, r18

00000238 <.Loc.30>:
}
     238:	00 00       	nop
     23a:	df 91       	pop	r29
     23c:	cf 91       	pop	r28
     23e:	ff 91       	pop	r31
     240:	ef 91       	pop	r30
     242:	9f 91       	pop	r25
     244:	8f 91       	pop	r24
     246:	2f 91       	pop	r18
     248:	0f 90       	pop	r0
     24a:	0b be       	out	0x3b, r0	; 59
     24c:	0f 90       	pop	r0
     24e:	0f be       	out	0x3f, r0	; 63
     250:	0f 90       	pop	r0
     252:	1f 90       	pop	r1
     254:	18 95       	reti

00000256 <__vector_31>:

ISR(TIMER3_CAPT_vect)
{
     256:	1f 92       	push	r1
     258:	0f 92       	push	r0
     25a:	0f b6       	in	r0, 0x3f	; 63
     25c:	0f 92       	push	r0
     25e:	11 24       	eor	r1, r1
     260:	0b b6       	in	r0, 0x3b	; 59
     262:	0f 92       	push	r0
     264:	2f 93       	push	r18
     266:	3f 93       	push	r19
     268:	4f 93       	push	r20
     26a:	5f 93       	push	r21
     26c:	6f 93       	push	r22
     26e:	7f 93       	push	r23
     270:	8f 93       	push	r24
     272:	9f 93       	push	r25
     274:	af 93       	push	r26
     276:	bf 93       	push	r27
     278:	ef 93       	push	r30
     27a:	ff 93       	push	r31
     27c:	cf 93       	push	r28
     27e:	df 93       	push	r29
     280:	cd b7       	in	r28, 0x3d	; 61
     282:	de b7       	in	r29, 0x3e	; 62
     284:	ec 97       	sbiw	r28, 0x3c	; 60
     286:	de bf       	out	0x3e, r29	; 62
     288:	cd bf       	out	0x3d, r28	; 61

0000028a <.Loc.32>:
    if(agv_ultrasoon_current_sensor == 0b00000001)
     28a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

0000028e <.Loc.33>:
     28e:	81 30       	cpi	r24, 0x01	; 1
     290:	09 f0       	breq	.+2      	; 0x294 <.Loc.34>

00000292 <L0^A>:
     292:	43 c0       	rjmp	.+134    	; 0x31a <.L5>

00000294 <.Loc.34>:
    {
        agv_ultrasoon_LA = ((ICR3 - 4454)/4)*0.0343;
     294:	86 e9       	ldi	r24, 0x96	; 150
     296:	90 e0       	ldi	r25, 0x00	; 0
     298:	dc 01       	movw	r26, r24
     29a:	8d 91       	ld	r24, X+
     29c:	9c 91       	ld	r25, X

0000029e <.Loc.35>:
     29e:	86 56       	subi	r24, 0x66	; 102
     2a0:	91 41       	sbci	r25, 0x11	; 17

000002a2 <.Loc.36>:
     2a2:	96 95       	lsr	r25
     2a4:	87 95       	ror	r24
     2a6:	96 95       	lsr	r25
     2a8:	87 95       	ror	r24

000002aa <.Loc.37>:
     2aa:	9c 01       	movw	r18, r24
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	50 e0       	ldi	r21, 0x00	; 0
     2b0:	29 8f       	std	Y+25, r18	; 0x19
     2b2:	3a 8f       	std	Y+26, r19	; 0x1a
     2b4:	4b 8f       	std	Y+27, r20	; 0x1b
     2b6:	5c 8f       	std	Y+28, r21	; 0x1c
     2b8:	69 8d       	ldd	r22, Y+25	; 0x19
     2ba:	7a 8d       	ldd	r23, Y+26	; 0x1a
     2bc:	8b 8d       	ldd	r24, Y+27	; 0x1b
     2be:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2c0:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     2c4:	69 83       	std	Y+1, r22	; 0x01
     2c6:	7a 83       	std	Y+2, r23	; 0x02
     2c8:	8b 83       	std	Y+3, r24	; 0x03
     2ca:	9c 83       	std	Y+4, r25	; 0x04
     2cc:	28 e2       	ldi	r18, 0x28	; 40
     2ce:	3e e7       	ldi	r19, 0x7E	; 126
     2d0:	4c e0       	ldi	r20, 0x0C	; 12
     2d2:	5d e3       	ldi	r21, 0x3D	; 61
     2d4:	69 81       	ldd	r22, Y+1	; 0x01
     2d6:	7a 81       	ldd	r23, Y+2	; 0x02
     2d8:	8b 81       	ldd	r24, Y+3	; 0x03
     2da:	9c 81       	ldd	r25, Y+4	; 0x04
     2dc:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     2e0:	6d 8f       	std	Y+29, r22	; 0x1d
     2e2:	7e 8f       	std	Y+30, r23	; 0x1e
     2e4:	8f 8f       	std	Y+31, r24	; 0x1f
     2e6:	98 a3       	std	Y+32, r25	; 0x20
     2e8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2ea:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2ec:	af 8d       	ldd	r26, Y+31	; 0x1f
     2ee:	b8 a1       	ldd	r27, Y+32	; 0x20
     2f0:	8d 83       	std	Y+5, r24	; 0x05
     2f2:	9e 83       	std	Y+6, r25	; 0x06
     2f4:	af 83       	std	Y+7, r26	; 0x07
     2f6:	b8 87       	std	Y+8, r27	; 0x08

000002f8 <.Loc.38>:
     2f8:	6d 81       	ldd	r22, Y+5	; 0x05
     2fa:	7e 81       	ldd	r23, Y+6	; 0x06
     2fc:	8f 81       	ldd	r24, Y+7	; 0x07
     2fe:	98 85       	ldd	r25, Y+8	; 0x08
     300:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     304:	69 a3       	std	Y+33, r22	; 0x21
     306:	7a a3       	std	Y+34, r23	; 0x22
     308:	8b a3       	std	Y+35, r24	; 0x23
     30a:	9c a3       	std	Y+36, r25	; 0x24
     30c:	89 a1       	ldd	r24, Y+33	; 0x21
     30e:	9a a1       	ldd	r25, Y+34	; 0x22
     310:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <agv_ultrasoon_LA+0x1>
     314:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <agv_ultrasoon_LA>
     318:	8f c0       	rjmp	.+286    	; 0x438 <.L6>

0000031a <.L5>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000010)
     31a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

0000031e <.Loc.40>:
     31e:	82 30       	cpi	r24, 0x02	; 2
     320:	09 f0       	breq	.+2      	; 0x324 <.Loc.41>

00000322 <L0^A>:
     322:	43 c0       	rjmp	.+134    	; 0x3aa <.L7>

00000324 <.Loc.41>:
    {
        agv_ultrasoon_LV = ((ICR3 - 4454)/4)*0.0343;
     324:	86 e9       	ldi	r24, 0x96	; 150
     326:	90 e0       	ldi	r25, 0x00	; 0
     328:	dc 01       	movw	r26, r24
     32a:	8d 91       	ld	r24, X+
     32c:	9c 91       	ld	r25, X

0000032e <.Loc.42>:
     32e:	86 56       	subi	r24, 0x66	; 102
     330:	91 41       	sbci	r25, 0x11	; 17

00000332 <.Loc.43>:
     332:	96 95       	lsr	r25
     334:	87 95       	ror	r24
     336:	96 95       	lsr	r25
     338:	87 95       	ror	r24

0000033a <.Loc.44>:
     33a:	9c 01       	movw	r18, r24
     33c:	40 e0       	ldi	r20, 0x00	; 0
     33e:	50 e0       	ldi	r21, 0x00	; 0
     340:	2d a3       	std	Y+37, r18	; 0x25
     342:	3e a3       	std	Y+38, r19	; 0x26
     344:	4f a3       	std	Y+39, r20	; 0x27
     346:	58 a7       	std	Y+40, r21	; 0x28
     348:	6d a1       	ldd	r22, Y+37	; 0x25
     34a:	7e a1       	ldd	r23, Y+38	; 0x26
     34c:	8f a1       	ldd	r24, Y+39	; 0x27
     34e:	98 a5       	ldd	r25, Y+40	; 0x28
     350:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     354:	69 87       	std	Y+9, r22	; 0x09
     356:	7a 87       	std	Y+10, r23	; 0x0a
     358:	8b 87       	std	Y+11, r24	; 0x0b
     35a:	9c 87       	std	Y+12, r25	; 0x0c
     35c:	28 e2       	ldi	r18, 0x28	; 40
     35e:	3e e7       	ldi	r19, 0x7E	; 126
     360:	4c e0       	ldi	r20, 0x0C	; 12
     362:	5d e3       	ldi	r21, 0x3D	; 61
     364:	69 85       	ldd	r22, Y+9	; 0x09
     366:	7a 85       	ldd	r23, Y+10	; 0x0a
     368:	8b 85       	ldd	r24, Y+11	; 0x0b
     36a:	9c 85       	ldd	r25, Y+12	; 0x0c
     36c:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     370:	69 a7       	std	Y+41, r22	; 0x29
     372:	7a a7       	std	Y+42, r23	; 0x2a
     374:	8b a7       	std	Y+43, r24	; 0x2b
     376:	9c a7       	std	Y+44, r25	; 0x2c
     378:	89 a5       	ldd	r24, Y+41	; 0x29
     37a:	9a a5       	ldd	r25, Y+42	; 0x2a
     37c:	ab a5       	ldd	r26, Y+43	; 0x2b
     37e:	bc a5       	ldd	r27, Y+44	; 0x2c
     380:	8d 87       	std	Y+13, r24	; 0x0d
     382:	9e 87       	std	Y+14, r25	; 0x0e
     384:	af 87       	std	Y+15, r26	; 0x0f
     386:	b8 8b       	std	Y+16, r27	; 0x10

00000388 <.Loc.45>:
     388:	6d 85       	ldd	r22, Y+13	; 0x0d
     38a:	7e 85       	ldd	r23, Y+14	; 0x0e
     38c:	8f 85       	ldd	r24, Y+15	; 0x0f
     38e:	98 89       	ldd	r25, Y+16	; 0x10
     390:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     394:	6d a7       	std	Y+45, r22	; 0x2d
     396:	7e a7       	std	Y+46, r23	; 0x2e
     398:	8f a7       	std	Y+47, r24	; 0x2f
     39a:	98 ab       	std	Y+48, r25	; 0x30
     39c:	8d a5       	ldd	r24, Y+45	; 0x2d
     39e:	9e a5       	ldd	r25, Y+46	; 0x2e
     3a0:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <agv_ultrasoon_LV+0x1>
     3a4:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <agv_ultrasoon_LV>
     3a8:	47 c0       	rjmp	.+142    	; 0x438 <.L6>

000003aa <.L7>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
     3aa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000003ae <.Loc.47>:
     3ae:	84 30       	cpi	r24, 0x04	; 4
     3b0:	09 f0       	breq	.+2      	; 0x3b4 <.Loc.48>

000003b2 <L0^A>:
     3b2:	42 c0       	rjmp	.+132    	; 0x438 <.L6>

000003b4 <.Loc.48>:
    {
        agv_ultrasoon_voor = ((ICR3 - 4454)/4)*0.0343;
     3b4:	86 e9       	ldi	r24, 0x96	; 150
     3b6:	90 e0       	ldi	r25, 0x00	; 0
     3b8:	dc 01       	movw	r26, r24
     3ba:	8d 91       	ld	r24, X+
     3bc:	9c 91       	ld	r25, X

000003be <.Loc.49>:
     3be:	86 56       	subi	r24, 0x66	; 102
     3c0:	91 41       	sbci	r25, 0x11	; 17

000003c2 <.Loc.50>:
     3c2:	96 95       	lsr	r25
     3c4:	87 95       	ror	r24
     3c6:	96 95       	lsr	r25
     3c8:	87 95       	ror	r24

000003ca <.Loc.51>:
     3ca:	9c 01       	movw	r18, r24
     3cc:	40 e0       	ldi	r20, 0x00	; 0
     3ce:	50 e0       	ldi	r21, 0x00	; 0
     3d0:	29 ab       	std	Y+49, r18	; 0x31
     3d2:	3a ab       	std	Y+50, r19	; 0x32
     3d4:	4b ab       	std	Y+51, r20	; 0x33
     3d6:	5c ab       	std	Y+52, r21	; 0x34
     3d8:	69 a9       	ldd	r22, Y+49	; 0x31
     3da:	7a a9       	ldd	r23, Y+50	; 0x32
     3dc:	8b a9       	ldd	r24, Y+51	; 0x33
     3de:	9c a9       	ldd	r25, Y+52	; 0x34
     3e0:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     3e4:	69 8b       	std	Y+17, r22	; 0x11
     3e6:	7a 8b       	std	Y+18, r23	; 0x12
     3e8:	8b 8b       	std	Y+19, r24	; 0x13
     3ea:	9c 8b       	std	Y+20, r25	; 0x14
     3ec:	28 e2       	ldi	r18, 0x28	; 40
     3ee:	3e e7       	ldi	r19, 0x7E	; 126
     3f0:	4c e0       	ldi	r20, 0x0C	; 12
     3f2:	5d e3       	ldi	r21, 0x3D	; 61
     3f4:	69 89       	ldd	r22, Y+17	; 0x11
     3f6:	7a 89       	ldd	r23, Y+18	; 0x12
     3f8:	8b 89       	ldd	r24, Y+19	; 0x13
     3fa:	9c 89       	ldd	r25, Y+20	; 0x14
     3fc:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     400:	6d ab       	std	Y+53, r22	; 0x35
     402:	7e ab       	std	Y+54, r23	; 0x36
     404:	8f ab       	std	Y+55, r24	; 0x37
     406:	98 af       	std	Y+56, r25	; 0x38
     408:	8d a9       	ldd	r24, Y+53	; 0x35
     40a:	9e a9       	ldd	r25, Y+54	; 0x36
     40c:	af a9       	ldd	r26, Y+55	; 0x37
     40e:	b8 ad       	ldd	r27, Y+56	; 0x38
     410:	8d 8b       	std	Y+21, r24	; 0x15
     412:	9e 8b       	std	Y+22, r25	; 0x16
     414:	af 8b       	std	Y+23, r26	; 0x17
     416:	b8 8f       	std	Y+24, r27	; 0x18

00000418 <.Loc.52>:
     418:	6d 89       	ldd	r22, Y+21	; 0x15
     41a:	7e 89       	ldd	r23, Y+22	; 0x16
     41c:	8f 89       	ldd	r24, Y+23	; 0x17
     41e:	98 8d       	ldd	r25, Y+24	; 0x18
     420:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     424:	69 af       	std	Y+57, r22	; 0x39
     426:	7a af       	std	Y+58, r23	; 0x3a
     428:	8b af       	std	Y+59, r24	; 0x3b
     42a:	9c af       	std	Y+60, r25	; 0x3c
     42c:	89 ad       	ldd	r24, Y+57	; 0x39
     42e:	9a ad       	ldd	r25, Y+58	; 0x3a
     430:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <agv_ultrasoon_voor+0x1>
     434:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <agv_ultrasoon_voor>

00000438 <.L6>:
    }
    PCMSK2 = 0; //zet pin change uit voor rising edge
     438:	8d e6       	ldi	r24, 0x6D	; 109
     43a:	90 e0       	ldi	r25, 0x00	; 0

0000043c <.Loc.54>:
     43c:	dc 01       	movw	r26, r24
     43e:	1c 92       	st	X, r1

00000440 <.Loc.55>:
}
     440:	00 00       	nop
     442:	ec 96       	adiw	r28, 0x3c	; 60
     444:	0f b6       	in	r0, 0x3f	; 63
     446:	f8 94       	cli
     448:	de bf       	out	0x3e, r29	; 62
     44a:	0f be       	out	0x3f, r0	; 63
     44c:	cd bf       	out	0x3d, r28	; 61
     44e:	df 91       	pop	r29
     450:	cf 91       	pop	r28
     452:	ff 91       	pop	r31
     454:	ef 91       	pop	r30
     456:	bf 91       	pop	r27
     458:	af 91       	pop	r26
     45a:	9f 91       	pop	r25
     45c:	8f 91       	pop	r24
     45e:	7f 91       	pop	r23
     460:	6f 91       	pop	r22
     462:	5f 91       	pop	r21
     464:	4f 91       	pop	r20
     466:	3f 91       	pop	r19
     468:	2f 91       	pop	r18
     46a:	0f 90       	pop	r0
     46c:	0b be       	out	0x3b, r0	; 59
     46e:	0f 90       	pop	r0
     470:	0f be       	out	0x3f, r0	; 63
     472:	0f 90       	pop	r0
     474:	1f 90       	pop	r1
     476:	18 95       	reti

00000478 <__vector_11>:

ISR(PCINT2_vect)
{
     478:	1f 92       	push	r1
     47a:	0f 92       	push	r0
     47c:	0f b6       	in	r0, 0x3f	; 63
     47e:	0f 92       	push	r0
     480:	11 24       	eor	r1, r1
     482:	0b b6       	in	r0, 0x3b	; 59
     484:	0f 92       	push	r0
     486:	2f 93       	push	r18
     488:	3f 93       	push	r19
     48a:	4f 93       	push	r20
     48c:	5f 93       	push	r21
     48e:	6f 93       	push	r22
     490:	7f 93       	push	r23
     492:	8f 93       	push	r24
     494:	9f 93       	push	r25
     496:	af 93       	push	r26
     498:	bf 93       	push	r27
     49a:	ef 93       	push	r30
     49c:	ff 93       	push	r31
     49e:	cf 93       	push	r28
     4a0:	df 93       	push	r29
     4a2:	cd b7       	in	r28, 0x3d	; 61
     4a4:	de b7       	in	r29, 0x3e	; 62
     4a6:	ec 97       	sbiw	r28, 0x3c	; 60
     4a8:	de bf       	out	0x3e, r29	; 62
     4aa:	cd bf       	out	0x3d, r28	; 61

000004ac <.Loc.57>:
    if(agv_ultrasoon_current_sensor == 0b00000001)
     4ac:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000004b0 <.Loc.58>:
     4b0:	81 30       	cpi	r24, 0x01	; 1
     4b2:	09 f0       	breq	.+2      	; 0x4b6 <.Loc.59>

000004b4 <L0^A>:
     4b4:	43 c0       	rjmp	.+134    	; 0x53c <.L9>

000004b6 <.Loc.59>:
    {
        agv_ultrasoon_LA = ((TCNT3 - 4454)/4)*0.0343;
     4b6:	84 e9       	ldi	r24, 0x94	; 148
     4b8:	90 e0       	ldi	r25, 0x00	; 0
     4ba:	dc 01       	movw	r26, r24
     4bc:	8d 91       	ld	r24, X+
     4be:	9c 91       	ld	r25, X

000004c0 <.Loc.60>:
     4c0:	86 56       	subi	r24, 0x66	; 102
     4c2:	91 41       	sbci	r25, 0x11	; 17

000004c4 <.Loc.61>:
     4c4:	96 95       	lsr	r25
     4c6:	87 95       	ror	r24
     4c8:	96 95       	lsr	r25
     4ca:	87 95       	ror	r24

000004cc <.Loc.62>:
     4cc:	9c 01       	movw	r18, r24
     4ce:	40 e0       	ldi	r20, 0x00	; 0
     4d0:	50 e0       	ldi	r21, 0x00	; 0
     4d2:	29 8f       	std	Y+25, r18	; 0x19
     4d4:	3a 8f       	std	Y+26, r19	; 0x1a
     4d6:	4b 8f       	std	Y+27, r20	; 0x1b
     4d8:	5c 8f       	std	Y+28, r21	; 0x1c
     4da:	69 8d       	ldd	r22, Y+25	; 0x19
     4dc:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4de:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4e0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4e2:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     4e6:	69 83       	std	Y+1, r22	; 0x01
     4e8:	7a 83       	std	Y+2, r23	; 0x02
     4ea:	8b 83       	std	Y+3, r24	; 0x03
     4ec:	9c 83       	std	Y+4, r25	; 0x04
     4ee:	28 e2       	ldi	r18, 0x28	; 40
     4f0:	3e e7       	ldi	r19, 0x7E	; 126
     4f2:	4c e0       	ldi	r20, 0x0C	; 12
     4f4:	5d e3       	ldi	r21, 0x3D	; 61
     4f6:	69 81       	ldd	r22, Y+1	; 0x01
     4f8:	7a 81       	ldd	r23, Y+2	; 0x02
     4fa:	8b 81       	ldd	r24, Y+3	; 0x03
     4fc:	9c 81       	ldd	r25, Y+4	; 0x04
     4fe:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     502:	6d 8f       	std	Y+29, r22	; 0x1d
     504:	7e 8f       	std	Y+30, r23	; 0x1e
     506:	8f 8f       	std	Y+31, r24	; 0x1f
     508:	98 a3       	std	Y+32, r25	; 0x20
     50a:	8d 8d       	ldd	r24, Y+29	; 0x1d
     50c:	9e 8d       	ldd	r25, Y+30	; 0x1e
     50e:	af 8d       	ldd	r26, Y+31	; 0x1f
     510:	b8 a1       	ldd	r27, Y+32	; 0x20
     512:	8d 83       	std	Y+5, r24	; 0x05
     514:	9e 83       	std	Y+6, r25	; 0x06
     516:	af 83       	std	Y+7, r26	; 0x07
     518:	b8 87       	std	Y+8, r27	; 0x08

0000051a <.Loc.63>:
     51a:	6d 81       	ldd	r22, Y+5	; 0x05
     51c:	7e 81       	ldd	r23, Y+6	; 0x06
     51e:	8f 81       	ldd	r24, Y+7	; 0x07
     520:	98 85       	ldd	r25, Y+8	; 0x08
     522:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     526:	69 a3       	std	Y+33, r22	; 0x21
     528:	7a a3       	std	Y+34, r23	; 0x22
     52a:	8b a3       	std	Y+35, r24	; 0x23
     52c:	9c a3       	std	Y+36, r25	; 0x24
     52e:	89 a1       	ldd	r24, Y+33	; 0x21
     530:	9a a1       	ldd	r25, Y+34	; 0x22
     532:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <agv_ultrasoon_LA+0x1>
     536:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <agv_ultrasoon_LA>
     53a:	8f c0       	rjmp	.+286    	; 0x65a <.L10>

0000053c <.L9>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000010)
     53c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

00000540 <.Loc.65>:
     540:	82 30       	cpi	r24, 0x02	; 2
     542:	09 f0       	breq	.+2      	; 0x546 <.Loc.66>

00000544 <L0^A>:
     544:	43 c0       	rjmp	.+134    	; 0x5cc <.L11>

00000546 <.Loc.66>:
    {
        agv_ultrasoon_LV = ((TCNT3 - 4454)/4)*0.0343;
     546:	84 e9       	ldi	r24, 0x94	; 148
     548:	90 e0       	ldi	r25, 0x00	; 0
     54a:	dc 01       	movw	r26, r24
     54c:	8d 91       	ld	r24, X+
     54e:	9c 91       	ld	r25, X

00000550 <.Loc.67>:
     550:	86 56       	subi	r24, 0x66	; 102
     552:	91 41       	sbci	r25, 0x11	; 17

00000554 <.Loc.68>:
     554:	96 95       	lsr	r25
     556:	87 95       	ror	r24
     558:	96 95       	lsr	r25
     55a:	87 95       	ror	r24

0000055c <.Loc.69>:
     55c:	9c 01       	movw	r18, r24
     55e:	40 e0       	ldi	r20, 0x00	; 0
     560:	50 e0       	ldi	r21, 0x00	; 0
     562:	2d a3       	std	Y+37, r18	; 0x25
     564:	3e a3       	std	Y+38, r19	; 0x26
     566:	4f a3       	std	Y+39, r20	; 0x27
     568:	58 a7       	std	Y+40, r21	; 0x28
     56a:	6d a1       	ldd	r22, Y+37	; 0x25
     56c:	7e a1       	ldd	r23, Y+38	; 0x26
     56e:	8f a1       	ldd	r24, Y+39	; 0x27
     570:	98 a5       	ldd	r25, Y+40	; 0x28
     572:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     576:	69 87       	std	Y+9, r22	; 0x09
     578:	7a 87       	std	Y+10, r23	; 0x0a
     57a:	8b 87       	std	Y+11, r24	; 0x0b
     57c:	9c 87       	std	Y+12, r25	; 0x0c
     57e:	28 e2       	ldi	r18, 0x28	; 40
     580:	3e e7       	ldi	r19, 0x7E	; 126
     582:	4c e0       	ldi	r20, 0x0C	; 12
     584:	5d e3       	ldi	r21, 0x3D	; 61
     586:	69 85       	ldd	r22, Y+9	; 0x09
     588:	7a 85       	ldd	r23, Y+10	; 0x0a
     58a:	8b 85       	ldd	r24, Y+11	; 0x0b
     58c:	9c 85       	ldd	r25, Y+12	; 0x0c
     58e:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     592:	69 a7       	std	Y+41, r22	; 0x29
     594:	7a a7       	std	Y+42, r23	; 0x2a
     596:	8b a7       	std	Y+43, r24	; 0x2b
     598:	9c a7       	std	Y+44, r25	; 0x2c
     59a:	89 a5       	ldd	r24, Y+41	; 0x29
     59c:	9a a5       	ldd	r25, Y+42	; 0x2a
     59e:	ab a5       	ldd	r26, Y+43	; 0x2b
     5a0:	bc a5       	ldd	r27, Y+44	; 0x2c
     5a2:	8d 87       	std	Y+13, r24	; 0x0d
     5a4:	9e 87       	std	Y+14, r25	; 0x0e
     5a6:	af 87       	std	Y+15, r26	; 0x0f
     5a8:	b8 8b       	std	Y+16, r27	; 0x10

000005aa <.Loc.70>:
     5aa:	6d 85       	ldd	r22, Y+13	; 0x0d
     5ac:	7e 85       	ldd	r23, Y+14	; 0x0e
     5ae:	8f 85       	ldd	r24, Y+15	; 0x0f
     5b0:	98 89       	ldd	r25, Y+16	; 0x10
     5b2:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     5b6:	6d a7       	std	Y+45, r22	; 0x2d
     5b8:	7e a7       	std	Y+46, r23	; 0x2e
     5ba:	8f a7       	std	Y+47, r24	; 0x2f
     5bc:	98 ab       	std	Y+48, r25	; 0x30
     5be:	8d a5       	ldd	r24, Y+45	; 0x2d
     5c0:	9e a5       	ldd	r25, Y+46	; 0x2e
     5c2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <agv_ultrasoon_LV+0x1>
     5c6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <agv_ultrasoon_LV>
     5ca:	47 c0       	rjmp	.+142    	; 0x65a <.L10>

000005cc <.L11>:
     }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
     5cc:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000005d0 <.Loc.72>:
     5d0:	84 30       	cpi	r24, 0x04	; 4
     5d2:	09 f0       	breq	.+2      	; 0x5d6 <.Loc.73>

000005d4 <L0^A>:
     5d4:	42 c0       	rjmp	.+132    	; 0x65a <.L10>

000005d6 <.Loc.73>:
    {
        agv_ultrasoon_voor = ((TCNT3 - 4454)/4)*0.0343;
     5d6:	84 e9       	ldi	r24, 0x94	; 148
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	dc 01       	movw	r26, r24
     5dc:	8d 91       	ld	r24, X+
     5de:	9c 91       	ld	r25, X

000005e0 <.Loc.74>:
     5e0:	86 56       	subi	r24, 0x66	; 102
     5e2:	91 41       	sbci	r25, 0x11	; 17

000005e4 <.Loc.75>:
     5e4:	96 95       	lsr	r25
     5e6:	87 95       	ror	r24
     5e8:	96 95       	lsr	r25
     5ea:	87 95       	ror	r24

000005ec <.Loc.76>:
     5ec:	9c 01       	movw	r18, r24
     5ee:	40 e0       	ldi	r20, 0x00	; 0
     5f0:	50 e0       	ldi	r21, 0x00	; 0
     5f2:	29 ab       	std	Y+49, r18	; 0x31
     5f4:	3a ab       	std	Y+50, r19	; 0x32
     5f6:	4b ab       	std	Y+51, r20	; 0x33
     5f8:	5c ab       	std	Y+52, r21	; 0x34
     5fa:	69 a9       	ldd	r22, Y+49	; 0x31
     5fc:	7a a9       	ldd	r23, Y+50	; 0x32
     5fe:	8b a9       	ldd	r24, Y+51	; 0x33
     600:	9c a9       	ldd	r25, Y+52	; 0x34
     602:	0e 94 f8 0a 	call	0x15f0	; 0x15f0 <__floatunsisf>
     606:	69 8b       	std	Y+17, r22	; 0x11
     608:	7a 8b       	std	Y+18, r23	; 0x12
     60a:	8b 8b       	std	Y+19, r24	; 0x13
     60c:	9c 8b       	std	Y+20, r25	; 0x14
     60e:	28 e2       	ldi	r18, 0x28	; 40
     610:	3e e7       	ldi	r19, 0x7E	; 126
     612:	4c e0       	ldi	r20, 0x0C	; 12
     614:	5d e3       	ldi	r21, 0x3D	; 61
     616:	69 89       	ldd	r22, Y+17	; 0x11
     618:	7a 89       	ldd	r23, Y+18	; 0x12
     61a:	8b 89       	ldd	r24, Y+19	; 0x13
     61c:	9c 89       	ldd	r25, Y+20	; 0x14
     61e:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     622:	6d ab       	std	Y+53, r22	; 0x35
     624:	7e ab       	std	Y+54, r23	; 0x36
     626:	8f ab       	std	Y+55, r24	; 0x37
     628:	98 af       	std	Y+56, r25	; 0x38
     62a:	8d a9       	ldd	r24, Y+53	; 0x35
     62c:	9e a9       	ldd	r25, Y+54	; 0x36
     62e:	af a9       	ldd	r26, Y+55	; 0x37
     630:	b8 ad       	ldd	r27, Y+56	; 0x38
     632:	8d 8b       	std	Y+21, r24	; 0x15
     634:	9e 8b       	std	Y+22, r25	; 0x16
     636:	af 8b       	std	Y+23, r26	; 0x17
     638:	b8 8f       	std	Y+24, r27	; 0x18

0000063a <.Loc.77>:
     63a:	6d 89       	ldd	r22, Y+21	; 0x15
     63c:	7e 89       	ldd	r23, Y+22	; 0x16
     63e:	8f 89       	ldd	r24, Y+23	; 0x17
     640:	98 8d       	ldd	r25, Y+24	; 0x18
     642:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
     646:	69 af       	std	Y+57, r22	; 0x39
     648:	7a af       	std	Y+58, r23	; 0x3a
     64a:	8b af       	std	Y+59, r24	; 0x3b
     64c:	9c af       	std	Y+60, r25	; 0x3c
     64e:	89 ad       	ldd	r24, Y+57	; 0x39
     650:	9a ad       	ldd	r25, Y+58	; 0x3a
     652:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <agv_ultrasoon_voor+0x1>
     656:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <agv_ultrasoon_voor>

0000065a <.L10>:
    }
    TIMSK3 &= ~(1<<ICIE3); //zet timer3 overflow flag uit
     65a:	81 e7       	ldi	r24, 0x71	; 113
     65c:	90 e0       	ldi	r25, 0x00	; 0
     65e:	dc 01       	movw	r26, r24
     660:	2c 91       	ld	r18, X

00000662 <.Loc.79>:
     662:	81 e7       	ldi	r24, 0x71	; 113
     664:	90 e0       	ldi	r25, 0x00	; 0

00000666 <.Loc.80>:
     666:	2f 7d       	andi	r18, 0xDF	; 223
     668:	fc 01       	movw	r30, r24
     66a:	20 83       	st	Z, r18

0000066c <.Loc.81>:
    PCMSK2 = 0; //zet pin change uit voor rising edge
     66c:	8d e6       	ldi	r24, 0x6D	; 109
     66e:	90 e0       	ldi	r25, 0x00	; 0

00000670 <.Loc.82>:
     670:	dc 01       	movw	r26, r24
     672:	1c 92       	st	X, r1

00000674 <.Loc.83>:
}
     674:	00 00       	nop
     676:	ec 96       	adiw	r28, 0x3c	; 60
     678:	0f b6       	in	r0, 0x3f	; 63
     67a:	f8 94       	cli
     67c:	de bf       	out	0x3e, r29	; 62
     67e:	0f be       	out	0x3f, r0	; 63
     680:	cd bf       	out	0x3d, r28	; 61
     682:	df 91       	pop	r29
     684:	cf 91       	pop	r28
     686:	ff 91       	pop	r31
     688:	ef 91       	pop	r30
     68a:	bf 91       	pop	r27
     68c:	af 91       	pop	r26
     68e:	9f 91       	pop	r25
     690:	8f 91       	pop	r24
     692:	7f 91       	pop	r23
     694:	6f 91       	pop	r22
     696:	5f 91       	pop	r21
     698:	4f 91       	pop	r20
     69a:	3f 91       	pop	r19
     69c:	2f 91       	pop	r18
     69e:	0f 90       	pop	r0
     6a0:	0b be       	out	0x3b, r0	; 59
     6a2:	0f 90       	pop	r0
     6a4:	0f be       	out	0x3f, r0	; 63
     6a6:	0f 90       	pop	r0
     6a8:	1f 90       	pop	r1
     6aa:	18 95       	reti

000006ac <init_time>:
*/
#include <avr/io.h>
#include <avr/interrupt.h>
#include "clock.h"

void init_time(){
     6ac:	cf 93       	push	r28
     6ae:	df 93       	push	r29
     6b0:	cd b7       	in	r28, 0x3d	; 61
     6b2:	de b7       	in	r29, 0x3e	; 62

000006b4 <.Loc.1>:
    cli();
     6b4:	f8 94       	cli

000006b6 <.Loc.2>:
    TCCR0A = 0;
     6b6:	84 e4       	ldi	r24, 0x44	; 68
     6b8:	90 e0       	ldi	r25, 0x00	; 0

000006ba <.Loc.3>:
     6ba:	fc 01       	movw	r30, r24
     6bc:	10 82       	st	Z, r1

000006be <.Loc.4>:
    TCCR0B = 0;
     6be:	85 e4       	ldi	r24, 0x45	; 69
     6c0:	90 e0       	ldi	r25, 0x00	; 0

000006c2 <.Loc.5>:
     6c2:	fc 01       	movw	r30, r24
     6c4:	10 82       	st	Z, r1

000006c6 <.Loc.6>:
    TCNT0 = 6;
     6c6:	86 e4       	ldi	r24, 0x46	; 70
     6c8:	90 e0       	ldi	r25, 0x00	; 0

000006ca <.Loc.7>:
     6ca:	26 e0       	ldi	r18, 0x06	; 6
     6cc:	fc 01       	movw	r30, r24
     6ce:	20 83       	st	Z, r18

000006d0 <.Loc.8>:
    TCCR0A |= (1 << WGM01);
     6d0:	84 e4       	ldi	r24, 0x44	; 68
     6d2:	90 e0       	ldi	r25, 0x00	; 0
     6d4:	fc 01       	movw	r30, r24
     6d6:	20 81       	ld	r18, Z
     6d8:	84 e4       	ldi	r24, 0x44	; 68
     6da:	90 e0       	ldi	r25, 0x00	; 0

000006dc <.Loc.9>:
     6dc:	22 60       	ori	r18, 0x02	; 2
     6de:	fc 01       	movw	r30, r24
     6e0:	20 83       	st	Z, r18

000006e2 <.Loc.10>:
    TCCR0B |= (1 << CS01) | (1 << CS00);//prescaler 64
     6e2:	85 e4       	ldi	r24, 0x45	; 69
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	fc 01       	movw	r30, r24
     6e8:	20 81       	ld	r18, Z
     6ea:	85 e4       	ldi	r24, 0x45	; 69
     6ec:	90 e0       	ldi	r25, 0x00	; 0

000006ee <.Loc.11>:
     6ee:	23 60       	ori	r18, 0x03	; 3
     6f0:	fc 01       	movw	r30, r24
     6f2:	20 83       	st	Z, r18

000006f4 <.Loc.12>:
    TIMSK0 |= (1 << TOIE0);
     6f4:	8e e6       	ldi	r24, 0x6E	; 110
     6f6:	90 e0       	ldi	r25, 0x00	; 0
     6f8:	fc 01       	movw	r30, r24
     6fa:	20 81       	ld	r18, Z
     6fc:	8e e6       	ldi	r24, 0x6E	; 110
     6fe:	90 e0       	ldi	r25, 0x00	; 0

00000700 <.Loc.13>:
     700:	21 60       	ori	r18, 0x01	; 1
     702:	fc 01       	movw	r30, r24
     704:	20 83       	st	Z, r18

00000706 <.Loc.14>:
    sei();
     706:	78 94       	sei

00000708 <.Loc.15>:
    //clock 0 defineren
    //interupt setpoint vaststellen
}
     708:	00 00       	nop
     70a:	df 91       	pop	r29
     70c:	cf 91       	pop	r28
     70e:	08 95       	ret

00000710 <time_current_ms>:

int time_current_ms(int update){//0 = return, 1 = time++
     710:	8f 92       	push	r8
     712:	9f 92       	push	r9
     714:	af 92       	push	r10
     716:	bf 92       	push	r11
     718:	cf 92       	push	r12
     71a:	df 92       	push	r13
     71c:	ef 92       	push	r14
     71e:	ff 92       	push	r15
     720:	0f 93       	push	r16
     722:	1f 93       	push	r17
     724:	cf 93       	push	r28
     726:	df 93       	push	r29
     728:	0f 92       	push	r0
     72a:	0f 92       	push	r0
     72c:	cd b7       	in	r28, 0x3d	; 61
     72e:	de b7       	in	r29, 0x3e	; 62
     730:	9a 83       	std	Y+2, r25	; 0x02
     732:	89 83       	std	Y+1, r24	; 0x01

00000734 <.Loc.17>:
    static unsigned long long int time_ms = 0;
    if (update == 1){
     734:	89 81       	ldd	r24, Y+1	; 0x01
     736:	9a 81       	ldd	r25, Y+2	; 0x02
     738:	81 30       	cpi	r24, 0x01	; 1
     73a:	91 05       	cpc	r25, r1
     73c:	99 f5       	brne	.+102    	; 0x7a4 <.L3>

0000073e <.Loc.18>:
        time_ms++;
     73e:	80 90 08 02 	lds	r8, 0x0208	; 0x800208 <time_ms.0>
     742:	90 90 09 02 	lds	r9, 0x0209	; 0x800209 <time_ms.0+0x1>
     746:	a0 90 0a 02 	lds	r10, 0x020A	; 0x80020a <time_ms.0+0x2>
     74a:	b0 90 0b 02 	lds	r11, 0x020B	; 0x80020b <time_ms.0+0x3>
     74e:	c0 90 0c 02 	lds	r12, 0x020C	; 0x80020c <time_ms.0+0x4>
     752:	d0 90 0d 02 	lds	r13, 0x020D	; 0x80020d <time_ms.0+0x5>
     756:	e0 90 0e 02 	lds	r14, 0x020E	; 0x80020e <time_ms.0+0x6>
     75a:	f0 90 0f 02 	lds	r15, 0x020F	; 0x80020f <time_ms.0+0x7>
     75e:	28 2d       	mov	r18, r8
     760:	39 2d       	mov	r19, r9
     762:	4a 2d       	mov	r20, r10
     764:	5b 2d       	mov	r21, r11
     766:	6c 2d       	mov	r22, r12
     768:	7d 2d       	mov	r23, r13
     76a:	8e 2d       	mov	r24, r14
     76c:	9f 2d       	mov	r25, r15
     76e:	a1 e0       	ldi	r26, 0x01	; 1
     770:	0e 94 ad 0a 	call	0x155a	; 0x155a <__adddi3_s8>
     774:	82 2e       	mov	r8, r18
     776:	93 2e       	mov	r9, r19
     778:	a4 2e       	mov	r10, r20
     77a:	b5 2e       	mov	r11, r21
     77c:	c6 2e       	mov	r12, r22
     77e:	d7 2e       	mov	r13, r23
     780:	e8 2e       	mov	r14, r24
     782:	f9 2e       	mov	r15, r25
     784:	80 92 08 02 	sts	0x0208, r8	; 0x800208 <time_ms.0>
     788:	90 92 09 02 	sts	0x0209, r9	; 0x800209 <time_ms.0+0x1>
     78c:	a0 92 0a 02 	sts	0x020A, r10	; 0x80020a <time_ms.0+0x2>
     790:	b0 92 0b 02 	sts	0x020B, r11	; 0x80020b <time_ms.0+0x3>
     794:	c0 92 0c 02 	sts	0x020C, r12	; 0x80020c <time_ms.0+0x4>
     798:	d0 92 0d 02 	sts	0x020D, r13	; 0x80020d <time_ms.0+0x5>
     79c:	e0 92 0e 02 	sts	0x020E, r14	; 0x80020e <time_ms.0+0x6>
     7a0:	f0 92 0f 02 	sts	0x020F, r15	; 0x80020f <time_ms.0+0x7>

000007a4 <.L3>:
    }
    return(time_ms);
     7a4:	00 91 08 02 	lds	r16, 0x0208	; 0x800208 <time_ms.0>
     7a8:	10 91 09 02 	lds	r17, 0x0209	; 0x800209 <time_ms.0+0x1>
     7ac:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <time_ms.0+0x2>
     7b0:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <time_ms.0+0x3>
     7b4:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <time_ms.0+0x4>
     7b8:	50 91 0d 02 	lds	r21, 0x020D	; 0x80020d <time_ms.0+0x5>
     7bc:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <time_ms.0+0x6>
     7c0:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <time_ms.0+0x7>
     7c4:	c8 01       	movw	r24, r16

000007c6 <.Loc.20>:
}
     7c6:	0f 90       	pop	r0
     7c8:	0f 90       	pop	r0
     7ca:	df 91       	pop	r29
     7cc:	cf 91       	pop	r28
     7ce:	1f 91       	pop	r17
     7d0:	0f 91       	pop	r16
     7d2:	ff 90       	pop	r15
     7d4:	ef 90       	pop	r14
     7d6:	df 90       	pop	r13
     7d8:	cf 90       	pop	r12
     7da:	bf 90       	pop	r11
     7dc:	af 90       	pop	r10
     7de:	9f 90       	pop	r9
     7e0:	8f 90       	pop	r8
     7e2:	08 95       	ret

000007e4 <__vector_23>:

ISR(TIMER0_OVF_vect){
     7e4:	1f 92       	push	r1
     7e6:	0f 92       	push	r0
     7e8:	0f b6       	in	r0, 0x3f	; 63
     7ea:	0f 92       	push	r0
     7ec:	11 24       	eor	r1, r1
     7ee:	0b b6       	in	r0, 0x3b	; 59
     7f0:	0f 92       	push	r0
     7f2:	2f 93       	push	r18
     7f4:	3f 93       	push	r19
     7f6:	4f 93       	push	r20
     7f8:	5f 93       	push	r21
     7fa:	6f 93       	push	r22
     7fc:	7f 93       	push	r23
     7fe:	8f 93       	push	r24
     800:	9f 93       	push	r25
     802:	af 93       	push	r26
     804:	bf 93       	push	r27
     806:	ef 93       	push	r30
     808:	ff 93       	push	r31
     80a:	cf 93       	push	r28
     80c:	df 93       	push	r29
     80e:	cd b7       	in	r28, 0x3d	; 61
     810:	de b7       	in	r29, 0x3e	; 62

00000812 <.Loc.22>:
    TCNT0 = 6;
     812:	86 e4       	ldi	r24, 0x46	; 70
     814:	90 e0       	ldi	r25, 0x00	; 0

00000816 <.Loc.23>:
     816:	26 e0       	ldi	r18, 0x06	; 6
     818:	fc 01       	movw	r30, r24
     81a:	20 83       	st	Z, r18

0000081c <.Loc.24>:
    time_current_ms(1);
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	90 e0       	ldi	r25, 0x00	; 0
     820:	0e 94 88 03 	call	0x710	; 0x710 <time_current_ms>

00000824 <.Loc.25>:
}
     824:	00 00       	nop
     826:	df 91       	pop	r29
     828:	cf 91       	pop	r28
     82a:	ff 91       	pop	r31
     82c:	ef 91       	pop	r30
     82e:	bf 91       	pop	r27
     830:	af 91       	pop	r26
     832:	9f 91       	pop	r25
     834:	8f 91       	pop	r24
     836:	7f 91       	pop	r23
     838:	6f 91       	pop	r22
     83a:	5f 91       	pop	r21
     83c:	4f 91       	pop	r20
     83e:	3f 91       	pop	r19
     840:	2f 91       	pop	r18
     842:	0f 90       	pop	r0
     844:	0b be       	out	0x3b, r0	; 59
     846:	0f 90       	pop	r0
     848:	0f be       	out	0x3f, r0	; 63
     84a:	0f 90       	pop	r0
     84c:	1f 90       	pop	r1
     84e:	18 95       	reti

00000850 <PIN_setup>:
float overdracht_L;
float overdracht_R;
unsigned long long int boom_timer = 0;

void PIN_setup ()
{
     850:	cf 93       	push	r28
     852:	df 93       	push	r29
     854:	cd b7       	in	r28, 0x3d	; 61
     856:	de b7       	in	r29, 0x3e	; 62

00000858 <.Loc.1>:
    DDRB |= (1<<LED);
     858:	84 e2       	ldi	r24, 0x24	; 36
     85a:	90 e0       	ldi	r25, 0x00	; 0
     85c:	fc 01       	movw	r30, r24
     85e:	20 81       	ld	r18, Z
     860:	84 e2       	ldi	r24, 0x24	; 36
     862:	90 e0       	ldi	r25, 0x00	; 0

00000864 <.Loc.2>:
     864:	22 60       	ori	r18, 0x02	; 2
     866:	fc 01       	movw	r30, r24
     868:	20 83       	st	Z, r18

0000086a <.Loc.3>:
    PORTB |= (1<<LED);
     86a:	85 e2       	ldi	r24, 0x25	; 37
     86c:	90 e0       	ldi	r25, 0x00	; 0
     86e:	fc 01       	movw	r30, r24
     870:	20 81       	ld	r18, Z
     872:	85 e2       	ldi	r24, 0x25	; 37
     874:	90 e0       	ldi	r25, 0x00	; 0

00000876 <.Loc.4>:
     876:	22 60       	ori	r18, 0x02	; 2
     878:	fc 01       	movw	r30, r24
     87a:	20 83       	st	Z, r18

0000087c <.Loc.5>:
    DDRF |= (1<<IR_L);
     87c:	80 e3       	ldi	r24, 0x30	; 48
     87e:	90 e0       	ldi	r25, 0x00	; 0
     880:	fc 01       	movw	r30, r24
     882:	20 81       	ld	r18, Z
     884:	80 e3       	ldi	r24, 0x30	; 48
     886:	90 e0       	ldi	r25, 0x00	; 0

00000888 <.Loc.6>:
     888:	20 61       	ori	r18, 0x10	; 16
     88a:	fc 01       	movw	r30, r24
     88c:	20 83       	st	Z, r18

0000088e <.Loc.7>:
    DDRF |= (1<<IR_R);
     88e:	80 e3       	ldi	r24, 0x30	; 48
     890:	90 e0       	ldi	r25, 0x00	; 0
     892:	fc 01       	movw	r30, r24
     894:	20 81       	ld	r18, Z
     896:	80 e3       	ldi	r24, 0x30	; 48
     898:	90 e0       	ldi	r25, 0x00	; 0

0000089a <.Loc.8>:
     89a:	28 60       	ori	r18, 0x08	; 8
     89c:	fc 01       	movw	r30, r24
     89e:	20 83       	st	Z, r18

000008a0 <.Loc.9>:
}
     8a0:	00 00       	nop
     8a2:	df 91       	pop	r29
     8a4:	cf 91       	pop	r28
     8a6:	08 95       	ret

000008a8 <init_h_brug>:

void init_h_brug (void)
{
     8a8:	cf 93       	push	r28
     8aa:	df 93       	push	r29
     8ac:	cd b7       	in	r28, 0x3d	; 61
     8ae:	de b7       	in	r29, 0x3e	; 62

000008b0 <.Loc.11>:
    //timer PWM motoren
    TCCR4A = (1<<COM4A1) | (1<<COM4A0) | (1<<COM4B1) | (1<<COM4B0) | (1<<COM4C1) | (1<<COM4C0) | (1<<WGM41) | (0<<WGM40); //COM1xn is de PWM instelling voor de pins
     8b0:	80 ea       	ldi	r24, 0xA0	; 160
     8b2:	90 e0       	ldi	r25, 0x00	; 0

000008b4 <.Loc.12>:
     8b4:	2e ef       	ldi	r18, 0xFE	; 254
     8b6:	fc 01       	movw	r30, r24
     8b8:	20 83       	st	Z, r18

000008ba <.Loc.13>:
    TCCR4B = (1<<WGM43) | (1<<WGM42) | (0<<CS42) | (1<<CS41) | (0<<CS40); // CS1n is de prescaler 8 WGM1n is de PWM instelling voor timer 1 (fastPWM)
     8ba:	81 ea       	ldi	r24, 0xA1	; 161
     8bc:	90 e0       	ldi	r25, 0x00	; 0

000008be <.Loc.14>:
     8be:	2a e1       	ldi	r18, 0x1A	; 26
     8c0:	fc 01       	movw	r30, r24
     8c2:	20 83       	st	Z, r18

000008c4 <.Loc.15>:
    OCR4A = 0;
     8c4:	88 ea       	ldi	r24, 0xA8	; 168
     8c6:	90 e0       	ldi	r25, 0x00	; 0

000008c8 <.Loc.16>:
     8c8:	fc 01       	movw	r30, r24
     8ca:	11 82       	std	Z+1, r1	; 0x01
     8cc:	10 82       	st	Z, r1

000008ce <.Loc.17>:
    OCR4B = 0;
     8ce:	8a ea       	ldi	r24, 0xAA	; 170
     8d0:	90 e0       	ldi	r25, 0x00	; 0

000008d2 <.Loc.18>:
     8d2:	fc 01       	movw	r30, r24
     8d4:	11 82       	std	Z+1, r1	; 0x01
     8d6:	10 82       	st	Z, r1

000008d8 <.Loc.19>:
    ICR4 = 1260;
     8d8:	86 ea       	ldi	r24, 0xA6	; 166
     8da:	90 e0       	ldi	r25, 0x00	; 0

000008dc <.Loc.20>:
     8dc:	2c ee       	ldi	r18, 0xEC	; 236
     8de:	34 e0       	ldi	r19, 0x04	; 4
     8e0:	fc 01       	movw	r30, r24
     8e2:	31 83       	std	Z+1, r19	; 0x01
     8e4:	20 83       	st	Z, r18

000008e6 <.Loc.21>:

    //pinout h-brug
    DDRH |= (1 << motorL_PWM);
     8e6:	81 e0       	ldi	r24, 0x01	; 1
     8e8:	91 e0       	ldi	r25, 0x01	; 1
     8ea:	fc 01       	movw	r30, r24
     8ec:	20 81       	ld	r18, Z
     8ee:	81 e0       	ldi	r24, 0x01	; 1
     8f0:	91 e0       	ldi	r25, 0x01	; 1

000008f2 <.Loc.22>:
     8f2:	28 60       	ori	r18, 0x08	; 8
     8f4:	fc 01       	movw	r30, r24
     8f6:	20 83       	st	Z, r18

000008f8 <.Loc.23>:
    DDRE |= (1 << motorL_1);
     8f8:	8d e2       	ldi	r24, 0x2D	; 45
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	fc 01       	movw	r30, r24
     8fe:	20 81       	ld	r18, Z
     900:	8d e2       	ldi	r24, 0x2D	; 45
     902:	90 e0       	ldi	r25, 0x00	; 0

00000904 <.Loc.24>:
     904:	20 61       	ori	r18, 0x10	; 16
     906:	fc 01       	movw	r30, r24
     908:	20 83       	st	Z, r18

0000090a <.Loc.25>:
    DDRE |= (1 << motorL_2);
     90a:	8d e2       	ldi	r24, 0x2D	; 45
     90c:	90 e0       	ldi	r25, 0x00	; 0
     90e:	fc 01       	movw	r30, r24
     910:	20 81       	ld	r18, Z
     912:	8d e2       	ldi	r24, 0x2D	; 45
     914:	90 e0       	ldi	r25, 0x00	; 0

00000916 <.Loc.26>:
     916:	20 62       	ori	r18, 0x20	; 32
     918:	fc 01       	movw	r30, r24
     91a:	20 83       	st	Z, r18

0000091c <.Loc.27>:
    DDRG |= (1 << motorR_1);
     91c:	83 e3       	ldi	r24, 0x33	; 51
     91e:	90 e0       	ldi	r25, 0x00	; 0
     920:	fc 01       	movw	r30, r24
     922:	20 81       	ld	r18, Z
     924:	83 e3       	ldi	r24, 0x33	; 51
     926:	90 e0       	ldi	r25, 0x00	; 0

00000928 <.Loc.28>:
     928:	22 60       	ori	r18, 0x02	; 2
     92a:	fc 01       	movw	r30, r24
     92c:	20 83       	st	Z, r18

0000092e <.Loc.29>:
    DDRE |= (1 << motorR_2);
     92e:	8d e2       	ldi	r24, 0x2D	; 45
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	fc 01       	movw	r30, r24
     934:	20 81       	ld	r18, Z
     936:	8d e2       	ldi	r24, 0x2D	; 45
     938:	90 e0       	ldi	r25, 0x00	; 0

0000093a <.Loc.30>:
     93a:	20 62       	ori	r18, 0x20	; 32
     93c:	fc 01       	movw	r30, r24
     93e:	20 83       	st	Z, r18

00000940 <.Loc.31>:
    DDRH |= (1 << motorR_PWM);
     940:	81 e0       	ldi	r24, 0x01	; 1
     942:	91 e0       	ldi	r25, 0x01	; 1
     944:	fc 01       	movw	r30, r24
     946:	20 81       	ld	r18, Z
     948:	81 e0       	ldi	r24, 0x01	; 1
     94a:	91 e0       	ldi	r25, 0x01	; 1

0000094c <.Loc.32>:
     94c:	20 61       	ori	r18, 0x10	; 16
     94e:	fc 01       	movw	r30, r24
     950:	20 83       	st	Z, r18

00000952 <.Loc.33>:

    //H-brug pinnen LOW
    PORTH &= ~(1 << motorL_PWM);
     952:	82 e0       	ldi	r24, 0x02	; 2
     954:	91 e0       	ldi	r25, 0x01	; 1
     956:	fc 01       	movw	r30, r24
     958:	20 81       	ld	r18, Z

0000095a <.Loc.34>:
     95a:	82 e0       	ldi	r24, 0x02	; 2
     95c:	91 e0       	ldi	r25, 0x01	; 1

0000095e <.Loc.35>:
     95e:	27 7f       	andi	r18, 0xF7	; 247
     960:	fc 01       	movw	r30, r24
     962:	20 83       	st	Z, r18

00000964 <.Loc.36>:
	PORTE &= ~(1 << motorL_1);
     964:	8e e2       	ldi	r24, 0x2E	; 46
     966:	90 e0       	ldi	r25, 0x00	; 0
     968:	fc 01       	movw	r30, r24
     96a:	20 81       	ld	r18, Z

0000096c <.Loc.37>:
     96c:	8e e2       	ldi	r24, 0x2E	; 46
     96e:	90 e0       	ldi	r25, 0x00	; 0

00000970 <.Loc.38>:
     970:	2f 7e       	andi	r18, 0xEF	; 239
     972:	fc 01       	movw	r30, r24
     974:	20 83       	st	Z, r18

00000976 <.Loc.39>:
	PORTE &= ~(1 << motorL_2);
     976:	8e e2       	ldi	r24, 0x2E	; 46
     978:	90 e0       	ldi	r25, 0x00	; 0
     97a:	fc 01       	movw	r30, r24
     97c:	20 81       	ld	r18, Z

0000097e <.Loc.40>:
     97e:	8e e2       	ldi	r24, 0x2E	; 46
     980:	90 e0       	ldi	r25, 0x00	; 0

00000982 <.Loc.41>:
     982:	2f 7d       	andi	r18, 0xDF	; 223
     984:	fc 01       	movw	r30, r24
     986:	20 83       	st	Z, r18

00000988 <.Loc.42>:
	PORTG &= ~(1 << motorR_1);
     988:	84 e3       	ldi	r24, 0x34	; 52
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	fc 01       	movw	r30, r24
     98e:	20 81       	ld	r18, Z

00000990 <.Loc.43>:
     990:	84 e3       	ldi	r24, 0x34	; 52
     992:	90 e0       	ldi	r25, 0x00	; 0

00000994 <.Loc.44>:
     994:	2d 7f       	andi	r18, 0xFD	; 253
     996:	fc 01       	movw	r30, r24
     998:	20 83       	st	Z, r18

0000099a <.Loc.45>:
	PORTE &= ~(1 << motorR_2);
     99a:	8e e2       	ldi	r24, 0x2E	; 46
     99c:	90 e0       	ldi	r25, 0x00	; 0
     99e:	fc 01       	movw	r30, r24
     9a0:	20 81       	ld	r18, Z

000009a2 <.Loc.46>:
     9a2:	8e e2       	ldi	r24, 0x2E	; 46
     9a4:	90 e0       	ldi	r25, 0x00	; 0

000009a6 <.Loc.47>:
     9a6:	2f 7d       	andi	r18, 0xDF	; 223
     9a8:	fc 01       	movw	r30, r24
     9aa:	20 83       	st	Z, r18

000009ac <.Loc.48>:
	PORTH &= ~(1 << motorR_PWM);
     9ac:	82 e0       	ldi	r24, 0x02	; 2
     9ae:	91 e0       	ldi	r25, 0x01	; 1
     9b0:	fc 01       	movw	r30, r24
     9b2:	20 81       	ld	r18, Z

000009b4 <.Loc.49>:
     9b4:	82 e0       	ldi	r24, 0x02	; 2
     9b6:	91 e0       	ldi	r25, 0x01	; 1

000009b8 <.Loc.50>:
     9b8:	2f 7e       	andi	r18, 0xEF	; 239
     9ba:	fc 01       	movw	r30, r24
     9bc:	20 83       	st	Z, r18

000009be <.Loc.51>:
}
     9be:	00 00       	nop
     9c0:	df 91       	pop	r29
     9c2:	cf 91       	pop	r28
     9c4:	08 95       	ret

000009c6 <h_bridgeR>:

void h_bridgeR(int PercentKracht)
{
     9c6:	cf 93       	push	r28
     9c8:	df 93       	push	r29
     9ca:	0f 92       	push	r0
     9cc:	0f 92       	push	r0
     9ce:	cd b7       	in	r28, 0x3d	; 61
     9d0:	de b7       	in	r29, 0x3e	; 62
     9d2:	9a 83       	std	Y+2, r25	; 0x02
     9d4:	89 83       	std	Y+1, r24	; 0x01

000009d6 <.Loc.53>:
	if ((PercentKracht >= 0) && (PercentKracht <= 100))
     9d6:	89 81       	ldd	r24, Y+1	; 0x01
     9d8:	9a 81       	ldd	r25, Y+2	; 0x02
     9da:	99 23       	and	r25, r25
     9dc:	2c f1       	brlt	.+74     	; 0xa28 <.L5>

000009de <.Loc.54>:
     9de:	89 81       	ldd	r24, Y+1	; 0x01
     9e0:	9a 81       	ldd	r25, Y+2	; 0x02
     9e2:	84 36       	cpi	r24, 0x64	; 100
     9e4:	91 05       	cpc	r25, r1
     9e6:	09 f0       	breq	.+2      	; 0x9ea <.Loc.55>

000009e8 <L0^A>:
     9e8:	fc f4       	brge	.+62     	; 0xa28 <.L5>

000009ea <.Loc.55>:
        {
            OCR4A = ((ICR4/100)*PercentKracht);
     9ea:	86 ea       	ldi	r24, 0xA6	; 166
     9ec:	90 e0       	ldi	r25, 0x00	; 0
     9ee:	fc 01       	movw	r30, r24
     9f0:	80 81       	ld	r24, Z
     9f2:	91 81       	ldd	r25, Z+1	; 0x01

000009f4 <.Loc.56>:
     9f4:	96 95       	lsr	r25
     9f6:	87 95       	ror	r24
     9f8:	96 95       	lsr	r25
     9fa:	87 95       	ror	r24
     9fc:	9c 01       	movw	r18, r24
     9fe:	ab e7       	ldi	r26, 0x7B	; 123
     a00:	b4 e1       	ldi	r27, 0x14	; 20
     a02:	0e 94 9e 0a 	call	0x153c	; 0x153c <__umulhisi3>
     a06:	bc 01       	movw	r22, r24
     a08:	76 95       	lsr	r23
     a0a:	67 95       	ror	r22

00000a0c <.Loc.57>:
     a0c:	49 81       	ldd	r20, Y+1	; 0x01
     a0e:	5a 81       	ldd	r21, Y+2	; 0x02

00000a10 <.Loc.58>:
     a10:	88 ea       	ldi	r24, 0xA8	; 168
     a12:	90 e0       	ldi	r25, 0x00	; 0

00000a14 <.Loc.59>:
     a14:	64 9f       	mul	r22, r20
     a16:	90 01       	movw	r18, r0
     a18:	65 9f       	mul	r22, r21
     a1a:	30 0d       	add	r19, r0
     a1c:	74 9f       	mul	r23, r20
     a1e:	30 0d       	add	r19, r0
     a20:	11 24       	eor	r1, r1

00000a22 <.Loc.60>:
     a22:	fc 01       	movw	r30, r24
     a24:	31 83       	std	Z+1, r19	; 0x01
     a26:	20 83       	st	Z, r18

00000a28 <.L5>:
        }
}
     a28:	00 00       	nop
     a2a:	0f 90       	pop	r0
     a2c:	0f 90       	pop	r0
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <h_bridgeL>:

void h_bridgeL(int PercentKracht)
{
     a34:	cf 93       	push	r28
     a36:	df 93       	push	r29
     a38:	0f 92       	push	r0
     a3a:	0f 92       	push	r0
     a3c:	cd b7       	in	r28, 0x3d	; 61
     a3e:	de b7       	in	r29, 0x3e	; 62
     a40:	9a 83       	std	Y+2, r25	; 0x02
     a42:	89 83       	std	Y+1, r24	; 0x01

00000a44 <.Loc.63>:
	if ((PercentKracht >= 0) && (PercentKracht <= 100))
     a44:	89 81       	ldd	r24, Y+1	; 0x01
     a46:	9a 81       	ldd	r25, Y+2	; 0x02
     a48:	99 23       	and	r25, r25
     a4a:	2c f1       	brlt	.+74     	; 0xa96 <.L8>

00000a4c <.Loc.64>:
     a4c:	89 81       	ldd	r24, Y+1	; 0x01
     a4e:	9a 81       	ldd	r25, Y+2	; 0x02
     a50:	84 36       	cpi	r24, 0x64	; 100
     a52:	91 05       	cpc	r25, r1
     a54:	09 f0       	breq	.+2      	; 0xa58 <.Loc.65>

00000a56 <L0^A>:
     a56:	fc f4       	brge	.+62     	; 0xa96 <.L8>

00000a58 <.Loc.65>:
        {
            OCR4B = ((ICR4/100)*PercentKracht);
     a58:	86 ea       	ldi	r24, 0xA6	; 166
     a5a:	90 e0       	ldi	r25, 0x00	; 0
     a5c:	fc 01       	movw	r30, r24
     a5e:	80 81       	ld	r24, Z
     a60:	91 81       	ldd	r25, Z+1	; 0x01

00000a62 <.Loc.66>:
     a62:	96 95       	lsr	r25
     a64:	87 95       	ror	r24
     a66:	96 95       	lsr	r25
     a68:	87 95       	ror	r24
     a6a:	9c 01       	movw	r18, r24
     a6c:	ab e7       	ldi	r26, 0x7B	; 123
     a6e:	b4 e1       	ldi	r27, 0x14	; 20
     a70:	0e 94 9e 0a 	call	0x153c	; 0x153c <__umulhisi3>
     a74:	bc 01       	movw	r22, r24
     a76:	76 95       	lsr	r23
     a78:	67 95       	ror	r22

00000a7a <.Loc.67>:
     a7a:	49 81       	ldd	r20, Y+1	; 0x01
     a7c:	5a 81       	ldd	r21, Y+2	; 0x02

00000a7e <.Loc.68>:
     a7e:	8a ea       	ldi	r24, 0xAA	; 170
     a80:	90 e0       	ldi	r25, 0x00	; 0

00000a82 <.Loc.69>:
     a82:	64 9f       	mul	r22, r20
     a84:	90 01       	movw	r18, r0
     a86:	65 9f       	mul	r22, r21
     a88:	30 0d       	add	r19, r0
     a8a:	74 9f       	mul	r23, r20
     a8c:	30 0d       	add	r19, r0
     a8e:	11 24       	eor	r1, r1

00000a90 <.Loc.70>:
     a90:	fc 01       	movw	r30, r24
     a92:	31 83       	std	Z+1, r19	; 0x01
     a94:	20 83       	st	Z, r18

00000a96 <.L8>:
        }
}
     a96:	00 00       	nop
     a98:	0f 90       	pop	r0
     a9a:	0f 90       	pop	r0
     a9c:	df 91       	pop	r29
     a9e:	cf 91       	pop	r28
     aa0:	08 95       	ret

00000aa2 <PID>:

float PID (overdracht_L, overdracht_R)
{
     aa2:	cf 93       	push	r28
     aa4:	df 93       	push	r29
     aa6:	00 d0       	rcall	.+0      	; 0xaa8 <L0^A>

00000aa8 <L0^A>:
     aa8:	00 d0       	rcall	.+0      	; 0xaaa <L0^A>

00000aaa <L0^A>:
     aaa:	0f 92       	push	r0
     aac:	0f 92       	push	r0
     aae:	cd b7       	in	r28, 0x3d	; 61
     ab0:	de b7       	in	r29, 0x3e	; 62
     ab2:	9a 83       	std	Y+2, r25	; 0x02
     ab4:	89 83       	std	Y+1, r24	; 0x01
     ab6:	7c 83       	std	Y+4, r23	; 0x04
     ab8:	6b 83       	std	Y+3, r22	; 0x03

00000aba <.Loc.73>:
    if (agv_ultrasoon_LV > agv_ultrasoon_LA)
     aba:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     abe:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     ac2:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     ac6:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

00000aca <.Loc.74>:
     aca:	28 17       	cp	r18, r24
     acc:	39 07       	cpc	r19, r25
     ace:	79 f0       	breq	.+30     	; 0xaee <.L10>
     ad0:	70 f0       	brcs	.+28     	; 0xaee <.L10>

00000ad2 <.Loc.75>:
    {
        overdracht_L = agv_ultrasoon_LV / agv_ultrasoon_LA;
     ad2:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     ad6:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     ada:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     ade:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>
     ae2:	b9 01       	movw	r22, r18
     ae4:	0e 94 82 0a 	call	0x1504	; 0x1504 <__udivmodhi4>
     ae8:	cb 01       	movw	r24, r22

00000aea <.Loc.76>:
     aea:	9a 83       	std	Y+2, r25	; 0x02
     aec:	89 83       	std	Y+1, r24	; 0x01

00000aee <.L10>:
    }
    if (agv_ultrasoon_LV < agv_ultrasoon_LA)
     aee:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     af2:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     af6:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     afa:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

00000afe <.Loc.78>:
     afe:	28 17       	cp	r18, r24
     b00:	39 07       	cpc	r19, r25
     b02:	70 f4       	brcc	.+28     	; 0xb20 <.L11>

00000b04 <.Loc.79>:
    {
        overdracht_R = agv_ultrasoon_LA / agv_ultrasoon_LV;
     b04:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     b08:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>
     b0c:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     b10:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     b14:	b9 01       	movw	r22, r18
     b16:	0e 94 82 0a 	call	0x1504	; 0x1504 <__udivmodhi4>
     b1a:	cb 01       	movw	r24, r22

00000b1c <.Loc.80>:
     b1c:	9c 83       	std	Y+4, r25	; 0x04
     b1e:	8b 83       	std	Y+3, r24	; 0x03

00000b20 <.L11>:
    }
}
     b20:	00 00       	nop
     b22:	6d 81       	ldd	r22, Y+5	; 0x05
     b24:	7e 81       	ldd	r23, Y+6	; 0x06
     b26:	8f 81       	ldd	r24, Y+7	; 0x07
     b28:	98 85       	ldd	r25, Y+8	; 0x08
     b2a:	28 96       	adiw	r28, 0x08	; 8
     b2c:	0f b6       	in	r0, 0x3f	; 63
     b2e:	f8 94       	cli
     b30:	de bf       	out	0x3e, r29	; 62
     b32:	0f be       	out	0x3f, r0	; 63
     b34:	cd bf       	out	0x3d, r28	; 61
     b36:	df 91       	pop	r29
     b38:	cf 91       	pop	r28
     b3a:	08 95       	ret

00000b3c <draaien>:
void draaien()
{
     b3c:	cf 93       	push	r28
     b3e:	df 93       	push	r29
     b40:	cd b7       	in	r28, 0x3d	; 61
     b42:	de b7       	in	r29, 0x3e	; 62
     b44:	60 97       	sbiw	r28, 0x10	; 16
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61

00000b50 <.Loc.83>:
    if ((agv_ultrasoon_LV >= 100) && (agv_ultrasoon_LA >= 100))
     b50:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     b54:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>

00000b58 <.Loc.84>:
     b58:	83 36       	cpi	r24, 0x63	; 99
     b5a:	91 05       	cpc	r25, r1
     b5c:	09 f0       	breq	.+2      	; 0xb60 <L0^A>

00000b5e <L0^A>:
     b5e:	08 f4       	brcc	.+2      	; 0xb62 <.Loc.85>

00000b60 <L0^A>:
     b60:	61 c0       	rjmp	.+194    	; 0xc24 <.L14>

00000b62 <.Loc.85>:
     b62:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     b66:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

00000b6a <.Loc.86>:
     b6a:	83 36       	cpi	r24, 0x63	; 99
     b6c:	91 05       	cpc	r25, r1
     b6e:	09 f0       	breq	.+2      	; 0xb72 <L0^A>

00000b70 <L0^A>:
     b70:	08 f4       	brcc	.+2      	; 0xb74 <.Loc.87>

00000b72 <L0^A>:
     b72:	58 c0       	rjmp	.+176    	; 0xc24 <.L14>

00000b74 <.Loc.87>:
    {
        h_bridgeL(0);
     b74:	80 e0       	ldi	r24, 0x00	; 0
     b76:	90 e0       	ldi	r25, 0x00	; 0
     b78:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00000b7c <.Loc.88>:
        h_bridgeR(30*overdracht_R);
     b7c:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
     b80:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
     b84:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
     b88:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
     b8c:	89 83       	std	Y+1, r24	; 0x01
     b8e:	9a 83       	std	Y+2, r25	; 0x02
     b90:	ab 83       	std	Y+3, r26	; 0x03
     b92:	bc 83       	std	Y+4, r27	; 0x04
     b94:	20 e0       	ldi	r18, 0x00	; 0
     b96:	30 e0       	ldi	r19, 0x00	; 0
     b98:	40 ef       	ldi	r20, 0xF0	; 240
     b9a:	51 e4       	ldi	r21, 0x41	; 65
     b9c:	69 81       	ldd	r22, Y+1	; 0x01
     b9e:	7a 81       	ldd	r23, Y+2	; 0x02
     ba0:	8b 81       	ldd	r24, Y+3	; 0x03
     ba2:	9c 81       	ldd	r25, Y+4	; 0x04
     ba4:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     ba8:	69 87       	std	Y+9, r22	; 0x09
     baa:	7a 87       	std	Y+10, r23	; 0x0a
     bac:	8b 87       	std	Y+11, r24	; 0x0b
     bae:	9c 87       	std	Y+12, r25	; 0x0c
     bb0:	89 85       	ldd	r24, Y+9	; 0x09
     bb2:	9a 85       	ldd	r25, Y+10	; 0x0a
     bb4:	ab 85       	ldd	r26, Y+11	; 0x0b
     bb6:	bc 85       	ldd	r27, Y+12	; 0x0c
     bb8:	8d 83       	std	Y+5, r24	; 0x05
     bba:	9e 83       	std	Y+6, r25	; 0x06
     bbc:	af 83       	std	Y+7, r26	; 0x07
     bbe:	b8 87       	std	Y+8, r27	; 0x08

00000bc0 <.Loc.89>:
     bc0:	6d 81       	ldd	r22, Y+5	; 0x05
     bc2:	7e 81       	ldd	r23, Y+6	; 0x06
     bc4:	8f 81       	ldd	r24, Y+7	; 0x07
     bc6:	98 85       	ldd	r25, Y+8	; 0x08
     bc8:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
     bcc:	6d 87       	std	Y+13, r22	; 0x0d
     bce:	7e 87       	std	Y+14, r23	; 0x0e
     bd0:	8f 87       	std	Y+15, r24	; 0x0f
     bd2:	98 8b       	std	Y+16, r25	; 0x10
     bd4:	8d 85       	ldd	r24, Y+13	; 0x0d
     bd6:	9e 85       	ldd	r25, Y+14	; 0x0e
     bd8:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00000bdc <.Loc.90>:
        PORTE |= (1 << motorL_1);
     bdc:	8e e2       	ldi	r24, 0x2E	; 46
     bde:	90 e0       	ldi	r25, 0x00	; 0
     be0:	dc 01       	movw	r26, r24
     be2:	2c 91       	ld	r18, X
     be4:	8e e2       	ldi	r24, 0x2E	; 46
     be6:	90 e0       	ldi	r25, 0x00	; 0

00000be8 <.Loc.91>:
     be8:	20 61       	ori	r18, 0x10	; 16
     bea:	fc 01       	movw	r30, r24
     bec:	20 83       	st	Z, r18

00000bee <.Loc.92>:
        PORTE &= ~(1 << motorL_2);
     bee:	8e e2       	ldi	r24, 0x2E	; 46
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	dc 01       	movw	r26, r24
     bf4:	2c 91       	ld	r18, X

00000bf6 <.Loc.93>:
     bf6:	8e e2       	ldi	r24, 0x2E	; 46
     bf8:	90 e0       	ldi	r25, 0x00	; 0

00000bfa <.Loc.94>:
     bfa:	2f 7d       	andi	r18, 0xDF	; 223
     bfc:	fc 01       	movw	r30, r24
     bfe:	20 83       	st	Z, r18

00000c00 <.Loc.95>:
        PORTE &= ~(1 << motorR_1);
     c00:	8e e2       	ldi	r24, 0x2E	; 46
     c02:	90 e0       	ldi	r25, 0x00	; 0
     c04:	dc 01       	movw	r26, r24
     c06:	2c 91       	ld	r18, X

00000c08 <.Loc.96>:
     c08:	8e e2       	ldi	r24, 0x2E	; 46
     c0a:	90 e0       	ldi	r25, 0x00	; 0

00000c0c <.Loc.97>:
     c0c:	2d 7f       	andi	r18, 0xFD	; 253
     c0e:	fc 01       	movw	r30, r24
     c10:	20 83       	st	Z, r18

00000c12 <.Loc.98>:
        PORTG |= (1 << motorR_2);
     c12:	84 e3       	ldi	r24, 0x34	; 52
     c14:	90 e0       	ldi	r25, 0x00	; 0
     c16:	dc 01       	movw	r26, r24
     c18:	2c 91       	ld	r18, X
     c1a:	84 e3       	ldi	r24, 0x34	; 52
     c1c:	90 e0       	ldi	r25, 0x00	; 0

00000c1e <.Loc.99>:
     c1e:	20 62       	ori	r18, 0x20	; 32
     c20:	fc 01       	movw	r30, r24
     c22:	20 83       	st	Z, r18

00000c24 <.L14>:
    }

    //draai 90* naar links
}
     c24:	00 00       	nop
     c26:	60 96       	adiw	r28, 0x10	; 16
     c28:	0f b6       	in	r0, 0x3f	; 63
     c2a:	f8 94       	cli
     c2c:	de bf       	out	0x3e, r29	; 62
     c2e:	0f be       	out	0x3f, r0	; 63
     c30:	cd bf       	out	0x3d, r28	; 61
     c32:	df 91       	pop	r29
     c34:	cf 91       	pop	r28
     c36:	08 95       	ret

00000c38 <boom_det>:

void boom_det (void)
{
     c38:	2f 92       	push	r2
     c3a:	3f 92       	push	r3
     c3c:	4f 92       	push	r4
     c3e:	5f 92       	push	r5
     c40:	6f 92       	push	r6
     c42:	7f 92       	push	r7
     c44:	8f 92       	push	r8
     c46:	9f 92       	push	r9
     c48:	af 92       	push	r10
     c4a:	bf 92       	push	r11
     c4c:	cf 92       	push	r12
     c4e:	df 92       	push	r13
     c50:	ef 92       	push	r14
     c52:	ff 92       	push	r15
     c54:	0f 93       	push	r16
     c56:	1f 93       	push	r17
     c58:	cf 93       	push	r28
     c5a:	df 93       	push	r29
     c5c:	00 d0       	rcall	.+0      	; 0xc5e <L0^A>

00000c5e <L0^A>:
     c5e:	00 d0       	rcall	.+0      	; 0xc60 <L0^A>

00000c60 <L0^A>:
     c60:	0f 92       	push	r0
     c62:	0f 92       	push	r0
     c64:	cd b7       	in	r28, 0x3d	; 61
     c66:	de b7       	in	r29, 0x3e	; 62

00000c68 <.Loc.102>:
    if ((!(PINF & (1<<IR_R))) || (!(PINF & (1<<IR_L))))
     c68:	8f e2       	ldi	r24, 0x2F	; 47
     c6a:	90 e0       	ldi	r25, 0x00	; 0
     c6c:	fc 01       	movw	r30, r24
     c6e:	80 81       	ld	r24, Z

00000c70 <.Loc.103>:
     c70:	88 2f       	mov	r24, r24
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	88 70       	andi	r24, 0x08	; 8
     c76:	99 27       	eor	r25, r25

00000c78 <.Loc.104>:
     c78:	00 97       	sbiw	r24, 0x00	; 0
     c7a:	59 f0       	breq	.+22     	; 0xc92 <.L16>

00000c7c <.Loc.105>:
     c7c:	8f e2       	ldi	r24, 0x2F	; 47
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	fc 01       	movw	r30, r24
     c82:	80 81       	ld	r24, Z

00000c84 <.Loc.106>:
     c84:	88 2f       	mov	r24, r24
     c86:	90 e0       	ldi	r25, 0x00	; 0
     c88:	80 71       	andi	r24, 0x10	; 16
     c8a:	99 27       	eor	r25, r25

00000c8c <.Loc.107>:
     c8c:	00 97       	sbiw	r24, 0x00	; 0
     c8e:	09 f0       	breq	.+2      	; 0xc92 <.L16>

00000c90 <L0^A>:
     c90:	9f c0       	rjmp	.+318    	; 0xdd0 <.L18>

00000c92 <.L16>:
    {
        boom_timer = time_current_ms(0);
     c92:	80 e0       	ldi	r24, 0x00	; 0
     c94:	90 e0       	ldi	r25, 0x00	; 0
     c96:	0e 94 88 03 	call	0x710	; 0x710 <time_current_ms>
     c9a:	4c 01       	movw	r8, r24
     c9c:	89 2f       	mov	r24, r25
     c9e:	88 0f       	add	r24, r24
     ca0:	88 0b       	sbc	r24, r24
     ca2:	a8 2e       	mov	r10, r24
     ca4:	b8 2e       	mov	r11, r24
     ca6:	c8 2e       	mov	r12, r24
     ca8:	d8 2e       	mov	r13, r24
     caa:	e8 2e       	mov	r14, r24
     cac:	f8 2e       	mov	r15, r24

00000cae <.Loc.109>:
     cae:	80 92 22 02 	sts	0x0222, r8	; 0x800222 <boom_timer>
     cb2:	90 92 23 02 	sts	0x0223, r9	; 0x800223 <boom_timer+0x1>
     cb6:	a0 92 24 02 	sts	0x0224, r10	; 0x800224 <boom_timer+0x2>
     cba:	b0 92 25 02 	sts	0x0225, r11	; 0x800225 <boom_timer+0x3>
     cbe:	c0 92 26 02 	sts	0x0226, r12	; 0x800226 <boom_timer+0x4>
     cc2:	d0 92 27 02 	sts	0x0227, r13	; 0x800227 <boom_timer+0x5>
     cc6:	e0 92 28 02 	sts	0x0228, r14	; 0x800228 <boom_timer+0x6>
     cca:	f0 92 29 02 	sts	0x0229, r15	; 0x800229 <boom_timer+0x7>

00000cce <.Loc.110>:
        if (time_current_ms(0) - boom_timer > 1500)
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	0e 94 88 03 	call	0x710	; 0x710 <time_current_ms>
     cd6:	9a 83       	std	Y+2, r25	; 0x02
     cd8:	89 83       	std	Y+1, r24	; 0x01
     cda:	89 2f       	mov	r24, r25
     cdc:	88 0f       	add	r24, r24
     cde:	88 0b       	sbc	r24, r24
     ce0:	8b 83       	std	Y+3, r24	; 0x03
     ce2:	8c 83       	std	Y+4, r24	; 0x04
     ce4:	8d 83       	std	Y+5, r24	; 0x05
     ce6:	8e 83       	std	Y+6, r24	; 0x06
     ce8:	8f 83       	std	Y+7, r24	; 0x07
     cea:	88 87       	std	Y+8, r24	; 0x08

00000cec <.Loc.111>:
     cec:	20 90 22 02 	lds	r2, 0x0222	; 0x800222 <boom_timer>
     cf0:	30 90 23 02 	lds	r3, 0x0223	; 0x800223 <boom_timer+0x1>
     cf4:	40 90 24 02 	lds	r4, 0x0224	; 0x800224 <boom_timer+0x2>
     cf8:	50 90 25 02 	lds	r5, 0x0225	; 0x800225 <boom_timer+0x3>
     cfc:	60 90 26 02 	lds	r6, 0x0226	; 0x800226 <boom_timer+0x4>
     d00:	70 90 27 02 	lds	r7, 0x0227	; 0x800227 <boom_timer+0x5>
     d04:	80 90 28 02 	lds	r8, 0x0228	; 0x800228 <boom_timer+0x6>
     d08:	90 90 29 02 	lds	r9, 0x0229	; 0x800229 <boom_timer+0x7>
     d0c:	29 81       	ldd	r18, Y+1	; 0x01
     d0e:	3a 81       	ldd	r19, Y+2	; 0x02
     d10:	4b 81       	ldd	r20, Y+3	; 0x03
     d12:	5c 81       	ldd	r21, Y+4	; 0x04
     d14:	6d 81       	ldd	r22, Y+5	; 0x05
     d16:	7e 81       	ldd	r23, Y+6	; 0x06
     d18:	8f 81       	ldd	r24, Y+7	; 0x07
     d1a:	98 85       	ldd	r25, Y+8	; 0x08
     d1c:	a2 2c       	mov	r10, r2
     d1e:	b3 2c       	mov	r11, r3
     d20:	c4 2c       	mov	r12, r4
     d22:	d5 2c       	mov	r13, r5
     d24:	e6 2c       	mov	r14, r6
     d26:	f7 2c       	mov	r15, r7
     d28:	08 2d       	mov	r16, r8
     d2a:	19 2d       	mov	r17, r9
     d2c:	0e 94 b9 0a 	call	0x1572	; 0x1572 <__subdi3>
     d30:	82 2e       	mov	r8, r18
     d32:	93 2e       	mov	r9, r19
     d34:	a4 2e       	mov	r10, r20
     d36:	b5 2e       	mov	r11, r21
     d38:	c6 2e       	mov	r12, r22
     d3a:	d7 2e       	mov	r13, r23
     d3c:	e8 2e       	mov	r14, r24
     d3e:	f9 2e       	mov	r15, r25

00000d40 <.Loc.112>:
     d40:	28 2d       	mov	r18, r8
     d42:	39 2d       	mov	r19, r9
     d44:	4a 2d       	mov	r20, r10
     d46:	5b 2d       	mov	r21, r11
     d48:	6c 2d       	mov	r22, r12
     d4a:	7d 2d       	mov	r23, r13
     d4c:	8e 2d       	mov	r24, r14
     d4e:	9f 2d       	mov	r25, r15
     d50:	2c 3d       	cpi	r18, 0xDC	; 220
     d52:	f5 e0       	ldi	r31, 0x05	; 5
     d54:	3f 07       	cpc	r19, r31
     d56:	41 05       	cpc	r20, r1
     d58:	51 05       	cpc	r21, r1
     d5a:	61 05       	cpc	r22, r1
     d5c:	71 05       	cpc	r23, r1
     d5e:	81 05       	cpc	r24, r1
     d60:	91 05       	cpc	r25, r1
     d62:	b1 f1       	breq	.+108    	; 0xdd0 <.L18>
     d64:	a8 f1       	brcs	.+106    	; 0xdd0 <.L18>

00000d66 <.Loc.113>:
        {
            //stop motoren
            h_bridgeL(0);
     d66:	80 e0       	ldi	r24, 0x00	; 0
     d68:	90 e0       	ldi	r25, 0x00	; 0
     d6a:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00000d6e <.Loc.114>:
            h_bridgeR(0);
     d6e:	80 e0       	ldi	r24, 0x00	; 0
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00000d76 <.Loc.115>:
            PORTE |= (1 << motorL_1);
     d76:	8e e2       	ldi	r24, 0x2E	; 46
     d78:	90 e0       	ldi	r25, 0x00	; 0
     d7a:	fc 01       	movw	r30, r24
     d7c:	20 81       	ld	r18, Z
     d7e:	8e e2       	ldi	r24, 0x2E	; 46
     d80:	90 e0       	ldi	r25, 0x00	; 0

00000d82 <.Loc.116>:
     d82:	20 61       	ori	r18, 0x10	; 16
     d84:	fc 01       	movw	r30, r24
     d86:	20 83       	st	Z, r18

00000d88 <.Loc.117>:
            PORTE &= ~(1 << motorL_2);
     d88:	8e e2       	ldi	r24, 0x2E	; 46
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	fc 01       	movw	r30, r24
     d8e:	20 81       	ld	r18, Z

00000d90 <.Loc.118>:
     d90:	8e e2       	ldi	r24, 0x2E	; 46
     d92:	90 e0       	ldi	r25, 0x00	; 0

00000d94 <.Loc.119>:
     d94:	2f 7d       	andi	r18, 0xDF	; 223
     d96:	fc 01       	movw	r30, r24
     d98:	20 83       	st	Z, r18

00000d9a <.Loc.120>:
            PORTE &= ~(1 << motorR_1);
     d9a:	8e e2       	ldi	r24, 0x2E	; 46
     d9c:	90 e0       	ldi	r25, 0x00	; 0
     d9e:	fc 01       	movw	r30, r24
     da0:	20 81       	ld	r18, Z

00000da2 <.Loc.121>:
     da2:	8e e2       	ldi	r24, 0x2E	; 46
     da4:	90 e0       	ldi	r25, 0x00	; 0

00000da6 <.Loc.122>:
     da6:	2d 7f       	andi	r18, 0xFD	; 253
     da8:	fc 01       	movw	r30, r24
     daa:	20 83       	st	Z, r18

00000dac <.Loc.123>:
            PORTG |= (1 << motorR_2);
     dac:	84 e3       	ldi	r24, 0x34	; 52
     dae:	90 e0       	ldi	r25, 0x00	; 0
     db0:	fc 01       	movw	r30, r24
     db2:	20 81       	ld	r18, Z
     db4:	84 e3       	ldi	r24, 0x34	; 52
     db6:	90 e0       	ldi	r25, 0x00	; 0

00000db8 <.Loc.124>:
     db8:	20 62       	ori	r18, 0x20	; 32
     dba:	fc 01       	movw	r30, r24
     dbc:	20 83       	st	Z, r18

00000dbe <.Loc.125>:
            PORTB &= ~(1<<LED);
     dbe:	85 e2       	ldi	r24, 0x25	; 37
     dc0:	90 e0       	ldi	r25, 0x00	; 0
     dc2:	fc 01       	movw	r30, r24
     dc4:	20 81       	ld	r18, Z

00000dc6 <.Loc.126>:
     dc6:	85 e2       	ldi	r24, 0x25	; 37
     dc8:	90 e0       	ldi	r25, 0x00	; 0

00000dca <.Loc.127>:
     dca:	2d 7f       	andi	r18, 0xFD	; 253
     dcc:	fc 01       	movw	r30, r24
     dce:	20 83       	st	Z, r18

00000dd0 <.L18>:
        }
    }
    //als ir sensor iets detecteert
        // alle motoren stoppen
        //led gaat aan
}
     dd0:	00 00       	nop
     dd2:	28 96       	adiw	r28, 0x08	; 8
     dd4:	0f b6       	in	r0, 0x3f	; 63
     dd6:	f8 94       	cli
     dd8:	de bf       	out	0x3e, r29	; 62
     dda:	0f be       	out	0x3f, r0	; 63
     ddc:	cd bf       	out	0x3d, r28	; 61
     dde:	df 91       	pop	r29
     de0:	cf 91       	pop	r28
     de2:	1f 91       	pop	r17
     de4:	0f 91       	pop	r16
     de6:	ff 90       	pop	r15
     de8:	ef 90       	pop	r14
     dea:	df 90       	pop	r13
     dec:	cf 90       	pop	r12
     dee:	bf 90       	pop	r11
     df0:	af 90       	pop	r10
     df2:	9f 90       	pop	r9
     df4:	8f 90       	pop	r8
     df6:	7f 90       	pop	r7
     df8:	6f 90       	pop	r6
     dfa:	5f 90       	pop	r5
     dfc:	4f 90       	pop	r4
     dfe:	3f 90       	pop	r3
     e00:	2f 90       	pop	r2
     e02:	08 95       	ret

00000e04 <obstakel_det>:

void obstakel_det (void)
{
     e04:	cf 93       	push	r28
     e06:	df 93       	push	r29
     e08:	cd b7       	in	r28, 0x3d	; 61
     e0a:	de b7       	in	r29, 0x3e	; 62
     e0c:	c0 54       	subi	r28, 0x40	; 64
     e0e:	d1 09       	sbc	r29, r1
     e10:	0f b6       	in	r0, 0x3f	; 63
     e12:	f8 94       	cli
     e14:	de bf       	out	0x3e, r29	; 62
     e16:	0f be       	out	0x3f, r0	; 63
     e18:	cd bf       	out	0x3d, r28	; 61

00000e1a <.Loc.130>:
    if (agv_ultrasoon_voor <= 50)
     e1a:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <agv_ultrasoon_voor>
     e1e:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <agv_ultrasoon_voor+0x1>

00000e22 <.Loc.131>:
     e22:	82 33       	cpi	r24, 0x32	; 50
     e24:	91 05       	cpc	r25, r1
     e26:	09 f0       	breq	.+2      	; 0xe2a <.Loc.132>

00000e28 <L0^A>:
     e28:	68 f5       	brcc	.+90     	; 0xe84 <.L20>

00000e2a <.Loc.132>:
    {
        //motoren uit
        h_bridgeL(0);
     e2a:	80 e0       	ldi	r24, 0x00	; 0
     e2c:	90 e0       	ldi	r25, 0x00	; 0
     e2e:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00000e32 <.Loc.133>:
        h_bridgeR(0);
     e32:	80 e0       	ldi	r24, 0x00	; 0
     e34:	90 e0       	ldi	r25, 0x00	; 0
     e36:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00000e3a <.Loc.134>:
        PORTE |= (1 << motorL_1);
     e3a:	8e e2       	ldi	r24, 0x2E	; 46
     e3c:	90 e0       	ldi	r25, 0x00	; 0
     e3e:	dc 01       	movw	r26, r24
     e40:	2c 91       	ld	r18, X
     e42:	8e e2       	ldi	r24, 0x2E	; 46
     e44:	90 e0       	ldi	r25, 0x00	; 0

00000e46 <.Loc.135>:
     e46:	20 61       	ori	r18, 0x10	; 16
     e48:	fc 01       	movw	r30, r24
     e4a:	20 83       	st	Z, r18

00000e4c <.Loc.136>:
        PORTE &= ~(1 << motorL_2);
     e4c:	8e e2       	ldi	r24, 0x2E	; 46
     e4e:	90 e0       	ldi	r25, 0x00	; 0
     e50:	dc 01       	movw	r26, r24
     e52:	2c 91       	ld	r18, X

00000e54 <.Loc.137>:
     e54:	8e e2       	ldi	r24, 0x2E	; 46
     e56:	90 e0       	ldi	r25, 0x00	; 0

00000e58 <.Loc.138>:
     e58:	2f 7d       	andi	r18, 0xDF	; 223
     e5a:	fc 01       	movw	r30, r24
     e5c:	20 83       	st	Z, r18

00000e5e <.Loc.139>:
        PORTE &= ~(1 << motorR_1);
     e5e:	8e e2       	ldi	r24, 0x2E	; 46
     e60:	90 e0       	ldi	r25, 0x00	; 0
     e62:	dc 01       	movw	r26, r24
     e64:	2c 91       	ld	r18, X

00000e66 <.Loc.140>:
     e66:	8e e2       	ldi	r24, 0x2E	; 46
     e68:	90 e0       	ldi	r25, 0x00	; 0

00000e6a <.Loc.141>:
     e6a:	2d 7f       	andi	r18, 0xFD	; 253
     e6c:	fc 01       	movw	r30, r24
     e6e:	20 83       	st	Z, r18

00000e70 <.Loc.142>:
        PORTG |= (1 << motorR_2);
     e70:	84 e3       	ldi	r24, 0x34	; 52
     e72:	90 e0       	ldi	r25, 0x00	; 0
     e74:	dc 01       	movw	r26, r24
     e76:	2c 91       	ld	r18, X
     e78:	84 e3       	ldi	r24, 0x34	; 52
     e7a:	90 e0       	ldi	r25, 0x00	; 0

00000e7c <.Loc.143>:
     e7c:	20 62       	ori	r18, 0x20	; 32
     e7e:	fc 01       	movw	r30, r24
     e80:	20 83       	st	Z, r18

00000e82 <.Loc.144>:
        PORTE |= (1 << motorL_1);
        PORTE &= ~(1 << motorL_2);
        PORTG &= ~(1 << motorR_1);
        PORTE |= (1 << motorR_2);
    }
}
     e82:	1d c1       	rjmp	.+570    	; 0x10be <.L23>

00000e84 <.L20>:
    else if ((agv_ultrasoon_voor >= 50) && (agv_ultrasoon_voor <=100))
     e84:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <agv_ultrasoon_voor>
     e88:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <agv_ultrasoon_voor+0x1>

00000e8c <.Loc.146>:
     e8c:	81 33       	cpi	r24, 0x31	; 49
     e8e:	91 05       	cpc	r25, r1
     e90:	09 f0       	breq	.+2      	; 0xe94 <L0^A>

00000e92 <L0^A>:
     e92:	08 f4       	brcc	.+2      	; 0xe96 <.Loc.147>

00000e94 <L0^A>:
     e94:	8e c0       	rjmp	.+284    	; 0xfb2 <.L22>

00000e96 <.Loc.147>:
     e96:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <agv_ultrasoon_voor>
     e9a:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <agv_ultrasoon_voor+0x1>

00000e9e <.Loc.148>:
     e9e:	84 36       	cpi	r24, 0x64	; 100
     ea0:	91 05       	cpc	r25, r1
     ea2:	11 f0       	breq	.+4      	; 0xea8 <.Loc.149>

00000ea4 <L0^A>:
     ea4:	08 f0       	brcs	.+2      	; 0xea8 <.Loc.149>

00000ea6 <L0^A>:
     ea6:	85 c0       	rjmp	.+266    	; 0xfb2 <.L22>

00000ea8 <.Loc.149>:
        h_bridgeL(30*overdracht_L);
     ea8:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <overdracht_L>
     eac:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <overdracht_L+0x1>
     eb0:	a0 91 1c 02 	lds	r26, 0x021C	; 0x80021c <overdracht_L+0x2>
     eb4:	b0 91 1d 02 	lds	r27, 0x021D	; 0x80021d <overdracht_L+0x3>
     eb8:	89 83       	std	Y+1, r24	; 0x01
     eba:	9a 83       	std	Y+2, r25	; 0x02
     ebc:	ab 83       	std	Y+3, r26	; 0x03
     ebe:	bc 83       	std	Y+4, r27	; 0x04
     ec0:	20 e0       	ldi	r18, 0x00	; 0
     ec2:	30 e0       	ldi	r19, 0x00	; 0
     ec4:	40 ef       	ldi	r20, 0xF0	; 240
     ec6:	51 e4       	ldi	r21, 0x41	; 65
     ec8:	69 81       	ldd	r22, Y+1	; 0x01
     eca:	7a 81       	ldd	r23, Y+2	; 0x02
     ecc:	8b 81       	ldd	r24, Y+3	; 0x03
     ece:	9c 81       	ldd	r25, Y+4	; 0x04
     ed0:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     ed4:	69 a3       	std	Y+33, r22	; 0x21
     ed6:	7a a3       	std	Y+34, r23	; 0x22
     ed8:	8b a3       	std	Y+35, r24	; 0x23
     eda:	9c a3       	std	Y+36, r25	; 0x24
     edc:	89 a1       	ldd	r24, Y+33	; 0x21
     ede:	9a a1       	ldd	r25, Y+34	; 0x22
     ee0:	ab a1       	ldd	r26, Y+35	; 0x23
     ee2:	bc a1       	ldd	r27, Y+36	; 0x24
     ee4:	8d 83       	std	Y+5, r24	; 0x05
     ee6:	9e 83       	std	Y+6, r25	; 0x06
     ee8:	af 83       	std	Y+7, r26	; 0x07
     eea:	b8 87       	std	Y+8, r27	; 0x08

00000eec <.Loc.150>:
     eec:	6d 81       	ldd	r22, Y+5	; 0x05
     eee:	7e 81       	ldd	r23, Y+6	; 0x06
     ef0:	8f 81       	ldd	r24, Y+7	; 0x07
     ef2:	98 85       	ldd	r25, Y+8	; 0x08
     ef4:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
     ef8:	6d a3       	std	Y+37, r22	; 0x25
     efa:	7e a3       	std	Y+38, r23	; 0x26
     efc:	8f a3       	std	Y+39, r24	; 0x27
     efe:	98 a7       	std	Y+40, r25	; 0x28
     f00:	8d a1       	ldd	r24, Y+37	; 0x25
     f02:	9e a1       	ldd	r25, Y+38	; 0x26
     f04:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00000f08 <.Loc.151>:
        h_bridgeR(30*overdracht_R);
     f08:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
     f0c:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
     f10:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
     f14:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
     f18:	89 87       	std	Y+9, r24	; 0x09
     f1a:	9a 87       	std	Y+10, r25	; 0x0a
     f1c:	ab 87       	std	Y+11, r26	; 0x0b
     f1e:	bc 87       	std	Y+12, r27	; 0x0c
     f20:	20 e0       	ldi	r18, 0x00	; 0
     f22:	30 e0       	ldi	r19, 0x00	; 0
     f24:	40 ef       	ldi	r20, 0xF0	; 240
     f26:	51 e4       	ldi	r21, 0x41	; 65
     f28:	69 85       	ldd	r22, Y+9	; 0x09
     f2a:	7a 85       	ldd	r23, Y+10	; 0x0a
     f2c:	8b 85       	ldd	r24, Y+11	; 0x0b
     f2e:	9c 85       	ldd	r25, Y+12	; 0x0c
     f30:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     f34:	69 a7       	std	Y+41, r22	; 0x29
     f36:	7a a7       	std	Y+42, r23	; 0x2a
     f38:	8b a7       	std	Y+43, r24	; 0x2b
     f3a:	9c a7       	std	Y+44, r25	; 0x2c
     f3c:	89 a5       	ldd	r24, Y+41	; 0x29
     f3e:	9a a5       	ldd	r25, Y+42	; 0x2a
     f40:	ab a5       	ldd	r26, Y+43	; 0x2b
     f42:	bc a5       	ldd	r27, Y+44	; 0x2c
     f44:	8d 87       	std	Y+13, r24	; 0x0d
     f46:	9e 87       	std	Y+14, r25	; 0x0e
     f48:	af 87       	std	Y+15, r26	; 0x0f
     f4a:	b8 8b       	std	Y+16, r27	; 0x10

00000f4c <.Loc.152>:
     f4c:	6d 85       	ldd	r22, Y+13	; 0x0d
     f4e:	7e 85       	ldd	r23, Y+14	; 0x0e
     f50:	8f 85       	ldd	r24, Y+15	; 0x0f
     f52:	98 89       	ldd	r25, Y+16	; 0x10
     f54:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
     f58:	6d a7       	std	Y+45, r22	; 0x2d
     f5a:	7e a7       	std	Y+46, r23	; 0x2e
     f5c:	8f a7       	std	Y+47, r24	; 0x2f
     f5e:	98 ab       	std	Y+48, r25	; 0x30
     f60:	8d a5       	ldd	r24, Y+45	; 0x2d
     f62:	9e a5       	ldd	r25, Y+46	; 0x2e
     f64:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00000f68 <.Loc.153>:
        PORTE |= (1 << motorL_1);
     f68:	8e e2       	ldi	r24, 0x2E	; 46
     f6a:	90 e0       	ldi	r25, 0x00	; 0
     f6c:	dc 01       	movw	r26, r24
     f6e:	2c 91       	ld	r18, X
     f70:	8e e2       	ldi	r24, 0x2E	; 46
     f72:	90 e0       	ldi	r25, 0x00	; 0

00000f74 <.Loc.154>:
     f74:	20 61       	ori	r18, 0x10	; 16
     f76:	fc 01       	movw	r30, r24
     f78:	20 83       	st	Z, r18

00000f7a <.Loc.155>:
        PORTE &= ~(1 << motorL_2);
     f7a:	8e e2       	ldi	r24, 0x2E	; 46
     f7c:	90 e0       	ldi	r25, 0x00	; 0
     f7e:	dc 01       	movw	r26, r24
     f80:	2c 91       	ld	r18, X

00000f82 <.Loc.156>:
     f82:	8e e2       	ldi	r24, 0x2E	; 46
     f84:	90 e0       	ldi	r25, 0x00	; 0

00000f86 <.Loc.157>:
     f86:	2f 7d       	andi	r18, 0xDF	; 223
     f88:	fc 01       	movw	r30, r24
     f8a:	20 83       	st	Z, r18

00000f8c <.Loc.158>:
        PORTG &= ~(1 << motorR_1);
     f8c:	84 e3       	ldi	r24, 0x34	; 52
     f8e:	90 e0       	ldi	r25, 0x00	; 0
     f90:	dc 01       	movw	r26, r24
     f92:	2c 91       	ld	r18, X

00000f94 <.Loc.159>:
     f94:	84 e3       	ldi	r24, 0x34	; 52
     f96:	90 e0       	ldi	r25, 0x00	; 0

00000f98 <.Loc.160>:
     f98:	2d 7f       	andi	r18, 0xFD	; 253
     f9a:	fc 01       	movw	r30, r24
     f9c:	20 83       	st	Z, r18

00000f9e <.Loc.161>:
        PORTE |= (1 << motorR_2);
     f9e:	8e e2       	ldi	r24, 0x2E	; 46
     fa0:	90 e0       	ldi	r25, 0x00	; 0
     fa2:	dc 01       	movw	r26, r24
     fa4:	2c 91       	ld	r18, X
     fa6:	8e e2       	ldi	r24, 0x2E	; 46
     fa8:	90 e0       	ldi	r25, 0x00	; 0

00000faa <.Loc.162>:
     faa:	20 62       	ori	r18, 0x20	; 32
     fac:	fc 01       	movw	r30, r24
     fae:	20 83       	st	Z, r18

00000fb0 <.Loc.163>:
}
     fb0:	86 c0       	rjmp	.+268    	; 0x10be <.L23>

00000fb2 <.L22>:
        h_bridgeL(60*overdracht_L);
     fb2:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <overdracht_L>
     fb6:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <overdracht_L+0x1>
     fba:	a0 91 1c 02 	lds	r26, 0x021C	; 0x80021c <overdracht_L+0x2>
     fbe:	b0 91 1d 02 	lds	r27, 0x021D	; 0x80021d <overdracht_L+0x3>
     fc2:	89 8b       	std	Y+17, r24	; 0x11
     fc4:	9a 8b       	std	Y+18, r25	; 0x12
     fc6:	ab 8b       	std	Y+19, r26	; 0x13
     fc8:	bc 8b       	std	Y+20, r27	; 0x14
     fca:	20 e0       	ldi	r18, 0x00	; 0
     fcc:	30 e0       	ldi	r19, 0x00	; 0
     fce:	40 e7       	ldi	r20, 0x70	; 112
     fd0:	52 e4       	ldi	r21, 0x42	; 66
     fd2:	69 89       	ldd	r22, Y+17	; 0x11
     fd4:	7a 89       	ldd	r23, Y+18	; 0x12
     fd6:	8b 89       	ldd	r24, Y+19	; 0x13
     fd8:	9c 89       	ldd	r25, Y+20	; 0x14
     fda:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
     fde:	69 ab       	std	Y+49, r22	; 0x31
     fe0:	7a ab       	std	Y+50, r23	; 0x32
     fe2:	8b ab       	std	Y+51, r24	; 0x33
     fe4:	9c ab       	std	Y+52, r25	; 0x34
     fe6:	89 a9       	ldd	r24, Y+49	; 0x31
     fe8:	9a a9       	ldd	r25, Y+50	; 0x32
     fea:	ab a9       	ldd	r26, Y+51	; 0x33
     fec:	bc a9       	ldd	r27, Y+52	; 0x34
     fee:	8d 8b       	std	Y+21, r24	; 0x15
     ff0:	9e 8b       	std	Y+22, r25	; 0x16
     ff2:	af 8b       	std	Y+23, r26	; 0x17
     ff4:	b8 8f       	std	Y+24, r27	; 0x18

00000ff6 <.Loc.165>:
     ff6:	6d 89       	ldd	r22, Y+21	; 0x15
     ff8:	7e 89       	ldd	r23, Y+22	; 0x16
     ffa:	8f 89       	ldd	r24, Y+23	; 0x17
     ffc:	98 8d       	ldd	r25, Y+24	; 0x18
     ffe:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1002:	6d ab       	std	Y+53, r22	; 0x35
    1004:	7e ab       	std	Y+54, r23	; 0x36
    1006:	8f ab       	std	Y+55, r24	; 0x37
    1008:	98 af       	std	Y+56, r25	; 0x38
    100a:	8d a9       	ldd	r24, Y+53	; 0x35
    100c:	9e a9       	ldd	r25, Y+54	; 0x36
    100e:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00001012 <.Loc.166>:
        h_bridgeR(60*overdracht_R);
    1012:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
    1016:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
    101a:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
    101e:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
    1022:	89 8f       	std	Y+25, r24	; 0x19
    1024:	9a 8f       	std	Y+26, r25	; 0x1a
    1026:	ab 8f       	std	Y+27, r26	; 0x1b
    1028:	bc 8f       	std	Y+28, r27	; 0x1c
    102a:	20 e0       	ldi	r18, 0x00	; 0
    102c:	30 e0       	ldi	r19, 0x00	; 0
    102e:	40 e7       	ldi	r20, 0x70	; 112
    1030:	52 e4       	ldi	r21, 0x42	; 66
    1032:	69 8d       	ldd	r22, Y+25	; 0x19
    1034:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1036:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1038:	9c 8d       	ldd	r25, Y+28	; 0x1c
    103a:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    103e:	69 af       	std	Y+57, r22	; 0x39
    1040:	7a af       	std	Y+58, r23	; 0x3a
    1042:	8b af       	std	Y+59, r24	; 0x3b
    1044:	9c af       	std	Y+60, r25	; 0x3c
    1046:	89 ad       	ldd	r24, Y+57	; 0x39
    1048:	9a ad       	ldd	r25, Y+58	; 0x3a
    104a:	ab ad       	ldd	r26, Y+59	; 0x3b
    104c:	bc ad       	ldd	r27, Y+60	; 0x3c
    104e:	8d 8f       	std	Y+29, r24	; 0x1d
    1050:	9e 8f       	std	Y+30, r25	; 0x1e
    1052:	af 8f       	std	Y+31, r26	; 0x1f
    1054:	b8 a3       	std	Y+32, r27	; 0x20

00001056 <.Loc.167>:
    1056:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1058:	7e 8d       	ldd	r23, Y+30	; 0x1e
    105a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    105c:	98 a1       	ldd	r25, Y+32	; 0x20
    105e:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1062:	21 96       	adiw	r28, 0x01	; 1
    1064:	6c af       	std	Y+60, r22	; 0x3c
    1066:	7d af       	std	Y+61, r23	; 0x3d
    1068:	8e af       	std	Y+62, r24	; 0x3e
    106a:	9f af       	std	Y+63, r25	; 0x3f
    106c:	21 97       	sbiw	r28, 0x01	; 1
    106e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1070:	9e ad       	ldd	r25, Y+62	; 0x3e
    1072:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00001076 <.Loc.168>:
        PORTE |= (1 << motorL_1);
    1076:	8e e2       	ldi	r24, 0x2E	; 46
    1078:	90 e0       	ldi	r25, 0x00	; 0
    107a:	dc 01       	movw	r26, r24
    107c:	2c 91       	ld	r18, X
    107e:	8e e2       	ldi	r24, 0x2E	; 46
    1080:	90 e0       	ldi	r25, 0x00	; 0

00001082 <.Loc.169>:
    1082:	20 61       	ori	r18, 0x10	; 16
    1084:	fc 01       	movw	r30, r24
    1086:	20 83       	st	Z, r18

00001088 <.Loc.170>:
        PORTE &= ~(1 << motorL_2);
    1088:	8e e2       	ldi	r24, 0x2E	; 46
    108a:	90 e0       	ldi	r25, 0x00	; 0
    108c:	dc 01       	movw	r26, r24
    108e:	2c 91       	ld	r18, X

00001090 <.Loc.171>:
    1090:	8e e2       	ldi	r24, 0x2E	; 46
    1092:	90 e0       	ldi	r25, 0x00	; 0

00001094 <.Loc.172>:
    1094:	2f 7d       	andi	r18, 0xDF	; 223
    1096:	fc 01       	movw	r30, r24
    1098:	20 83       	st	Z, r18

0000109a <.Loc.173>:
        PORTG &= ~(1 << motorR_1);
    109a:	84 e3       	ldi	r24, 0x34	; 52
    109c:	90 e0       	ldi	r25, 0x00	; 0
    109e:	dc 01       	movw	r26, r24
    10a0:	2c 91       	ld	r18, X

000010a2 <.Loc.174>:
    10a2:	84 e3       	ldi	r24, 0x34	; 52
    10a4:	90 e0       	ldi	r25, 0x00	; 0

000010a6 <.Loc.175>:
    10a6:	2d 7f       	andi	r18, 0xFD	; 253
    10a8:	fc 01       	movw	r30, r24
    10aa:	20 83       	st	Z, r18

000010ac <.Loc.176>:
        PORTE |= (1 << motorR_2);
    10ac:	8e e2       	ldi	r24, 0x2E	; 46
    10ae:	90 e0       	ldi	r25, 0x00	; 0
    10b0:	dc 01       	movw	r26, r24
    10b2:	2c 91       	ld	r18, X
    10b4:	8e e2       	ldi	r24, 0x2E	; 46
    10b6:	90 e0       	ldi	r25, 0x00	; 0

000010b8 <.Loc.177>:
    10b8:	20 62       	ori	r18, 0x20	; 32
    10ba:	fc 01       	movw	r30, r24
    10bc:	20 83       	st	Z, r18

000010be <.L23>:
}
    10be:	00 00       	nop
    10c0:	c0 5c       	subi	r28, 0xC0	; 192
    10c2:	df 4f       	sbci	r29, 0xFF	; 255
    10c4:	0f b6       	in	r0, 0x3f	; 63
    10c6:	f8 94       	cli
    10c8:	de bf       	out	0x3e, r29	; 62
    10ca:	0f be       	out	0x3f, r0	; 63
    10cc:	cd bf       	out	0x3d, r28	; 61
    10ce:	df 91       	pop	r29
    10d0:	cf 91       	pop	r28
    10d2:	08 95       	ret

000010d4 <draaien_2>:
void draaien_2 (void)
{
    10d4:	cf 93       	push	r28
    10d6:	df 93       	push	r29
    10d8:	cd b7       	in	r28, 0x3d	; 61
    10da:	de b7       	in	r29, 0x3e	; 62
    10dc:	60 97       	sbiw	r28, 0x10	; 16
    10de:	0f b6       	in	r0, 0x3f	; 63
    10e0:	f8 94       	cli
    10e2:	de bf       	out	0x3e, r29	; 62
    10e4:	0f be       	out	0x3f, r0	; 63
    10e6:	cd bf       	out	0x3d, r28	; 61

000010e8 <.Loc.180>:
    if (agv_ultrasoon_LA <= 7)
    10e8:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
    10ec:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

000010f0 <.Loc.181>:
    10f0:	87 30       	cpi	r24, 0x07	; 7
    10f2:	91 05       	cpc	r25, r1
    10f4:	09 f0       	breq	.+2      	; 0x10f8 <.Loc.182>

000010f6 <L0^A>:
    10f6:	b0 f4       	brcc	.+44     	; 0x1124 <.L25>

000010f8 <.Loc.182>:
    {
        if (US_sens == 0)
    10f8:	80 91 16 02 	lds	r24, 0x0216	; 0x800216 <US_sens>
    10fc:	90 91 17 02 	lds	r25, 0x0217	; 0x800217 <US_sens+0x1>

00001100 <.Loc.183>:
    1100:	00 97       	sbiw	r24, 0x00	; 0
    1102:	a1 f4       	brne	.+40     	; 0x112c <.L26>

00001104 <.Loc.184>:
        {
           lane++;
    1104:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <lane>
    1108:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <lane+0x1>
    110c:	01 96       	adiw	r24, 0x01	; 1
    110e:	90 93 15 02 	sts	0x0215, r25	; 0x800215 <lane+0x1>
    1112:	80 93 14 02 	sts	0x0214, r24	; 0x800214 <lane>

00001116 <.Loc.185>:
           US_sens = 1;
    1116:	81 e0       	ldi	r24, 0x01	; 1
    1118:	90 e0       	ldi	r25, 0x00	; 0
    111a:	90 93 17 02 	sts	0x0217, r25	; 0x800217 <US_sens+0x1>
    111e:	80 93 16 02 	sts	0x0216, r24	; 0x800216 <US_sens>
    1122:	04 c0       	rjmp	.+8      	; 0x112c <.L26>

00001124 <.L25>:
        }
    }
    else
    {
        US_sens = 0;
    1124:	10 92 17 02 	sts	0x0217, r1	; 0x800217 <US_sens+0x1>
    1128:	10 92 16 02 	sts	0x0216, r1	; 0x800216 <US_sens>

0000112c <.L26>:
    }
    if (lane == 3)
    112c:	80 91 14 02 	lds	r24, 0x0214	; 0x800214 <lane>
    1130:	90 91 15 02 	lds	r25, 0x0215	; 0x800215 <lane+0x1>

00001134 <.Loc.188>:
    1134:	83 30       	cpi	r24, 0x03	; 3
    1136:	91 05       	cpc	r25, r1
    1138:	09 f0       	breq	.+2      	; 0x113c <.Loc.189>

0000113a <L0^A>:
    113a:	58 c0       	rjmp	.+176    	; 0x11ec <.L28>

0000113c <.Loc.189>:
    {
        //naar links bewegen
        h_bridgeL(0);
    113c:	80 e0       	ldi	r24, 0x00	; 0
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00001144 <.Loc.190>:
        h_bridgeR(30*overdracht_R);
    1144:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
    1148:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
    114c:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
    1150:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
    1154:	89 83       	std	Y+1, r24	; 0x01
    1156:	9a 83       	std	Y+2, r25	; 0x02
    1158:	ab 83       	std	Y+3, r26	; 0x03
    115a:	bc 83       	std	Y+4, r27	; 0x04
    115c:	20 e0       	ldi	r18, 0x00	; 0
    115e:	30 e0       	ldi	r19, 0x00	; 0
    1160:	40 ef       	ldi	r20, 0xF0	; 240
    1162:	51 e4       	ldi	r21, 0x41	; 65
    1164:	69 81       	ldd	r22, Y+1	; 0x01
    1166:	7a 81       	ldd	r23, Y+2	; 0x02
    1168:	8b 81       	ldd	r24, Y+3	; 0x03
    116a:	9c 81       	ldd	r25, Y+4	; 0x04
    116c:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    1170:	69 87       	std	Y+9, r22	; 0x09
    1172:	7a 87       	std	Y+10, r23	; 0x0a
    1174:	8b 87       	std	Y+11, r24	; 0x0b
    1176:	9c 87       	std	Y+12, r25	; 0x0c
    1178:	89 85       	ldd	r24, Y+9	; 0x09
    117a:	9a 85       	ldd	r25, Y+10	; 0x0a
    117c:	ab 85       	ldd	r26, Y+11	; 0x0b
    117e:	bc 85       	ldd	r27, Y+12	; 0x0c
    1180:	8d 83       	std	Y+5, r24	; 0x05
    1182:	9e 83       	std	Y+6, r25	; 0x06
    1184:	af 83       	std	Y+7, r26	; 0x07
    1186:	b8 87       	std	Y+8, r27	; 0x08

00001188 <.Loc.191>:
    1188:	6d 81       	ldd	r22, Y+5	; 0x05
    118a:	7e 81       	ldd	r23, Y+6	; 0x06
    118c:	8f 81       	ldd	r24, Y+7	; 0x07
    118e:	98 85       	ldd	r25, Y+8	; 0x08
    1190:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1194:	6d 87       	std	Y+13, r22	; 0x0d
    1196:	7e 87       	std	Y+14, r23	; 0x0e
    1198:	8f 87       	std	Y+15, r24	; 0x0f
    119a:	98 8b       	std	Y+16, r25	; 0x10
    119c:	8d 85       	ldd	r24, Y+13	; 0x0d
    119e:	9e 85       	ldd	r25, Y+14	; 0x0e
    11a0:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

000011a4 <.Loc.192>:
        PORTE |= (1 << motorL_1);
    11a4:	8e e2       	ldi	r24, 0x2E	; 46
    11a6:	90 e0       	ldi	r25, 0x00	; 0
    11a8:	dc 01       	movw	r26, r24
    11aa:	2c 91       	ld	r18, X
    11ac:	8e e2       	ldi	r24, 0x2E	; 46
    11ae:	90 e0       	ldi	r25, 0x00	; 0

000011b0 <.Loc.193>:
    11b0:	20 61       	ori	r18, 0x10	; 16
    11b2:	fc 01       	movw	r30, r24
    11b4:	20 83       	st	Z, r18

000011b6 <.Loc.194>:
        PORTE &= ~(1 << motorL_2);
    11b6:	8e e2       	ldi	r24, 0x2E	; 46
    11b8:	90 e0       	ldi	r25, 0x00	; 0
    11ba:	dc 01       	movw	r26, r24
    11bc:	2c 91       	ld	r18, X

000011be <.Loc.195>:
    11be:	8e e2       	ldi	r24, 0x2E	; 46
    11c0:	90 e0       	ldi	r25, 0x00	; 0

000011c2 <.Loc.196>:
    11c2:	2f 7d       	andi	r18, 0xDF	; 223
    11c4:	fc 01       	movw	r30, r24
    11c6:	20 83       	st	Z, r18

000011c8 <.Loc.197>:
        PORTE &= ~(1 << motorR_1);
    11c8:	8e e2       	ldi	r24, 0x2E	; 46
    11ca:	90 e0       	ldi	r25, 0x00	; 0
    11cc:	dc 01       	movw	r26, r24
    11ce:	2c 91       	ld	r18, X

000011d0 <.Loc.198>:
    11d0:	8e e2       	ldi	r24, 0x2E	; 46
    11d2:	90 e0       	ldi	r25, 0x00	; 0

000011d4 <.Loc.199>:
    11d4:	2d 7f       	andi	r18, 0xFD	; 253
    11d6:	fc 01       	movw	r30, r24
    11d8:	20 83       	st	Z, r18

000011da <.Loc.200>:
        PORTG |= (1 << motorR_2);
    11da:	84 e3       	ldi	r24, 0x34	; 52
    11dc:	90 e0       	ldi	r25, 0x00	; 0
    11de:	dc 01       	movw	r26, r24
    11e0:	2c 91       	ld	r18, X
    11e2:	84 e3       	ldi	r24, 0x34	; 52
    11e4:	90 e0       	ldi	r25, 0x00	; 0

000011e6 <.Loc.201>:
    11e6:	20 62       	ori	r18, 0x20	; 32
    11e8:	fc 01       	movw	r30, r24
    11ea:	20 83       	st	Z, r18

000011ec <.L28>:
    }

}
    11ec:	00 00       	nop
    11ee:	60 96       	adiw	r28, 0x10	; 16
    11f0:	0f b6       	in	r0, 0x3f	; 63
    11f2:	f8 94       	cli
    11f4:	de bf       	out	0x3e, r29	; 62
    11f6:	0f be       	out	0x3f, r0	; 63
    11f8:	cd bf       	out	0x3d, r28	; 61
    11fa:	df 91       	pop	r29
    11fc:	cf 91       	pop	r28
    11fe:	08 95       	ret

00001200 <main>:

int main(void)
{
    1200:	cf 93       	push	r28
    1202:	df 93       	push	r29
    1204:	cd b7       	in	r28, 0x3d	; 61
    1206:	de b7       	in	r29, 0x3e	; 62
    1208:	c0 54       	subi	r28, 0x40	; 64
    120a:	d1 09       	sbc	r29, r1
    120c:	0f b6       	in	r0, 0x3f	; 63
    120e:	f8 94       	cli
    1210:	de bf       	out	0x3e, r29	; 62
    1212:	0f be       	out	0x3f, r0	; 63
    1214:	cd bf       	out	0x3d, r28	; 61

00001216 <.Loc.204>:
    boom_det();
    1216:	0e 94 1c 06 	call	0xc38	; 0xc38 <boom_det>

0000121a <.Loc.205>:
    PIN_setup();
    121a:	0e 94 28 04 	call	0x850	; 0x850 <PIN_setup>

0000121e <.Loc.206>:
    draaien();
    121e:	0e 94 9e 05 	call	0xb3c	; 0xb3c <draaien>

00001222 <.Loc.207>:
    draaien_2();
    1222:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <draaien_2>

00001226 <.Loc.208>:
    agv_ultrasoon_init();
    1226:	0e 94 a5 00 	call	0x14a	; 0x14a <agv_ultrasoon_init>

0000122a <.Loc.209>:
    PID();
    122a:	0e 94 51 05 	call	0xaa2	; 0xaa2 <PID>

0000122e <.Loc.210>:
    init_h_brug();
    122e:	0e 94 54 04 	call	0x8a8	; 0x8a8 <init_h_brug>

00001232 <.L40>:

    while(1)
    {
        switch (rijden)
    1232:	80 91 18 02 	lds	r24, 0x0218	; 0x800218 <rijden>
    1236:	90 91 19 02 	lds	r25, 0x0219	; 0x800219 <rijden+0x1>
    123a:	09 2e       	mov	r0, r25
    123c:	00 0c       	add	r0, r0
    123e:	aa 0b       	sbc	r26, r26
    1240:	bb 0b       	sbc	r27, r27
    1242:	87 30       	cpi	r24, 0x07	; 7
    1244:	91 05       	cpc	r25, r1
    1246:	a1 05       	cpc	r26, r1
    1248:	b1 05       	cpc	r27, r1
    124a:	09 f0       	breq	.+2      	; 0x124e <L0^A+0x2>

0000124c <L0^A>:
    124c:	90 f7       	brcc	.-28     	; 0x1232 <.L40>
    124e:	fc 01       	movw	r30, r24
    1250:	88 27       	eor	r24, r24
    1252:	eb 50       	subi	r30, 0x0B	; 11
    1254:	f4 4f       	sbci	r31, 0xF4	; 244
    1256:	8f 4f       	sbci	r24, 0xFF	; 255
    1258:	0c 94 96 0a 	jmp	0x152c	; 0x152c <__tablejump2__>

0000125c <.L39>:
        {
        case 0:
            if((PINF && (1<<knop)) != 0)
    125c:	8f e2       	ldi	r24, 0x2F	; 47
    125e:	90 e0       	ldi	r25, 0x00	; 0
    1260:	dc 01       	movw	r26, r24
    1262:	8c 91       	ld	r24, X

00001264 <.Loc.213>:
    1264:	88 23       	and	r24, r24
    1266:	31 f0       	breq	.+12     	; 0x1274 <.L38>

00001268 <.Loc.214>:
            {
                rijden = 1;
    1268:	81 e0       	ldi	r24, 0x01	; 1
    126a:	90 e0       	ldi	r25, 0x00	; 0
    126c:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    1270:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

00001274 <.L38>:
            }
        case 1:
            //beide motoren aan
            h_bridgeL(60*overdracht_L);
    1274:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <overdracht_L>
    1278:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <overdracht_L+0x1>
    127c:	a0 91 1c 02 	lds	r26, 0x021C	; 0x80021c <overdracht_L+0x2>
    1280:	b0 91 1d 02 	lds	r27, 0x021D	; 0x80021d <overdracht_L+0x3>
    1284:	89 83       	std	Y+1, r24	; 0x01
    1286:	9a 83       	std	Y+2, r25	; 0x02
    1288:	ab 83       	std	Y+3, r26	; 0x03
    128a:	bc 83       	std	Y+4, r27	; 0x04
    128c:	20 e0       	ldi	r18, 0x00	; 0
    128e:	30 e0       	ldi	r19, 0x00	; 0
    1290:	40 e7       	ldi	r20, 0x70	; 112
    1292:	52 e4       	ldi	r21, 0x42	; 66
    1294:	69 81       	ldd	r22, Y+1	; 0x01
    1296:	7a 81       	ldd	r23, Y+2	; 0x02
    1298:	8b 81       	ldd	r24, Y+3	; 0x03
    129a:	9c 81       	ldd	r25, Y+4	; 0x04
    129c:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    12a0:	69 a3       	std	Y+33, r22	; 0x21
    12a2:	7a a3       	std	Y+34, r23	; 0x22
    12a4:	8b a3       	std	Y+35, r24	; 0x23
    12a6:	9c a3       	std	Y+36, r25	; 0x24
    12a8:	89 a1       	ldd	r24, Y+33	; 0x21
    12aa:	9a a1       	ldd	r25, Y+34	; 0x22
    12ac:	ab a1       	ldd	r26, Y+35	; 0x23
    12ae:	bc a1       	ldd	r27, Y+36	; 0x24
    12b0:	8d 83       	std	Y+5, r24	; 0x05
    12b2:	9e 83       	std	Y+6, r25	; 0x06
    12b4:	af 83       	std	Y+7, r26	; 0x07
    12b6:	b8 87       	std	Y+8, r27	; 0x08

000012b8 <.Loc.216>:
    12b8:	6d 81       	ldd	r22, Y+5	; 0x05
    12ba:	7e 81       	ldd	r23, Y+6	; 0x06
    12bc:	8f 81       	ldd	r24, Y+7	; 0x07
    12be:	98 85       	ldd	r25, Y+8	; 0x08
    12c0:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    12c4:	6d a3       	std	Y+37, r22	; 0x25
    12c6:	7e a3       	std	Y+38, r23	; 0x26
    12c8:	8f a3       	std	Y+39, r24	; 0x27
    12ca:	98 a7       	std	Y+40, r25	; 0x28
    12cc:	8d a1       	ldd	r24, Y+37	; 0x25
    12ce:	9e a1       	ldd	r25, Y+38	; 0x26
    12d0:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

000012d4 <.Loc.217>:
            h_bridgeR(60*overdracht_R);
    12d4:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
    12d8:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
    12dc:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
    12e0:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
    12e4:	89 87       	std	Y+9, r24	; 0x09
    12e6:	9a 87       	std	Y+10, r25	; 0x0a
    12e8:	ab 87       	std	Y+11, r26	; 0x0b
    12ea:	bc 87       	std	Y+12, r27	; 0x0c
    12ec:	20 e0       	ldi	r18, 0x00	; 0
    12ee:	30 e0       	ldi	r19, 0x00	; 0
    12f0:	40 e7       	ldi	r20, 0x70	; 112
    12f2:	52 e4       	ldi	r21, 0x42	; 66
    12f4:	69 85       	ldd	r22, Y+9	; 0x09
    12f6:	7a 85       	ldd	r23, Y+10	; 0x0a
    12f8:	8b 85       	ldd	r24, Y+11	; 0x0b
    12fa:	9c 85       	ldd	r25, Y+12	; 0x0c
    12fc:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    1300:	69 a7       	std	Y+41, r22	; 0x29
    1302:	7a a7       	std	Y+42, r23	; 0x2a
    1304:	8b a7       	std	Y+43, r24	; 0x2b
    1306:	9c a7       	std	Y+44, r25	; 0x2c
    1308:	89 a5       	ldd	r24, Y+41	; 0x29
    130a:	9a a5       	ldd	r25, Y+42	; 0x2a
    130c:	ab a5       	ldd	r26, Y+43	; 0x2b
    130e:	bc a5       	ldd	r27, Y+44	; 0x2c
    1310:	8d 87       	std	Y+13, r24	; 0x0d
    1312:	9e 87       	std	Y+14, r25	; 0x0e
    1314:	af 87       	std	Y+15, r26	; 0x0f
    1316:	b8 8b       	std	Y+16, r27	; 0x10

00001318 <.Loc.218>:
    1318:	6d 85       	ldd	r22, Y+13	; 0x0d
    131a:	7e 85       	ldd	r23, Y+14	; 0x0e
    131c:	8f 85       	ldd	r24, Y+15	; 0x0f
    131e:	98 89       	ldd	r25, Y+16	; 0x10
    1320:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1324:	6d a7       	std	Y+45, r22	; 0x2d
    1326:	7e a7       	std	Y+46, r23	; 0x2e
    1328:	8f a7       	std	Y+47, r24	; 0x2f
    132a:	98 ab       	std	Y+48, r25	; 0x30
    132c:	8d a5       	ldd	r24, Y+45	; 0x2d
    132e:	9e a5       	ldd	r25, Y+46	; 0x2e
    1330:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00001334 <.Loc.219>:
            PORTE |= (1 << motorL_1);
    1334:	8e e2       	ldi	r24, 0x2E	; 46
    1336:	90 e0       	ldi	r25, 0x00	; 0
    1338:	dc 01       	movw	r26, r24
    133a:	2c 91       	ld	r18, X
    133c:	8e e2       	ldi	r24, 0x2E	; 46
    133e:	90 e0       	ldi	r25, 0x00	; 0

00001340 <.Loc.220>:
    1340:	20 61       	ori	r18, 0x10	; 16
    1342:	fc 01       	movw	r30, r24
    1344:	20 83       	st	Z, r18

00001346 <.Loc.221>:
            PORTE &= ~(1 << motorL_2);
    1346:	8e e2       	ldi	r24, 0x2E	; 46
    1348:	90 e0       	ldi	r25, 0x00	; 0
    134a:	dc 01       	movw	r26, r24
    134c:	2c 91       	ld	r18, X

0000134e <.Loc.222>:
    134e:	8e e2       	ldi	r24, 0x2E	; 46
    1350:	90 e0       	ldi	r25, 0x00	; 0

00001352 <.Loc.223>:
    1352:	2f 7d       	andi	r18, 0xDF	; 223
    1354:	fc 01       	movw	r30, r24
    1356:	20 83       	st	Z, r18

00001358 <.Loc.224>:
            PORTG &= ~(1 << motorR_1);
    1358:	84 e3       	ldi	r24, 0x34	; 52
    135a:	90 e0       	ldi	r25, 0x00	; 0
    135c:	dc 01       	movw	r26, r24
    135e:	2c 91       	ld	r18, X

00001360 <.Loc.225>:
    1360:	84 e3       	ldi	r24, 0x34	; 52
    1362:	90 e0       	ldi	r25, 0x00	; 0

00001364 <.Loc.226>:
    1364:	2d 7f       	andi	r18, 0xFD	; 253
    1366:	fc 01       	movw	r30, r24
    1368:	20 83       	st	Z, r18

0000136a <.Loc.227>:
            PORTE |= (1 << motorR_2);
    136a:	8e e2       	ldi	r24, 0x2E	; 46
    136c:	90 e0       	ldi	r25, 0x00	; 0
    136e:	dc 01       	movw	r26, r24
    1370:	2c 91       	ld	r18, X
    1372:	8e e2       	ldi	r24, 0x2E	; 46
    1374:	90 e0       	ldi	r25, 0x00	; 0

00001376 <.Loc.228>:
    1376:	20 62       	ori	r18, 0x20	; 32
    1378:	fc 01       	movw	r30, r24
    137a:	20 83       	st	Z, r18

0000137c <.Loc.229>:
            boom_det();
    137c:	0e 94 1c 06 	call	0xc38	; 0xc38 <boom_det>

00001380 <.Loc.230>:
            rijden = 2;
    1380:	82 e0       	ldi	r24, 0x02	; 2
    1382:	90 e0       	ldi	r25, 0x00	; 0
    1384:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    1388:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

0000138c <.Loc.231>:
            break;
    138c:	ba c0       	rjmp	.+372    	; 0x1502 <.L30>

0000138e <.L37>:
        case 2:
            draaien();
    138e:	0e 94 9e 05 	call	0xb3c	; 0xb3c <draaien>

00001392 <.Loc.233>:
            rijden = 3;
    1392:	83 e0       	ldi	r24, 0x03	; 3
    1394:	90 e0       	ldi	r25, 0x00	; 0
    1396:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    139a:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

0000139e <.Loc.234>:
            break;
    139e:	b1 c0       	rjmp	.+354    	; 0x1502 <.L30>

000013a0 <.L36>:
        case 3:
            draaien_2();
    13a0:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <draaien_2>

000013a4 <.Loc.236>:
            rijden = 4;
    13a4:	84 e0       	ldi	r24, 0x04	; 4
    13a6:	90 e0       	ldi	r25, 0x00	; 0
    13a8:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    13ac:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

000013b0 <.Loc.237>:
            break;
    13b0:	a8 c0       	rjmp	.+336    	; 0x1502 <.L30>

000013b2 <.L35>:
        case 4:
            //bijde motoren weer aan
            h_bridgeL(60*overdracht_L);
    13b2:	80 91 1a 02 	lds	r24, 0x021A	; 0x80021a <overdracht_L>
    13b6:	90 91 1b 02 	lds	r25, 0x021B	; 0x80021b <overdracht_L+0x1>
    13ba:	a0 91 1c 02 	lds	r26, 0x021C	; 0x80021c <overdracht_L+0x2>
    13be:	b0 91 1d 02 	lds	r27, 0x021D	; 0x80021d <overdracht_L+0x3>
    13c2:	89 8b       	std	Y+17, r24	; 0x11
    13c4:	9a 8b       	std	Y+18, r25	; 0x12
    13c6:	ab 8b       	std	Y+19, r26	; 0x13
    13c8:	bc 8b       	std	Y+20, r27	; 0x14
    13ca:	20 e0       	ldi	r18, 0x00	; 0
    13cc:	30 e0       	ldi	r19, 0x00	; 0
    13ce:	40 e7       	ldi	r20, 0x70	; 112
    13d0:	52 e4       	ldi	r21, 0x42	; 66
    13d2:	69 89       	ldd	r22, Y+17	; 0x11
    13d4:	7a 89       	ldd	r23, Y+18	; 0x12
    13d6:	8b 89       	ldd	r24, Y+19	; 0x13
    13d8:	9c 89       	ldd	r25, Y+20	; 0x14
    13da:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    13de:	69 ab       	std	Y+49, r22	; 0x31
    13e0:	7a ab       	std	Y+50, r23	; 0x32
    13e2:	8b ab       	std	Y+51, r24	; 0x33
    13e4:	9c ab       	std	Y+52, r25	; 0x34
    13e6:	89 a9       	ldd	r24, Y+49	; 0x31
    13e8:	9a a9       	ldd	r25, Y+50	; 0x32
    13ea:	ab a9       	ldd	r26, Y+51	; 0x33
    13ec:	bc a9       	ldd	r27, Y+52	; 0x34
    13ee:	8d 8b       	std	Y+21, r24	; 0x15
    13f0:	9e 8b       	std	Y+22, r25	; 0x16
    13f2:	af 8b       	std	Y+23, r26	; 0x17
    13f4:	b8 8f       	std	Y+24, r27	; 0x18

000013f6 <.Loc.239>:
    13f6:	6d 89       	ldd	r22, Y+21	; 0x15
    13f8:	7e 89       	ldd	r23, Y+22	; 0x16
    13fa:	8f 89       	ldd	r24, Y+23	; 0x17
    13fc:	98 8d       	ldd	r25, Y+24	; 0x18
    13fe:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1402:	6d ab       	std	Y+53, r22	; 0x35
    1404:	7e ab       	std	Y+54, r23	; 0x36
    1406:	8f ab       	std	Y+55, r24	; 0x37
    1408:	98 af       	std	Y+56, r25	; 0x38
    140a:	8d a9       	ldd	r24, Y+53	; 0x35
    140c:	9e a9       	ldd	r25, Y+54	; 0x36
    140e:	0e 94 1a 05 	call	0xa34	; 0xa34 <h_bridgeL>

00001412 <.Loc.240>:
            h_bridgeR(60*overdracht_R);
    1412:	80 91 1e 02 	lds	r24, 0x021E	; 0x80021e <overdracht_R>
    1416:	90 91 1f 02 	lds	r25, 0x021F	; 0x80021f <overdracht_R+0x1>
    141a:	a0 91 20 02 	lds	r26, 0x0220	; 0x800220 <overdracht_R+0x2>
    141e:	b0 91 21 02 	lds	r27, 0x0221	; 0x800221 <overdracht_R+0x3>
    1422:	89 8f       	std	Y+25, r24	; 0x19
    1424:	9a 8f       	std	Y+26, r25	; 0x1a
    1426:	ab 8f       	std	Y+27, r26	; 0x1b
    1428:	bc 8f       	std	Y+28, r27	; 0x1c
    142a:	20 e0       	ldi	r18, 0x00	; 0
    142c:	30 e0       	ldi	r19, 0x00	; 0
    142e:	40 e7       	ldi	r20, 0x70	; 112
    1430:	52 e4       	ldi	r21, 0x42	; 66
    1432:	69 8d       	ldd	r22, Y+25	; 0x19
    1434:	7a 8d       	ldd	r23, Y+26	; 0x1a
    1436:	8b 8d       	ldd	r24, Y+27	; 0x1b
    1438:	9c 8d       	ldd	r25, Y+28	; 0x1c
    143a:	0e 94 5e 0b 	call	0x16bc	; 0x16bc <__mulsf3>
    143e:	69 af       	std	Y+57, r22	; 0x39
    1440:	7a af       	std	Y+58, r23	; 0x3a
    1442:	8b af       	std	Y+59, r24	; 0x3b
    1444:	9c af       	std	Y+60, r25	; 0x3c
    1446:	89 ad       	ldd	r24, Y+57	; 0x39
    1448:	9a ad       	ldd	r25, Y+58	; 0x3a
    144a:	ab ad       	ldd	r26, Y+59	; 0x3b
    144c:	bc ad       	ldd	r27, Y+60	; 0x3c
    144e:	8d 8f       	std	Y+29, r24	; 0x1d
    1450:	9e 8f       	std	Y+30, r25	; 0x1e
    1452:	af 8f       	std	Y+31, r26	; 0x1f
    1454:	b8 a3       	std	Y+32, r27	; 0x20

00001456 <.Loc.241>:
    1456:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1458:	7e 8d       	ldd	r23, Y+30	; 0x1e
    145a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    145c:	98 a1       	ldd	r25, Y+32	; 0x20
    145e:	0e 94 c2 0a 	call	0x1584	; 0x1584 <__fixsfsi>
    1462:	21 96       	adiw	r28, 0x01	; 1
    1464:	6c af       	std	Y+60, r22	; 0x3c
    1466:	7d af       	std	Y+61, r23	; 0x3d
    1468:	8e af       	std	Y+62, r24	; 0x3e
    146a:	9f af       	std	Y+63, r25	; 0x3f
    146c:	21 97       	sbiw	r28, 0x01	; 1
    146e:	8d ad       	ldd	r24, Y+61	; 0x3d
    1470:	9e ad       	ldd	r25, Y+62	; 0x3e
    1472:	0e 94 e3 04 	call	0x9c6	; 0x9c6 <h_bridgeR>

00001476 <.Loc.242>:
            PORTE |= (1 << motorL_1);
    1476:	8e e2       	ldi	r24, 0x2E	; 46
    1478:	90 e0       	ldi	r25, 0x00	; 0
    147a:	dc 01       	movw	r26, r24
    147c:	2c 91       	ld	r18, X
    147e:	8e e2       	ldi	r24, 0x2E	; 46
    1480:	90 e0       	ldi	r25, 0x00	; 0

00001482 <.Loc.243>:
    1482:	20 61       	ori	r18, 0x10	; 16
    1484:	fc 01       	movw	r30, r24
    1486:	20 83       	st	Z, r18

00001488 <.Loc.244>:
            PORTE &= ~(1 << motorL_2);
    1488:	8e e2       	ldi	r24, 0x2E	; 46
    148a:	90 e0       	ldi	r25, 0x00	; 0
    148c:	dc 01       	movw	r26, r24
    148e:	2c 91       	ld	r18, X

00001490 <.Loc.245>:
    1490:	8e e2       	ldi	r24, 0x2E	; 46
    1492:	90 e0       	ldi	r25, 0x00	; 0

00001494 <.Loc.246>:
    1494:	2f 7d       	andi	r18, 0xDF	; 223
    1496:	fc 01       	movw	r30, r24
    1498:	20 83       	st	Z, r18

0000149a <.Loc.247>:
            PORTG &= ~(1 << motorR_1);
    149a:	84 e3       	ldi	r24, 0x34	; 52
    149c:	90 e0       	ldi	r25, 0x00	; 0
    149e:	dc 01       	movw	r26, r24
    14a0:	2c 91       	ld	r18, X

000014a2 <.Loc.248>:
    14a2:	84 e3       	ldi	r24, 0x34	; 52
    14a4:	90 e0       	ldi	r25, 0x00	; 0

000014a6 <.Loc.249>:
    14a6:	2d 7f       	andi	r18, 0xFD	; 253
    14a8:	fc 01       	movw	r30, r24
    14aa:	20 83       	st	Z, r18

000014ac <.Loc.250>:
            PORTE |= (1 << motorR_2);
    14ac:	8e e2       	ldi	r24, 0x2E	; 46
    14ae:	90 e0       	ldi	r25, 0x00	; 0
    14b0:	dc 01       	movw	r26, r24
    14b2:	2c 91       	ld	r18, X
    14b4:	8e e2       	ldi	r24, 0x2E	; 46
    14b6:	90 e0       	ldi	r25, 0x00	; 0

000014b8 <.Loc.251>:
    14b8:	20 62       	ori	r18, 0x20	; 32
    14ba:	fc 01       	movw	r30, r24
    14bc:	20 83       	st	Z, r18

000014be <.Loc.252>:
            boom_det();
    14be:	0e 94 1c 06 	call	0xc38	; 0xc38 <boom_det>

000014c2 <.Loc.253>:
            rijden = 5;
    14c2:	85 e0       	ldi	r24, 0x05	; 5
    14c4:	90 e0       	ldi	r25, 0x00	; 0
    14c6:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    14ca:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

000014ce <.Loc.254>:
            break;
    14ce:	19 c0       	rjmp	.+50     	; 0x1502 <.L30>

000014d0 <.L34>:
        case 5:
            //beide motoren aan
            boom_det();
    14d0:	0e 94 1c 06 	call	0xc38	; 0xc38 <boom_det>

000014d4 <.Loc.256>:
            rijden = 6;
    14d4:	86 e0       	ldi	r24, 0x06	; 6
    14d6:	90 e0       	ldi	r25, 0x00	; 0
    14d8:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    14dc:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

000014e0 <.Loc.257>:
            break;
    14e0:	10 c0       	rjmp	.+32     	; 0x1502 <.L30>

000014e2 <.L33>:
        case 6:
            draaien();
    14e2:	0e 94 9e 05 	call	0xb3c	; 0xb3c <draaien>

000014e6 <.Loc.259>:
            rijden = 7;
    14e6:	87 e0       	ldi	r24, 0x07	; 7
    14e8:	90 e0       	ldi	r25, 0x00	; 0
    14ea:	90 93 19 02 	sts	0x0219, r25	; 0x800219 <rijden+0x1>
    14ee:	80 93 18 02 	sts	0x0218, r24	; 0x800218 <rijden>

000014f2 <.Loc.260>:
            break;
    14f2:	07 c0       	rjmp	.+14     	; 0x1502 <.L30>

000014f4 <.L31>:
        case 7:
            draaien_2();
    14f4:	0e 94 6a 08 	call	0x10d4	; 0x10d4 <draaien_2>

000014f8 <.Loc.262>:
            rijden = 0;
    14f8:	10 92 19 02 	sts	0x0219, r1	; 0x800219 <rijden+0x1>
    14fc:	10 92 18 02 	sts	0x0218, r1	; 0x800218 <rijden>

00001500 <.Loc.263>:
	...

00001502 <.L30>:
        switch (rijden)
    1502:	97 ce       	rjmp	.-722    	; 0x1232 <.L40>

00001504 <__udivmodhi4>:
    1504:	aa 1b       	sub	r26, r26

00001506 <.Loc.1>:
    1506:	bb 1b       	sub	r27, r27

00001508 <.Loc.2>:
    1508:	51 e1       	ldi	r21, 0x11	; 17

0000150a <.Loc.3>:
    150a:	07 c0       	rjmp	.+14     	; 0x151a <__udivmodhi4_ep>

0000150c <__udivmodhi4_loop>:
    150c:	aa 1f       	adc	r26, r26

0000150e <.Loc.5>:
    150e:	bb 1f       	adc	r27, r27

00001510 <.Loc.6>:
    1510:	a6 17       	cp	r26, r22

00001512 <.Loc.7>:
    1512:	b7 07       	cpc	r27, r23

00001514 <.Loc.8>:
    1514:	10 f0       	brcs	.+4      	; 0x151a <__udivmodhi4_ep>

00001516 <.Loc.9>:
    1516:	a6 1b       	sub	r26, r22

00001518 <.Loc.10>:
    1518:	b7 0b       	sbc	r27, r23

0000151a <__udivmodhi4_ep>:
    151a:	88 1f       	adc	r24, r24

0000151c <.Loc.12>:
    151c:	99 1f       	adc	r25, r25

0000151e <.Loc.13>:
    151e:	5a 95       	dec	r21

00001520 <.Loc.14>:
    1520:	a9 f7       	brne	.-22     	; 0x150c <__udivmodhi4_loop>

00001522 <.Loc.15>:
    1522:	80 95       	com	r24

00001524 <.Loc.16>:
    1524:	90 95       	com	r25

00001526 <.Loc.17>:
    1526:	bc 01       	movw	r22, r24

00001528 <.Loc.18>:
    1528:	cd 01       	movw	r24, r26

0000152a <.Loc.19>:
    152a:	08 95       	ret

0000152c <__tablejump2__>:
    152c:	ee 0f       	add	r30, r30

0000152e <.Loc.1>:
    152e:	ff 1f       	adc	r31, r31

00001530 <.Loc.2>:
    1530:	88 1f       	adc	r24, r24

00001532 <.Loc.3>:
    1532:	8b bf       	out	0x3b, r24	; 59

00001534 <.Loc.4>:
    1534:	07 90       	elpm	r0, Z+

00001536 <.Loc.5>:
    1536:	f6 91       	elpm	r31, Z

00001538 <.Loc.6>:
    1538:	e0 2d       	mov	r30, r0

0000153a <.Loc.7>:
    153a:	19 94       	eijmp

0000153c <__umulhisi3>:
    153c:	a2 9f       	mul	r26, r18

0000153e <.Loc.1>:
    153e:	b0 01       	movw	r22, r0

00001540 <.Loc.2>:
    1540:	b3 9f       	mul	r27, r19

00001542 <.Loc.3>:
    1542:	c0 01       	movw	r24, r0

00001544 <.Loc.4>:
    1544:	a3 9f       	mul	r26, r19

00001546 <.Loc.5>:
    1546:	70 0d       	add	r23, r0

00001548 <.Loc.6>:
    1548:	81 1d       	adc	r24, r1

0000154a <.Loc.7>:
    154a:	11 24       	eor	r1, r1

0000154c <.Loc.8>:
    154c:	91 1d       	adc	r25, r1

0000154e <.Loc.9>:
    154e:	b2 9f       	mul	r27, r18

00001550 <.Loc.10>:
    1550:	70 0d       	add	r23, r0

00001552 <.Loc.11>:
    1552:	81 1d       	adc	r24, r1

00001554 <.Loc.12>:
    1554:	11 24       	eor	r1, r1

00001556 <.Loc.13>:
    1556:	91 1d       	adc	r25, r1

00001558 <.Loc.14>:
    1558:	08 95       	ret

0000155a <__adddi3_s8>:
    155a:	00 24       	eor	r0, r0

0000155c <.Loc.1>:
    155c:	a7 fd       	sbrc	r26, 7

0000155e <.Loc.2>:
    155e:	00 94       	com	r0

00001560 <.Loc.3>:
    1560:	2a 0f       	add	r18, r26
    1562:	30 1d       	adc	r19, r0
    1564:	40 1d       	adc	r20, r0
    1566:	50 1d       	adc	r21, r0

00001568 <.Loc.4>:
    1568:	60 1d       	adc	r22, r0
    156a:	70 1d       	adc	r23, r0
    156c:	80 1d       	adc	r24, r0
    156e:	90 1d       	adc	r25, r0

00001570 <.Loc.5>:
    1570:	08 95       	ret

00001572 <__subdi3>:
    1572:	2a 19       	sub	r18, r10
    1574:	3b 09       	sbc	r19, r11
    1576:	4c 09       	sbc	r20, r12
    1578:	5d 09       	sbc	r21, r13

0000157a <.Loc.1>:
    157a:	6e 09       	sbc	r22, r14
    157c:	7f 09       	sbc	r23, r15
    157e:	80 0b       	sbc	r24, r16
    1580:	91 0b       	sbc	r25, r17

00001582 <.Loc.2>:
    1582:	08 95       	ret

00001584 <__fixsfsi>:
    1584:	0e 94 c9 0a 	call	0x1592	; 0x1592 <__fixunssfsi>
    1588:	68 94       	set
    158a:	b1 11       	cpse	r27, r1
    158c:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <__fp_szero>
    1590:	08 95       	ret

00001592 <__fixunssfsi>:
    1592:	0e 94 3d 0b 	call	0x167a	; 0x167a <__fp_splitA>
    1596:	88 f0       	brcs	.+34     	; 0x15ba <.L_err>
    1598:	9f 57       	subi	r25, 0x7F	; 127
    159a:	98 f0       	brcs	.+38     	; 0x15c2 <.L_zr>
    159c:	b9 2f       	mov	r27, r25
    159e:	99 27       	eor	r25, r25
    15a0:	b7 51       	subi	r27, 0x17	; 23
    15a2:	b0 f0       	brcs	.+44     	; 0x15d0 <.L4^B1>
    15a4:	e1 f0       	breq	.+56     	; 0x15de <.L_sign>

000015a6 <.L1^B1>:
    15a6:	66 0f       	add	r22, r22
    15a8:	77 1f       	adc	r23, r23
    15aa:	88 1f       	adc	r24, r24
    15ac:	99 1f       	adc	r25, r25
    15ae:	1a f0       	brmi	.+6      	; 0x15b6 <.L2^B1>
    15b0:	ba 95       	dec	r27
    15b2:	c9 f7       	brne	.-14     	; 0x15a6 <.L1^B1>
    15b4:	14 c0       	rjmp	.+40     	; 0x15de <.L_sign>

000015b6 <.L2^B1>:
    15b6:	b1 30       	cpi	r27, 0x01	; 1
    15b8:	91 f0       	breq	.+36     	; 0x15de <.L_sign>

000015ba <.L_err>:
    15ba:	0e 94 57 0b 	call	0x16ae	; 0x16ae <__fp_zero>
    15be:	b1 e0       	ldi	r27, 0x01	; 1
    15c0:	08 95       	ret

000015c2 <.L_zr>:
    15c2:	0c 94 57 0b 	jmp	0x16ae	; 0x16ae <__fp_zero>

000015c6 <.L3^B1>:
    15c6:	67 2f       	mov	r22, r23
    15c8:	78 2f       	mov	r23, r24
    15ca:	88 27       	eor	r24, r24
    15cc:	b8 5f       	subi	r27, 0xF8	; 248
    15ce:	39 f0       	breq	.+14     	; 0x15de <.L_sign>

000015d0 <.L4^B1>:
    15d0:	b9 3f       	cpi	r27, 0xF9	; 249
    15d2:	cc f3       	brlt	.-14     	; 0x15c6 <.L3^B1>

000015d4 <.L5^B1>:
    15d4:	86 95       	lsr	r24
    15d6:	77 95       	ror	r23
    15d8:	67 95       	ror	r22
    15da:	b3 95       	inc	r27
    15dc:	d9 f7       	brne	.-10     	; 0x15d4 <.L5^B1>

000015de <.L_sign>:
    15de:	3e f4       	brtc	.+14     	; 0x15ee <.L6^B1>
    15e0:	90 95       	com	r25
    15e2:	80 95       	com	r24
    15e4:	70 95       	com	r23
    15e6:	61 95       	neg	r22
    15e8:	7f 4f       	sbci	r23, 0xFF	; 255
    15ea:	8f 4f       	sbci	r24, 0xFF	; 255
    15ec:	9f 4f       	sbci	r25, 0xFF	; 255

000015ee <.L6^B1>:
    15ee:	08 95       	ret

000015f0 <__floatunsisf>:
    15f0:	e8 94       	clt
    15f2:	09 c0       	rjmp	.+18     	; 0x1606 <.L1^B1>

000015f4 <__floatsisf>:
    15f4:	97 fb       	bst	r25, 7
    15f6:	3e f4       	brtc	.+14     	; 0x1606 <.L1^B1>
    15f8:	90 95       	com	r25
    15fa:	80 95       	com	r24
    15fc:	70 95       	com	r23
    15fe:	61 95       	neg	r22
    1600:	7f 4f       	sbci	r23, 0xFF	; 255
    1602:	8f 4f       	sbci	r24, 0xFF	; 255
    1604:	9f 4f       	sbci	r25, 0xFF	; 255

00001606 <.L1^B1>:
    1606:	99 23       	and	r25, r25
    1608:	a9 f0       	breq	.+42     	; 0x1634 <.L4^B1>
    160a:	f9 2f       	mov	r31, r25
    160c:	96 e9       	ldi	r25, 0x96	; 150
    160e:	bb 27       	eor	r27, r27

00001610 <.L2^B1>:
    1610:	93 95       	inc	r25
    1612:	f6 95       	lsr	r31
    1614:	87 95       	ror	r24
    1616:	77 95       	ror	r23
    1618:	67 95       	ror	r22
    161a:	b7 95       	ror	r27
    161c:	f1 11       	cpse	r31, r1
    161e:	f8 cf       	rjmp	.-16     	; 0x1610 <.L2^B1>
    1620:	fa f4       	brpl	.+62     	; 0x1660 <.L_pack>
    1622:	bb 0f       	add	r27, r27
    1624:	11 f4       	brne	.+4      	; 0x162a <.L3^B1>
    1626:	60 ff       	sbrs	r22, 0
    1628:	1b c0       	rjmp	.+54     	; 0x1660 <.L_pack>

0000162a <.L3^B1>:
    162a:	6f 5f       	subi	r22, 0xFF	; 255
    162c:	7f 4f       	sbci	r23, 0xFF	; 255
    162e:	8f 4f       	sbci	r24, 0xFF	; 255
    1630:	9f 4f       	sbci	r25, 0xFF	; 255
    1632:	16 c0       	rjmp	.+44     	; 0x1660 <.L_pack>

00001634 <.L4^B1>:
    1634:	88 23       	and	r24, r24
    1636:	11 f0       	breq	.+4      	; 0x163c <.L5^B1>
    1638:	96 e9       	ldi	r25, 0x96	; 150
    163a:	11 c0       	rjmp	.+34     	; 0x165e <.L8^B1>

0000163c <.L5^B1>:
    163c:	77 23       	and	r23, r23
    163e:	21 f0       	breq	.+8      	; 0x1648 <.L6^B1>
    1640:	9e e8       	ldi	r25, 0x8E	; 142
    1642:	87 2f       	mov	r24, r23
    1644:	76 2f       	mov	r23, r22
    1646:	05 c0       	rjmp	.+10     	; 0x1652 <.L7^B1>

00001648 <.L6^B1>:
    1648:	66 23       	and	r22, r22
    164a:	71 f0       	breq	.+28     	; 0x1668 <.L9^B1>
    164c:	96 e8       	ldi	r25, 0x86	; 134
    164e:	86 2f       	mov	r24, r22
    1650:	70 e0       	ldi	r23, 0x00	; 0

00001652 <.L7^B1>:
    1652:	60 e0       	ldi	r22, 0x00	; 0
    1654:	2a f0       	brmi	.+10     	; 0x1660 <.L_pack>

00001656 <.L10^B1>:
    1656:	9a 95       	dec	r25
    1658:	66 0f       	add	r22, r22
    165a:	77 1f       	adc	r23, r23
    165c:	88 1f       	adc	r24, r24

0000165e <.L8^B1>:
    165e:	da f7       	brpl	.-10     	; 0x1656 <.L10^B1>

00001660 <.L_pack>:
    1660:	88 0f       	add	r24, r24
    1662:	96 95       	lsr	r25
    1664:	87 95       	ror	r24
    1666:	97 f9       	bld	r25, 7

00001668 <.L9^B1>:
    1668:	08 95       	ret

0000166a <__fp_split3>:
    166a:	57 fd       	sbrc	r21, 7
    166c:	90 58       	subi	r25, 0x80	; 128
    166e:	44 0f       	add	r20, r20
    1670:	55 1f       	adc	r21, r21
    1672:	59 f0       	breq	.+22     	; 0x168a <.L4^B1>
    1674:	5f 3f       	cpi	r21, 0xFF	; 255
    1676:	71 f0       	breq	.+28     	; 0x1694 <.L5^B1>

00001678 <.L1^B1>:
    1678:	47 95       	ror	r20

0000167a <__fp_splitA>:
    167a:	88 0f       	add	r24, r24
    167c:	97 fb       	bst	r25, 7
    167e:	99 1f       	adc	r25, r25
    1680:	61 f0       	breq	.+24     	; 0x169a <.L6^B1>
    1682:	9f 3f       	cpi	r25, 0xFF	; 255
    1684:	79 f0       	breq	.+30     	; 0x16a4 <.L7^B1>

00001686 <.L3^B1>:
    1686:	87 95       	ror	r24
    1688:	08 95       	ret

0000168a <.L4^B1>:
    168a:	12 16       	cp	r1, r18
    168c:	13 06       	cpc	r1, r19
    168e:	14 06       	cpc	r1, r20
    1690:	55 1f       	adc	r21, r21
    1692:	f2 cf       	rjmp	.-28     	; 0x1678 <.L1^B1>

00001694 <.L5^B1>:
    1694:	46 95       	lsr	r20
    1696:	f1 df       	rcall	.-30     	; 0x167a <__fp_splitA>
    1698:	08 c0       	rjmp	.+16     	; 0x16aa <.L8^B1>

0000169a <.L6^B1>:
    169a:	16 16       	cp	r1, r22
    169c:	17 06       	cpc	r1, r23
    169e:	18 06       	cpc	r1, r24
    16a0:	99 1f       	adc	r25, r25
    16a2:	f1 cf       	rjmp	.-30     	; 0x1686 <.L3^B1>

000016a4 <.L7^B1>:
    16a4:	86 95       	lsr	r24
    16a6:	71 05       	cpc	r23, r1
    16a8:	61 05       	cpc	r22, r1

000016aa <.L8^B1>:
    16aa:	08 94       	sec
    16ac:	08 95       	ret

000016ae <__fp_zero>:
    16ae:	e8 94       	clt

000016b0 <__fp_szero>:
    16b0:	bb 27       	eor	r27, r27
    16b2:	66 27       	eor	r22, r22
    16b4:	77 27       	eor	r23, r23
    16b6:	cb 01       	movw	r24, r22
    16b8:	97 f9       	bld	r25, 7
    16ba:	08 95       	ret

000016bc <__mulsf3>:
    16bc:	0e 94 71 0b 	call	0x16e2	; 0x16e2 <__mulsf3x>
    16c0:	0c 94 e2 0b 	jmp	0x17c4	; 0x17c4 <__fp_round>

000016c4 <.L^B1>:
    16c4:	0e 94 d4 0b 	call	0x17a8	; 0x17a8 <__fp_pscA>
    16c8:	38 f0       	brcs	.+14     	; 0x16d8 <.L1^B1>
    16ca:	0e 94 db 0b 	call	0x17b6	; 0x17b6 <__fp_pscB>
    16ce:	20 f0       	brcs	.+8      	; 0x16d8 <.L1^B1>
    16d0:	95 23       	and	r25, r21
    16d2:	11 f0       	breq	.+4      	; 0x16d8 <.L1^B1>
    16d4:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>

000016d8 <.L1^B1>:
    16d8:	0c 94 d1 0b 	jmp	0x17a2	; 0x17a2 <__fp_nan>

000016dc <.L2^B1>:
    16dc:	11 24       	eor	r1, r1
    16de:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <__fp_szero>

000016e2 <__mulsf3x>:
    16e2:	0e 94 35 0b 	call	0x166a	; 0x166a <__fp_split3>
    16e6:	70 f3       	brcs	.-36     	; 0x16c4 <.L^B1>

000016e8 <__mulsf3_pse>:
    16e8:	95 9f       	mul	r25, r21
    16ea:	c1 f3       	breq	.-16     	; 0x16dc <.L2^B1>
    16ec:	95 0f       	add	r25, r21
    16ee:	50 e0       	ldi	r21, 0x00	; 0
    16f0:	55 1f       	adc	r21, r21
    16f2:	62 9f       	mul	r22, r18
    16f4:	f0 01       	movw	r30, r0
    16f6:	72 9f       	mul	r23, r18
    16f8:	bb 27       	eor	r27, r27
    16fa:	f0 0d       	add	r31, r0
    16fc:	b1 1d       	adc	r27, r1
    16fe:	63 9f       	mul	r22, r19
    1700:	aa 27       	eor	r26, r26
    1702:	f0 0d       	add	r31, r0
    1704:	b1 1d       	adc	r27, r1
    1706:	aa 1f       	adc	r26, r26
    1708:	64 9f       	mul	r22, r20
    170a:	66 27       	eor	r22, r22
    170c:	b0 0d       	add	r27, r0
    170e:	a1 1d       	adc	r26, r1
    1710:	66 1f       	adc	r22, r22
    1712:	82 9f       	mul	r24, r18
    1714:	22 27       	eor	r18, r18
    1716:	b0 0d       	add	r27, r0
    1718:	a1 1d       	adc	r26, r1
    171a:	62 1f       	adc	r22, r18
    171c:	73 9f       	mul	r23, r19
    171e:	b0 0d       	add	r27, r0
    1720:	a1 1d       	adc	r26, r1
    1722:	62 1f       	adc	r22, r18
    1724:	83 9f       	mul	r24, r19
    1726:	a0 0d       	add	r26, r0
    1728:	61 1d       	adc	r22, r1
    172a:	22 1f       	adc	r18, r18
    172c:	74 9f       	mul	r23, r20
    172e:	33 27       	eor	r19, r19
    1730:	a0 0d       	add	r26, r0
    1732:	61 1d       	adc	r22, r1
    1734:	23 1f       	adc	r18, r19
    1736:	84 9f       	mul	r24, r20
    1738:	60 0d       	add	r22, r0
    173a:	21 1d       	adc	r18, r1
    173c:	82 2f       	mov	r24, r18
    173e:	76 2f       	mov	r23, r22
    1740:	6a 2f       	mov	r22, r26
    1742:	11 24       	eor	r1, r1
    1744:	9f 57       	subi	r25, 0x7F	; 127
    1746:	50 40       	sbci	r21, 0x00	; 0
    1748:	9a f0       	brmi	.+38     	; 0x1770 <.L13^B1>
    174a:	f1 f0       	breq	.+60     	; 0x1788 <.L15^B1>

0000174c <.L10^B1>:
    174c:	88 23       	and	r24, r24
    174e:	4a f0       	brmi	.+18     	; 0x1762 <.L11^B1>
    1750:	ee 0f       	add	r30, r30
    1752:	ff 1f       	adc	r31, r31
    1754:	bb 1f       	adc	r27, r27
    1756:	66 1f       	adc	r22, r22
    1758:	77 1f       	adc	r23, r23
    175a:	88 1f       	adc	r24, r24
    175c:	91 50       	subi	r25, 0x01	; 1
    175e:	50 40       	sbci	r21, 0x00	; 0
    1760:	a9 f7       	brne	.-22     	; 0x174c <.L10^B1>

00001762 <.L11^B1>:
    1762:	9e 3f       	cpi	r25, 0xFE	; 254
    1764:	51 05       	cpc	r21, r1
    1766:	80 f0       	brcs	.+32     	; 0x1788 <.L15^B1>
    1768:	0c 94 cb 0b 	jmp	0x1796	; 0x1796 <__fp_inf>

0000176c <.L12^B1>:
    176c:	0c 94 58 0b 	jmp	0x16b0	; 0x16b0 <__fp_szero>

00001770 <.L13^B1>:
    1770:	5f 3f       	cpi	r21, 0xFF	; 255
    1772:	e4 f3       	brlt	.-8      	; 0x176c <.L12^B1>
    1774:	98 3e       	cpi	r25, 0xE8	; 232
    1776:	d4 f3       	brlt	.-12     	; 0x176c <.L12^B1>

00001778 <.L14^B1>:
    1778:	86 95       	lsr	r24
    177a:	77 95       	ror	r23
    177c:	67 95       	ror	r22
    177e:	b7 95       	ror	r27
    1780:	f7 95       	ror	r31
    1782:	e7 95       	ror	r30
    1784:	9f 5f       	subi	r25, 0xFF	; 255
    1786:	c1 f7       	brne	.-16     	; 0x1778 <.L14^B1>

00001788 <.L15^B1>:
    1788:	fe 2b       	or	r31, r30
    178a:	88 0f       	add	r24, r24
    178c:	91 1d       	adc	r25, r1
    178e:	96 95       	lsr	r25
    1790:	87 95       	ror	r24
    1792:	97 f9       	bld	r25, 7
    1794:	08 95       	ret

00001796 <__fp_inf>:
    1796:	97 f9       	bld	r25, 7
    1798:	9f 67       	ori	r25, 0x7F	; 127
    179a:	80 e8       	ldi	r24, 0x80	; 128
    179c:	70 e0       	ldi	r23, 0x00	; 0
    179e:	60 e0       	ldi	r22, 0x00	; 0
    17a0:	08 95       	ret

000017a2 <__fp_nan>:
    17a2:	9f ef       	ldi	r25, 0xFF	; 255
    17a4:	80 ec       	ldi	r24, 0xC0	; 192
    17a6:	08 95       	ret

000017a8 <__fp_pscA>:
    17a8:	00 24       	eor	r0, r0
    17aa:	0a 94       	dec	r0
    17ac:	16 16       	cp	r1, r22
    17ae:	17 06       	cpc	r1, r23
    17b0:	18 06       	cpc	r1, r24
    17b2:	09 06       	cpc	r0, r25
    17b4:	08 95       	ret

000017b6 <__fp_pscB>:
    17b6:	00 24       	eor	r0, r0
    17b8:	0a 94       	dec	r0
    17ba:	12 16       	cp	r1, r18
    17bc:	13 06       	cpc	r1, r19
    17be:	14 06       	cpc	r1, r20
    17c0:	05 06       	cpc	r0, r21
    17c2:	08 95       	ret

000017c4 <__fp_round>:
    17c4:	09 2e       	mov	r0, r25
    17c6:	03 94       	inc	r0
    17c8:	00 0c       	add	r0, r0
    17ca:	11 f4       	brne	.+4      	; 0x17d0 <.L1^B1>
    17cc:	88 23       	and	r24, r24
    17ce:	52 f0       	brmi	.+20     	; 0x17e4 <.L3^B1>

000017d0 <.L1^B1>:
    17d0:	bb 0f       	add	r27, r27
    17d2:	40 f4       	brcc	.+16     	; 0x17e4 <.L3^B1>
    17d4:	bf 2b       	or	r27, r31
    17d6:	11 f4       	brne	.+4      	; 0x17dc <.L2^B1>
    17d8:	60 ff       	sbrs	r22, 0
    17da:	04 c0       	rjmp	.+8      	; 0x17e4 <.L3^B1>

000017dc <.L2^B1>:
    17dc:	6f 5f       	subi	r22, 0xFF	; 255
    17de:	7f 4f       	sbci	r23, 0xFF	; 255
    17e0:	8f 4f       	sbci	r24, 0xFF	; 255
    17e2:	9f 4f       	sbci	r25, 0xFF	; 255

000017e4 <.L3^B1>:
    17e4:	08 95       	ret

000017e6 <_exit>:
    17e6:	f8 94       	cli

000017e8 <__stop_program>:
    17e8:	ff cf       	rjmp	.-2      	; 0x17e8 <__stop_program>

000017ea <L0^A>:
    17ea:	2e 09       	sbc	r18, r14
    17ec:	3a 09       	sbc	r19, r10
    17ee:	c7 09       	sbc	r28, r7
    17f0:	d0 09       	sbc	r29, r0
    17f2:	d9 09       	sbc	r29, r9
    17f4:	68 0a       	sbc	r6, r24
    17f6:	71 0a       	sbc	r7, r17
    17f8:	7a 0a       	sbc	r7, r26
