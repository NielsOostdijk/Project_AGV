
bin\Debug\Project_AGV_2.1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000002  00800200  00001218  000012cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001218  00000000  00000000  000000b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000024  00800202  00800202  000012ce  2**0
                  ALLOC
  3 .fuse         00000003  00820000  00820000  000012ce  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  4 .comment      00000012  00000000  00000000  000012d1  2**0
                  CONTENTS, READONLY
  5 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000012e4  2**2
                  CONTENTS, READONLY, OCTETS
  6 .debug_aranges 00000158  00000000  00000000  00001328  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  7 .debug_info   00001116  00000000  00000000  00001480  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  8 .debug_abbrev 00000eb5  00000000  00000000  00002596  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
  9 .debug_line   00000d3f  00000000  00000000  0000344b  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 10 .debug_frame  00000354  00000000  00000000  0000418c  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 11 .debug_str    00000641  00000000  00000000  000044e0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 12 .debug_line_str 0000012c  00000000  00000000  00004b21  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 72 00 	jmp	0xe4	; 0xe4 <__ctors_end>
       4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
       c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      10:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      14:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      18:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      1c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      20:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      24:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      28:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      2c:	0c 94 2c 02 	jmp	0x458	; 0x458 <__vector_11>
      30:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      34:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      38:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      3c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      40:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      44:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      48:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      4c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      50:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      54:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      58:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      5c:	0c 94 e2 03 	jmp	0x7c4	; 0x7c4 <__vector_23>
      60:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      64:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      68:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      6c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      70:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      74:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      78:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      7c:	0c 94 1b 01 	jmp	0x236	; 0x236 <__vector_31>
      80:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      84:	0c 94 e1 00 	jmp	0x1c2	; 0x1c2 <__vector_33>
      88:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      8c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      90:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      94:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      98:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      9c:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      a8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      ac:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      b8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      bc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      c8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      cc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d4:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      d8:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      dc:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>
      e0:	0c 94 93 00 	jmp	0x126	; 0x126 <__bad_interrupt>

000000e4 <__ctors_end>:
      e4:	11 24       	eor	r1, r1
      e6:	1f be       	out	0x3f, r1	; 63
      e8:	cf ef       	ldi	r28, 0xFF	; 255
      ea:	d1 e2       	ldi	r29, 0x21	; 33
      ec:	de bf       	out	0x3e, r29	; 62
      ee:	cd bf       	out	0x3d, r28	; 61
      f0:	00 e0       	ldi	r16, 0x00	; 0
      f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
      f4:	12 e0       	ldi	r17, 0x02	; 2

000000f6 <.Loc.1>:
      f6:	a0 e0       	ldi	r26, 0x00	; 0

000000f8 <.Loc.2>:
      f8:	b2 e0       	ldi	r27, 0x02	; 2

000000fa <.Loc.3>:
      fa:	e8 e1       	ldi	r30, 0x18	; 24

000000fc <.Loc.4>:
      fc:	f2 e1       	ldi	r31, 0x12	; 18

000000fe <.Loc.5>:
      fe:	00 e0       	ldi	r16, 0x00	; 0

00000100 <.Loc.6>:
     100:	0b bf       	out	0x3b, r16	; 59

00000102 <.Loc.7>:
     102:	02 c0       	rjmp	.+4      	; 0x108 <.L__do_copy_data_start>

00000104 <.L__do_copy_data_loop>:
     104:	07 90       	elpm	r0, Z+

00000106 <.Loc.9>:
     106:	0d 92       	st	X+, r0

00000108 <.L__do_copy_data_start>:
     108:	a2 30       	cpi	r26, 0x02	; 2

0000010a <.Loc.11>:
     10a:	b1 07       	cpc	r27, r17

0000010c <.Loc.12>:
     10c:	d9 f7       	brne	.-10     	; 0x104 <.L__do_copy_data_loop>

0000010e <__do_clear_bss>:
     10e:	22 e0       	ldi	r18, 0x02	; 2

00000110 <.Loc.1>:
     110:	a2 e0       	ldi	r26, 0x02	; 2

00000112 <.Loc.2>:
     112:	b2 e0       	ldi	r27, 0x02	; 2

00000114 <.Loc.3>:
     114:	01 c0       	rjmp	.+2      	; 0x118 <.Loc.5>

00000116 <.Loc.4>:
     116:	1d 92       	st	X+, r1

00000118 <.Loc.5>:
     118:	a6 32       	cpi	r26, 0x26	; 38

0000011a <.Loc.6>:
     11a:	b2 07       	cpc	r27, r18

0000011c <.Loc.7>:
     11c:	e1 f7       	brne	.-8      	; 0x116 <.Loc.4>

0000011e <L0^A>:
     11e:	0e 94 58 05 	call	0xab0	; 0xab0 <main>
     122:	0c 94 0a 09 	jmp	0x1214	; 0x1214 <_exit>

00000126 <__bad_interrupt>:
     126:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000012a <agv_ultrasoon_init>:
volatile uint16_t agv_ultrasoon_LV = 0;
volatile uint16_t agv_ultrasoon_voor = 0;
volatile uint8_t agv_ultrasoon_current_sensor = 1;

void agv_ultrasoon_init()
{
     12a:	cf 93       	push	r28
     12c:	df 93       	push	r29
     12e:	cd b7       	in	r28, 0x3d	; 61
     130:	de b7       	in	r29, 0x3e	; 62

00000132 <.Loc.1>:
    cli();
     132:	f8 94       	cli

00000134 <.Loc.2>:
    //PORTA = 0b11111111;
    //triger configuratie
    TCCR3A |= (1<<COM3A1) | (1<<WGM31);
     134:	80 e9       	ldi	r24, 0x90	; 144
     136:	90 e0       	ldi	r25, 0x00	; 0
     138:	fc 01       	movw	r30, r24
     13a:	20 81       	ld	r18, Z
     13c:	80 e9       	ldi	r24, 0x90	; 144
     13e:	90 e0       	ldi	r25, 0x00	; 0

00000140 <.Loc.3>:
     140:	22 68       	ori	r18, 0x82	; 130
     142:	fc 01       	movw	r30, r24
     144:	20 83       	st	Z, r18

00000146 <.Loc.4>:
    TCCR3B |= (1<<WGM33) | (1<<CS31) | (1<<WGM32);//wgm33 wgm32 wgm31
     146:	81 e9       	ldi	r24, 0x91	; 145
     148:	90 e0       	ldi	r25, 0x00	; 0
     14a:	fc 01       	movw	r30, r24
     14c:	20 81       	ld	r18, Z
     14e:	81 e9       	ldi	r24, 0x91	; 145
     150:	90 e0       	ldi	r25, 0x00	; 0

00000152 <.Loc.5>:
     152:	2a 61       	ori	r18, 0x1A	; 26
     154:	fc 01       	movw	r30, r24
     156:	20 83       	st	Z, r18

00000158 <.Loc.6>:
    ICR3 = 32768;
     158:	86 e9       	ldi	r24, 0x96	; 150
     15a:	90 e0       	ldi	r25, 0x00	; 0

0000015c <.Loc.7>:
     15c:	20 e0       	ldi	r18, 0x00	; 0
     15e:	30 e8       	ldi	r19, 0x80	; 128
     160:	fc 01       	movw	r30, r24
     162:	31 83       	std	Z+1, r19	; 0x01
     164:	20 83       	st	Z, r18

00000166 <.Loc.8>:
    OCR3A = 20;//10microsec
     166:	88 e9       	ldi	r24, 0x98	; 152
     168:	90 e0       	ldi	r25, 0x00	; 0

0000016a <.Loc.9>:
     16a:	24 e1       	ldi	r18, 0x14	; 20
     16c:	30 e0       	ldi	r19, 0x00	; 0
     16e:	fc 01       	movw	r30, r24
     170:	31 83       	std	Z+1, r19	; 0x01
     172:	20 83       	st	Z, r18

00000174 <.Loc.10>:
    OCR3B = 4500;// (10microsec + 480microsec+ marge) *2
     174:	8a e9       	ldi	r24, 0x9A	; 154
     176:	90 e0       	ldi	r25, 0x00	; 0

00000178 <.Loc.11>:
     178:	24 e9       	ldi	r18, 0x94	; 148
     17a:	31 e1       	ldi	r19, 0x11	; 17
     17c:	fc 01       	movw	r30, r24
     17e:	31 83       	std	Z+1, r19	; 0x01
     180:	20 83       	st	Z, r18

00000182 <.Loc.12>:
    DDRE |= (1<<PE3);
     182:	8d e2       	ldi	r24, 0x2D	; 45
     184:	90 e0       	ldi	r25, 0x00	; 0
     186:	fc 01       	movw	r30, r24
     188:	20 81       	ld	r18, Z
     18a:	8d e2       	ldi	r24, 0x2D	; 45
     18c:	90 e0       	ldi	r25, 0x00	; 0

0000018e <.Loc.13>:
     18e:	28 60       	ori	r18, 0x08	; 8
     190:	fc 01       	movw	r30, r24
     192:	20 83       	st	Z, r18

00000194 <.Loc.14>:
    TIMSK3 |= (1<<ICIE3) | (1<<OCIE3B);
     194:	81 e7       	ldi	r24, 0x71	; 113
     196:	90 e0       	ldi	r25, 0x00	; 0
     198:	fc 01       	movw	r30, r24
     19a:	20 81       	ld	r18, Z
     19c:	81 e7       	ldi	r24, 0x71	; 113
     19e:	90 e0       	ldi	r25, 0x00	; 0

000001a0 <.Loc.15>:
     1a0:	24 62       	ori	r18, 0x24	; 36
     1a2:	fc 01       	movw	r30, r24
     1a4:	20 83       	st	Z, r18

000001a6 <.Loc.16>:
    //pin change interrupt:
    PCICR |= (1<<PCIE2);//enables pci 16 tot 23
     1a6:	88 e6       	ldi	r24, 0x68	; 104
     1a8:	90 e0       	ldi	r25, 0x00	; 0
     1aa:	fc 01       	movw	r30, r24
     1ac:	20 81       	ld	r18, Z
     1ae:	88 e6       	ldi	r24, 0x68	; 104
     1b0:	90 e0       	ldi	r25, 0x00	; 0

000001b2 <.Loc.17>:
     1b2:	24 60       	ori	r18, 0x04	; 4
     1b4:	fc 01       	movw	r30, r24
     1b6:	20 83       	st	Z, r18

000001b8 <.Loc.18>:
    sei();
     1b8:	78 94       	sei

000001ba <.Loc.19>:
}
     1ba:	00 00       	nop
     1bc:	df 91       	pop	r29
     1be:	cf 91       	pop	r28
     1c0:	08 95       	ret

000001c2 <__vector_33>:


ISR(TIMER3_COMPB_vect)
{
     1c2:	1f 92       	push	r1
     1c4:	0f 92       	push	r0
     1c6:	0f b6       	in	r0, 0x3f	; 63
     1c8:	0f 92       	push	r0
     1ca:	11 24       	eor	r1, r1
     1cc:	0b b6       	in	r0, 0x3b	; 59
     1ce:	0f 92       	push	r0
     1d0:	2f 93       	push	r18
     1d2:	8f 93       	push	r24
     1d4:	9f 93       	push	r25
     1d6:	ef 93       	push	r30
     1d8:	ff 93       	push	r31
     1da:	cf 93       	push	r28
     1dc:	df 93       	push	r29
     1de:	cd b7       	in	r28, 0x3d	; 61
     1e0:	de b7       	in	r29, 0x3e	; 62

000001e2 <.Loc.21>:
    agv_ultrasoon_current_sensor = (agv_ultrasoon_current_sensor<<1);
     1e2:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>
     1e6:	88 0f       	add	r24, r24

000001e8 <.Loc.22>:
     1e8:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_ultrasoon_current_sensor>

000001ec <.Loc.23>:
    if (agv_ultrasoon_current_sensor == (1<<3))//0b00100000
     1ec:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000001f0 <.Loc.24>:
     1f0:	88 30       	cpi	r24, 0x08	; 8
     1f2:	19 f4       	brne	.+6      	; 0x1fa <.L3>

000001f4 <.Loc.25>:
    {
        agv_ultrasoon_current_sensor = 1;
     1f4:	81 e0       	ldi	r24, 0x01	; 1
     1f6:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <agv_ultrasoon_current_sensor>

000001fa <.L3>:
    }
    PCMSK2 = agv_ultrasoon_current_sensor; //zet pin change aan na rising edge voor falling edge
     1fa:	8d e6       	ldi	r24, 0x6D	; 109
     1fc:	90 e0       	ldi	r25, 0x00	; 0

000001fe <.Loc.27>:
     1fe:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>
     202:	fc 01       	movw	r30, r24
     204:	20 83       	st	Z, r18

00000206 <.Loc.28>:
    //PORTA = agv_ultrasoon_current_sensor;
    TIMSK3 |= (1<<OCIE3B); //zet timer max aan voor out of range detectie
     206:	81 e7       	ldi	r24, 0x71	; 113
     208:	90 e0       	ldi	r25, 0x00	; 0
     20a:	fc 01       	movw	r30, r24
     20c:	20 81       	ld	r18, Z
     20e:	81 e7       	ldi	r24, 0x71	; 113
     210:	90 e0       	ldi	r25, 0x00	; 0

00000212 <.Loc.29>:
     212:	24 60       	ori	r18, 0x04	; 4
     214:	fc 01       	movw	r30, r24
     216:	20 83       	st	Z, r18

00000218 <.Loc.30>:
}
     218:	00 00       	nop
     21a:	df 91       	pop	r29
     21c:	cf 91       	pop	r28
     21e:	ff 91       	pop	r31
     220:	ef 91       	pop	r30
     222:	9f 91       	pop	r25
     224:	8f 91       	pop	r24
     226:	2f 91       	pop	r18
     228:	0f 90       	pop	r0
     22a:	0b be       	out	0x3b, r0	; 59
     22c:	0f 90       	pop	r0
     22e:	0f be       	out	0x3f, r0	; 63
     230:	0f 90       	pop	r0
     232:	1f 90       	pop	r1
     234:	18 95       	reti

00000236 <__vector_31>:

ISR(TIMER3_CAPT_vect)
{
     236:	1f 92       	push	r1
     238:	0f 92       	push	r0
     23a:	0f b6       	in	r0, 0x3f	; 63
     23c:	0f 92       	push	r0
     23e:	11 24       	eor	r1, r1
     240:	0b b6       	in	r0, 0x3b	; 59
     242:	0f 92       	push	r0
     244:	2f 93       	push	r18
     246:	3f 93       	push	r19
     248:	4f 93       	push	r20
     24a:	5f 93       	push	r21
     24c:	6f 93       	push	r22
     24e:	7f 93       	push	r23
     250:	8f 93       	push	r24
     252:	9f 93       	push	r25
     254:	af 93       	push	r26
     256:	bf 93       	push	r27
     258:	ef 93       	push	r30
     25a:	ff 93       	push	r31
     25c:	cf 93       	push	r28
     25e:	df 93       	push	r29
     260:	cd b7       	in	r28, 0x3d	; 61
     262:	de b7       	in	r29, 0x3e	; 62
     264:	ec 97       	sbiw	r28, 0x3c	; 60
     266:	de bf       	out	0x3e, r29	; 62
     268:	cd bf       	out	0x3d, r28	; 61

0000026a <.Loc.32>:
    if(agv_ultrasoon_current_sensor == 0b00000001)
     26a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

0000026e <.Loc.33>:
     26e:	81 30       	cpi	r24, 0x01	; 1
     270:	09 f0       	breq	.+2      	; 0x274 <.Loc.34>

00000272 <L0^A>:
     272:	43 c0       	rjmp	.+134    	; 0x2fa <.L5>

00000274 <.Loc.34>:
    {
        agv_ultrasoon_LA = ((ICR3 - 4454)/4)*0.343;
     274:	86 e9       	ldi	r24, 0x96	; 150
     276:	90 e0       	ldi	r25, 0x00	; 0
     278:	dc 01       	movw	r26, r24
     27a:	8d 91       	ld	r24, X+
     27c:	9c 91       	ld	r25, X

0000027e <.Loc.35>:
     27e:	86 56       	subi	r24, 0x66	; 102
     280:	91 41       	sbci	r25, 0x11	; 17

00000282 <.Loc.36>:
     282:	96 95       	lsr	r25
     284:	87 95       	ror	r24
     286:	96 95       	lsr	r25
     288:	87 95       	ror	r24

0000028a <.Loc.37>:
     28a:	9c 01       	movw	r18, r24
     28c:	40 e0       	ldi	r20, 0x00	; 0
     28e:	50 e0       	ldi	r21, 0x00	; 0
     290:	29 8f       	std	Y+25, r18	; 0x19
     292:	3a 8f       	std	Y+26, r19	; 0x1a
     294:	4b 8f       	std	Y+27, r20	; 0x1b
     296:	5c 8f       	std	Y+28, r21	; 0x1c
     298:	69 8d       	ldd	r22, Y+25	; 0x19
     29a:	7a 8d       	ldd	r23, Y+26	; 0x1a
     29c:	8b 8d       	ldd	r24, Y+27	; 0x1b
     29e:	9c 8d       	ldd	r25, Y+28	; 0x1c
     2a0:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     2a4:	69 83       	std	Y+1, r22	; 0x01
     2a6:	7a 83       	std	Y+2, r23	; 0x02
     2a8:	8b 83       	std	Y+3, r24	; 0x03
     2aa:	9c 83       	std	Y+4, r25	; 0x04
     2ac:	22 eb       	ldi	r18, 0xB2	; 178
     2ae:	3d e9       	ldi	r19, 0x9D	; 157
     2b0:	4f ea       	ldi	r20, 0xAF	; 175
     2b2:	5e e3       	ldi	r21, 0x3E	; 62
     2b4:	69 81       	ldd	r22, Y+1	; 0x01
     2b6:	7a 81       	ldd	r23, Y+2	; 0x02
     2b8:	8b 81       	ldd	r24, Y+3	; 0x03
     2ba:	9c 81       	ldd	r25, Y+4	; 0x04
     2bc:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     2c0:	6d 8f       	std	Y+29, r22	; 0x1d
     2c2:	7e 8f       	std	Y+30, r23	; 0x1e
     2c4:	8f 8f       	std	Y+31, r24	; 0x1f
     2c6:	98 a3       	std	Y+32, r25	; 0x20
     2c8:	8d 8d       	ldd	r24, Y+29	; 0x1d
     2ca:	9e 8d       	ldd	r25, Y+30	; 0x1e
     2cc:	af 8d       	ldd	r26, Y+31	; 0x1f
     2ce:	b8 a1       	ldd	r27, Y+32	; 0x20
     2d0:	8d 83       	std	Y+5, r24	; 0x05
     2d2:	9e 83       	std	Y+6, r25	; 0x06
     2d4:	af 83       	std	Y+7, r26	; 0x07
     2d6:	b8 87       	std	Y+8, r27	; 0x08

000002d8 <.Loc.38>:
     2d8:	6d 81       	ldd	r22, Y+5	; 0x05
     2da:	7e 81       	ldd	r23, Y+6	; 0x06
     2dc:	8f 81       	ldd	r24, Y+7	; 0x07
     2de:	98 85       	ldd	r25, Y+8	; 0x08
     2e0:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     2e4:	69 a3       	std	Y+33, r22	; 0x21
     2e6:	7a a3       	std	Y+34, r23	; 0x22
     2e8:	8b a3       	std	Y+35, r24	; 0x23
     2ea:	9c a3       	std	Y+36, r25	; 0x24
     2ec:	89 a1       	ldd	r24, Y+33	; 0x21
     2ee:	9a a1       	ldd	r25, Y+34	; 0x22
     2f0:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <agv_ultrasoon_LA+0x1>
     2f4:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <agv_ultrasoon_LA>
     2f8:	8f c0       	rjmp	.+286    	; 0x418 <.L6>

000002fa <.L5>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000010)
     2fa:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000002fe <.Loc.40>:
     2fe:	82 30       	cpi	r24, 0x02	; 2
     300:	09 f0       	breq	.+2      	; 0x304 <.Loc.41>

00000302 <L0^A>:
     302:	43 c0       	rjmp	.+134    	; 0x38a <.L7>

00000304 <.Loc.41>:
    {
        agv_ultrasoon_LV = ((ICR3 - 4454)/4)*0.343;
     304:	86 e9       	ldi	r24, 0x96	; 150
     306:	90 e0       	ldi	r25, 0x00	; 0
     308:	dc 01       	movw	r26, r24
     30a:	8d 91       	ld	r24, X+
     30c:	9c 91       	ld	r25, X

0000030e <.Loc.42>:
     30e:	86 56       	subi	r24, 0x66	; 102
     310:	91 41       	sbci	r25, 0x11	; 17

00000312 <.Loc.43>:
     312:	96 95       	lsr	r25
     314:	87 95       	ror	r24
     316:	96 95       	lsr	r25
     318:	87 95       	ror	r24

0000031a <.Loc.44>:
     31a:	9c 01       	movw	r18, r24
     31c:	40 e0       	ldi	r20, 0x00	; 0
     31e:	50 e0       	ldi	r21, 0x00	; 0
     320:	2d a3       	std	Y+37, r18	; 0x25
     322:	3e a3       	std	Y+38, r19	; 0x26
     324:	4f a3       	std	Y+39, r20	; 0x27
     326:	58 a7       	std	Y+40, r21	; 0x28
     328:	6d a1       	ldd	r22, Y+37	; 0x25
     32a:	7e a1       	ldd	r23, Y+38	; 0x26
     32c:	8f a1       	ldd	r24, Y+39	; 0x27
     32e:	98 a5       	ldd	r25, Y+40	; 0x28
     330:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     334:	69 87       	std	Y+9, r22	; 0x09
     336:	7a 87       	std	Y+10, r23	; 0x0a
     338:	8b 87       	std	Y+11, r24	; 0x0b
     33a:	9c 87       	std	Y+12, r25	; 0x0c
     33c:	22 eb       	ldi	r18, 0xB2	; 178
     33e:	3d e9       	ldi	r19, 0x9D	; 157
     340:	4f ea       	ldi	r20, 0xAF	; 175
     342:	5e e3       	ldi	r21, 0x3E	; 62
     344:	69 85       	ldd	r22, Y+9	; 0x09
     346:	7a 85       	ldd	r23, Y+10	; 0x0a
     348:	8b 85       	ldd	r24, Y+11	; 0x0b
     34a:	9c 85       	ldd	r25, Y+12	; 0x0c
     34c:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     350:	69 a7       	std	Y+41, r22	; 0x29
     352:	7a a7       	std	Y+42, r23	; 0x2a
     354:	8b a7       	std	Y+43, r24	; 0x2b
     356:	9c a7       	std	Y+44, r25	; 0x2c
     358:	89 a5       	ldd	r24, Y+41	; 0x29
     35a:	9a a5       	ldd	r25, Y+42	; 0x2a
     35c:	ab a5       	ldd	r26, Y+43	; 0x2b
     35e:	bc a5       	ldd	r27, Y+44	; 0x2c
     360:	8d 87       	std	Y+13, r24	; 0x0d
     362:	9e 87       	std	Y+14, r25	; 0x0e
     364:	af 87       	std	Y+15, r26	; 0x0f
     366:	b8 8b       	std	Y+16, r27	; 0x10

00000368 <.Loc.45>:
     368:	6d 85       	ldd	r22, Y+13	; 0x0d
     36a:	7e 85       	ldd	r23, Y+14	; 0x0e
     36c:	8f 85       	ldd	r24, Y+15	; 0x0f
     36e:	98 89       	ldd	r25, Y+16	; 0x10
     370:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     374:	6d a7       	std	Y+45, r22	; 0x2d
     376:	7e a7       	std	Y+46, r23	; 0x2e
     378:	8f a7       	std	Y+47, r24	; 0x2f
     37a:	98 ab       	std	Y+48, r25	; 0x30
     37c:	8d a5       	ldd	r24, Y+45	; 0x2d
     37e:	9e a5       	ldd	r25, Y+46	; 0x2e
     380:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <agv_ultrasoon_LV+0x1>
     384:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <agv_ultrasoon_LV>
     388:	47 c0       	rjmp	.+142    	; 0x418 <.L6>

0000038a <.L7>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
     38a:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

0000038e <.Loc.47>:
     38e:	84 30       	cpi	r24, 0x04	; 4
     390:	09 f0       	breq	.+2      	; 0x394 <.Loc.48>

00000392 <L0^A>:
     392:	42 c0       	rjmp	.+132    	; 0x418 <.L6>

00000394 <.Loc.48>:
    {
        agv_ultrasoon_voor = ((ICR3 - 4454)/4)*0.343;
     394:	86 e9       	ldi	r24, 0x96	; 150
     396:	90 e0       	ldi	r25, 0x00	; 0
     398:	dc 01       	movw	r26, r24
     39a:	8d 91       	ld	r24, X+
     39c:	9c 91       	ld	r25, X

0000039e <.Loc.49>:
     39e:	86 56       	subi	r24, 0x66	; 102
     3a0:	91 41       	sbci	r25, 0x11	; 17

000003a2 <.Loc.50>:
     3a2:	96 95       	lsr	r25
     3a4:	87 95       	ror	r24
     3a6:	96 95       	lsr	r25
     3a8:	87 95       	ror	r24

000003aa <.Loc.51>:
     3aa:	9c 01       	movw	r18, r24
     3ac:	40 e0       	ldi	r20, 0x00	; 0
     3ae:	50 e0       	ldi	r21, 0x00	; 0
     3b0:	29 ab       	std	Y+49, r18	; 0x31
     3b2:	3a ab       	std	Y+50, r19	; 0x32
     3b4:	4b ab       	std	Y+51, r20	; 0x33
     3b6:	5c ab       	std	Y+52, r21	; 0x34
     3b8:	69 a9       	ldd	r22, Y+49	; 0x31
     3ba:	7a a9       	ldd	r23, Y+50	; 0x32
     3bc:	8b a9       	ldd	r24, Y+51	; 0x33
     3be:	9c a9       	ldd	r25, Y+52	; 0x34
     3c0:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     3c4:	69 8b       	std	Y+17, r22	; 0x11
     3c6:	7a 8b       	std	Y+18, r23	; 0x12
     3c8:	8b 8b       	std	Y+19, r24	; 0x13
     3ca:	9c 8b       	std	Y+20, r25	; 0x14
     3cc:	22 eb       	ldi	r18, 0xB2	; 178
     3ce:	3d e9       	ldi	r19, 0x9D	; 157
     3d0:	4f ea       	ldi	r20, 0xAF	; 175
     3d2:	5e e3       	ldi	r21, 0x3E	; 62
     3d4:	69 89       	ldd	r22, Y+17	; 0x11
     3d6:	7a 89       	ldd	r23, Y+18	; 0x12
     3d8:	8b 89       	ldd	r24, Y+19	; 0x13
     3da:	9c 89       	ldd	r25, Y+20	; 0x14
     3dc:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     3e0:	6d ab       	std	Y+53, r22	; 0x35
     3e2:	7e ab       	std	Y+54, r23	; 0x36
     3e4:	8f ab       	std	Y+55, r24	; 0x37
     3e6:	98 af       	std	Y+56, r25	; 0x38
     3e8:	8d a9       	ldd	r24, Y+53	; 0x35
     3ea:	9e a9       	ldd	r25, Y+54	; 0x36
     3ec:	af a9       	ldd	r26, Y+55	; 0x37
     3ee:	b8 ad       	ldd	r27, Y+56	; 0x38
     3f0:	8d 8b       	std	Y+21, r24	; 0x15
     3f2:	9e 8b       	std	Y+22, r25	; 0x16
     3f4:	af 8b       	std	Y+23, r26	; 0x17
     3f6:	b8 8f       	std	Y+24, r27	; 0x18

000003f8 <.Loc.52>:
     3f8:	6d 89       	ldd	r22, Y+21	; 0x15
     3fa:	7e 89       	ldd	r23, Y+22	; 0x16
     3fc:	8f 89       	ldd	r24, Y+23	; 0x17
     3fe:	98 8d       	ldd	r25, Y+24	; 0x18
     400:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     404:	69 af       	std	Y+57, r22	; 0x39
     406:	7a af       	std	Y+58, r23	; 0x3a
     408:	8b af       	std	Y+59, r24	; 0x3b
     40a:	9c af       	std	Y+60, r25	; 0x3c
     40c:	89 ad       	ldd	r24, Y+57	; 0x39
     40e:	9a ad       	ldd	r25, Y+58	; 0x3a
     410:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <agv_ultrasoon_voor+0x1>
     414:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <agv_ultrasoon_voor>

00000418 <.L6>:
    }
    PCMSK2 = 0; //zet pin change uit voor rising edge
     418:	8d e6       	ldi	r24, 0x6D	; 109
     41a:	90 e0       	ldi	r25, 0x00	; 0

0000041c <.Loc.54>:
     41c:	dc 01       	movw	r26, r24
     41e:	1c 92       	st	X, r1

00000420 <.Loc.55>:
}
     420:	00 00       	nop
     422:	ec 96       	adiw	r28, 0x3c	; 60
     424:	0f b6       	in	r0, 0x3f	; 63
     426:	f8 94       	cli
     428:	de bf       	out	0x3e, r29	; 62
     42a:	0f be       	out	0x3f, r0	; 63
     42c:	cd bf       	out	0x3d, r28	; 61
     42e:	df 91       	pop	r29
     430:	cf 91       	pop	r28
     432:	ff 91       	pop	r31
     434:	ef 91       	pop	r30
     436:	bf 91       	pop	r27
     438:	af 91       	pop	r26
     43a:	9f 91       	pop	r25
     43c:	8f 91       	pop	r24
     43e:	7f 91       	pop	r23
     440:	6f 91       	pop	r22
     442:	5f 91       	pop	r21
     444:	4f 91       	pop	r20
     446:	3f 91       	pop	r19
     448:	2f 91       	pop	r18
     44a:	0f 90       	pop	r0
     44c:	0b be       	out	0x3b, r0	; 59
     44e:	0f 90       	pop	r0
     450:	0f be       	out	0x3f, r0	; 63
     452:	0f 90       	pop	r0
     454:	1f 90       	pop	r1
     456:	18 95       	reti

00000458 <__vector_11>:

ISR(PCINT2_vect)
{
     458:	1f 92       	push	r1
     45a:	0f 92       	push	r0
     45c:	0f b6       	in	r0, 0x3f	; 63
     45e:	0f 92       	push	r0
     460:	11 24       	eor	r1, r1
     462:	0b b6       	in	r0, 0x3b	; 59
     464:	0f 92       	push	r0
     466:	2f 93       	push	r18
     468:	3f 93       	push	r19
     46a:	4f 93       	push	r20
     46c:	5f 93       	push	r21
     46e:	6f 93       	push	r22
     470:	7f 93       	push	r23
     472:	8f 93       	push	r24
     474:	9f 93       	push	r25
     476:	af 93       	push	r26
     478:	bf 93       	push	r27
     47a:	ef 93       	push	r30
     47c:	ff 93       	push	r31
     47e:	cf 93       	push	r28
     480:	df 93       	push	r29
     482:	cd b7       	in	r28, 0x3d	; 61
     484:	de b7       	in	r29, 0x3e	; 62
     486:	ec 97       	sbiw	r28, 0x3c	; 60
     488:	de bf       	out	0x3e, r29	; 62
     48a:	cd bf       	out	0x3d, r28	; 61

0000048c <.Loc.57>:
    if(agv_ultrasoon_current_sensor == 0b00000001)
     48c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

00000490 <.Loc.58>:
     490:	81 30       	cpi	r24, 0x01	; 1
     492:	09 f0       	breq	.+2      	; 0x496 <.Loc.59>

00000494 <L0^A>:
     494:	43 c0       	rjmp	.+134    	; 0x51c <.L9>

00000496 <.Loc.59>:
    {
        agv_ultrasoon_LA = ((TCNT3 - 4454)/4)*0.343;
     496:	84 e9       	ldi	r24, 0x94	; 148
     498:	90 e0       	ldi	r25, 0x00	; 0
     49a:	dc 01       	movw	r26, r24
     49c:	8d 91       	ld	r24, X+
     49e:	9c 91       	ld	r25, X

000004a0 <.Loc.60>:
     4a0:	86 56       	subi	r24, 0x66	; 102
     4a2:	91 41       	sbci	r25, 0x11	; 17

000004a4 <.Loc.61>:
     4a4:	96 95       	lsr	r25
     4a6:	87 95       	ror	r24
     4a8:	96 95       	lsr	r25
     4aa:	87 95       	ror	r24

000004ac <.Loc.62>:
     4ac:	9c 01       	movw	r18, r24
     4ae:	40 e0       	ldi	r20, 0x00	; 0
     4b0:	50 e0       	ldi	r21, 0x00	; 0
     4b2:	29 8f       	std	Y+25, r18	; 0x19
     4b4:	3a 8f       	std	Y+26, r19	; 0x1a
     4b6:	4b 8f       	std	Y+27, r20	; 0x1b
     4b8:	5c 8f       	std	Y+28, r21	; 0x1c
     4ba:	69 8d       	ldd	r22, Y+25	; 0x19
     4bc:	7a 8d       	ldd	r23, Y+26	; 0x1a
     4be:	8b 8d       	ldd	r24, Y+27	; 0x1b
     4c0:	9c 8d       	ldd	r25, Y+28	; 0x1c
     4c2:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     4c6:	69 83       	std	Y+1, r22	; 0x01
     4c8:	7a 83       	std	Y+2, r23	; 0x02
     4ca:	8b 83       	std	Y+3, r24	; 0x03
     4cc:	9c 83       	std	Y+4, r25	; 0x04
     4ce:	22 eb       	ldi	r18, 0xB2	; 178
     4d0:	3d e9       	ldi	r19, 0x9D	; 157
     4d2:	4f ea       	ldi	r20, 0xAF	; 175
     4d4:	5e e3       	ldi	r21, 0x3E	; 62
     4d6:	69 81       	ldd	r22, Y+1	; 0x01
     4d8:	7a 81       	ldd	r23, Y+2	; 0x02
     4da:	8b 81       	ldd	r24, Y+3	; 0x03
     4dc:	9c 81       	ldd	r25, Y+4	; 0x04
     4de:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     4e2:	6d 8f       	std	Y+29, r22	; 0x1d
     4e4:	7e 8f       	std	Y+30, r23	; 0x1e
     4e6:	8f 8f       	std	Y+31, r24	; 0x1f
     4e8:	98 a3       	std	Y+32, r25	; 0x20
     4ea:	8d 8d       	ldd	r24, Y+29	; 0x1d
     4ec:	9e 8d       	ldd	r25, Y+30	; 0x1e
     4ee:	af 8d       	ldd	r26, Y+31	; 0x1f
     4f0:	b8 a1       	ldd	r27, Y+32	; 0x20
     4f2:	8d 83       	std	Y+5, r24	; 0x05
     4f4:	9e 83       	std	Y+6, r25	; 0x06
     4f6:	af 83       	std	Y+7, r26	; 0x07
     4f8:	b8 87       	std	Y+8, r27	; 0x08

000004fa <.Loc.63>:
     4fa:	6d 81       	ldd	r22, Y+5	; 0x05
     4fc:	7e 81       	ldd	r23, Y+6	; 0x06
     4fe:	8f 81       	ldd	r24, Y+7	; 0x07
     500:	98 85       	ldd	r25, Y+8	; 0x08
     502:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     506:	69 a3       	std	Y+33, r22	; 0x21
     508:	7a a3       	std	Y+34, r23	; 0x22
     50a:	8b a3       	std	Y+35, r24	; 0x23
     50c:	9c a3       	std	Y+36, r25	; 0x24
     50e:	89 a1       	ldd	r24, Y+33	; 0x21
     510:	9a a1       	ldd	r25, Y+34	; 0x22
     512:	90 93 03 02 	sts	0x0203, r25	; 0x800203 <agv_ultrasoon_LA+0x1>
     516:	80 93 02 02 	sts	0x0202, r24	; 0x800202 <agv_ultrasoon_LA>
     51a:	8f c0       	rjmp	.+286    	; 0x63a <.L10>

0000051c <.L9>:
    }
    else if(agv_ultrasoon_current_sensor == 0b00000010)
     51c:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

00000520 <.Loc.65>:
     520:	82 30       	cpi	r24, 0x02	; 2
     522:	09 f0       	breq	.+2      	; 0x526 <.Loc.66>

00000524 <L0^A>:
     524:	43 c0       	rjmp	.+134    	; 0x5ac <.L11>

00000526 <.Loc.66>:
    {
        agv_ultrasoon_LV = ((TCNT3 - 4454)/4)*0.343;
     526:	84 e9       	ldi	r24, 0x94	; 148
     528:	90 e0       	ldi	r25, 0x00	; 0
     52a:	dc 01       	movw	r26, r24
     52c:	8d 91       	ld	r24, X+
     52e:	9c 91       	ld	r25, X

00000530 <.Loc.67>:
     530:	86 56       	subi	r24, 0x66	; 102
     532:	91 41       	sbci	r25, 0x11	; 17

00000534 <.Loc.68>:
     534:	96 95       	lsr	r25
     536:	87 95       	ror	r24
     538:	96 95       	lsr	r25
     53a:	87 95       	ror	r24

0000053c <.Loc.69>:
     53c:	9c 01       	movw	r18, r24
     53e:	40 e0       	ldi	r20, 0x00	; 0
     540:	50 e0       	ldi	r21, 0x00	; 0
     542:	2d a3       	std	Y+37, r18	; 0x25
     544:	3e a3       	std	Y+38, r19	; 0x26
     546:	4f a3       	std	Y+39, r20	; 0x27
     548:	58 a7       	std	Y+40, r21	; 0x28
     54a:	6d a1       	ldd	r22, Y+37	; 0x25
     54c:	7e a1       	ldd	r23, Y+38	; 0x26
     54e:	8f a1       	ldd	r24, Y+39	; 0x27
     550:	98 a5       	ldd	r25, Y+40	; 0x28
     552:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     556:	69 87       	std	Y+9, r22	; 0x09
     558:	7a 87       	std	Y+10, r23	; 0x0a
     55a:	8b 87       	std	Y+11, r24	; 0x0b
     55c:	9c 87       	std	Y+12, r25	; 0x0c
     55e:	22 eb       	ldi	r18, 0xB2	; 178
     560:	3d e9       	ldi	r19, 0x9D	; 157
     562:	4f ea       	ldi	r20, 0xAF	; 175
     564:	5e e3       	ldi	r21, 0x3E	; 62
     566:	69 85       	ldd	r22, Y+9	; 0x09
     568:	7a 85       	ldd	r23, Y+10	; 0x0a
     56a:	8b 85       	ldd	r24, Y+11	; 0x0b
     56c:	9c 85       	ldd	r25, Y+12	; 0x0c
     56e:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     572:	69 a7       	std	Y+41, r22	; 0x29
     574:	7a a7       	std	Y+42, r23	; 0x2a
     576:	8b a7       	std	Y+43, r24	; 0x2b
     578:	9c a7       	std	Y+44, r25	; 0x2c
     57a:	89 a5       	ldd	r24, Y+41	; 0x29
     57c:	9a a5       	ldd	r25, Y+42	; 0x2a
     57e:	ab a5       	ldd	r26, Y+43	; 0x2b
     580:	bc a5       	ldd	r27, Y+44	; 0x2c
     582:	8d 87       	std	Y+13, r24	; 0x0d
     584:	9e 87       	std	Y+14, r25	; 0x0e
     586:	af 87       	std	Y+15, r26	; 0x0f
     588:	b8 8b       	std	Y+16, r27	; 0x10

0000058a <.Loc.70>:
     58a:	6d 85       	ldd	r22, Y+13	; 0x0d
     58c:	7e 85       	ldd	r23, Y+14	; 0x0e
     58e:	8f 85       	ldd	r24, Y+15	; 0x0f
     590:	98 89       	ldd	r25, Y+16	; 0x10
     592:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     596:	6d a7       	std	Y+45, r22	; 0x2d
     598:	7e a7       	std	Y+46, r23	; 0x2e
     59a:	8f a7       	std	Y+47, r24	; 0x2f
     59c:	98 ab       	std	Y+48, r25	; 0x30
     59e:	8d a5       	ldd	r24, Y+45	; 0x2d
     5a0:	9e a5       	ldd	r25, Y+46	; 0x2e
     5a2:	90 93 05 02 	sts	0x0205, r25	; 0x800205 <agv_ultrasoon_LV+0x1>
     5a6:	80 93 04 02 	sts	0x0204, r24	; 0x800204 <agv_ultrasoon_LV>
     5aa:	47 c0       	rjmp	.+142    	; 0x63a <.L10>

000005ac <.L11>:
     }
    else if(agv_ultrasoon_current_sensor == 0b00000100)
     5ac:	80 91 00 02 	lds	r24, 0x0200	; 0x800200 <agv_ultrasoon_current_sensor>

000005b0 <.Loc.72>:
     5b0:	84 30       	cpi	r24, 0x04	; 4
     5b2:	09 f0       	breq	.+2      	; 0x5b6 <.Loc.73>

000005b4 <L0^A>:
     5b4:	42 c0       	rjmp	.+132    	; 0x63a <.L10>

000005b6 <.Loc.73>:
    {
        agv_ultrasoon_voor = ((TCNT3 - 4454)/4)*0.343;
     5b6:	84 e9       	ldi	r24, 0x94	; 148
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	dc 01       	movw	r26, r24
     5bc:	8d 91       	ld	r24, X+
     5be:	9c 91       	ld	r25, X

000005c0 <.Loc.74>:
     5c0:	86 56       	subi	r24, 0x66	; 102
     5c2:	91 41       	sbci	r25, 0x11	; 17

000005c4 <.Loc.75>:
     5c4:	96 95       	lsr	r25
     5c6:	87 95       	ror	r24
     5c8:	96 95       	lsr	r25
     5ca:	87 95       	ror	r24

000005cc <.Loc.76>:
     5cc:	9c 01       	movw	r18, r24
     5ce:	40 e0       	ldi	r20, 0x00	; 0
     5d0:	50 e0       	ldi	r21, 0x00	; 0
     5d2:	29 ab       	std	Y+49, r18	; 0x31
     5d4:	3a ab       	std	Y+50, r19	; 0x32
     5d6:	4b ab       	std	Y+51, r20	; 0x33
     5d8:	5c ab       	std	Y+52, r21	; 0x34
     5da:	69 a9       	ldd	r22, Y+49	; 0x31
     5dc:	7a a9       	ldd	r23, Y+50	; 0x32
     5de:	8b a9       	ldd	r24, Y+51	; 0x33
     5e0:	9c a9       	ldd	r25, Y+52	; 0x34
     5e2:	0e 94 0f 08 	call	0x101e	; 0x101e <__floatunsisf>
     5e6:	69 8b       	std	Y+17, r22	; 0x11
     5e8:	7a 8b       	std	Y+18, r23	; 0x12
     5ea:	8b 8b       	std	Y+19, r24	; 0x13
     5ec:	9c 8b       	std	Y+20, r25	; 0x14
     5ee:	22 eb       	ldi	r18, 0xB2	; 178
     5f0:	3d e9       	ldi	r19, 0x9D	; 157
     5f2:	4f ea       	ldi	r20, 0xAF	; 175
     5f4:	5e e3       	ldi	r21, 0x3E	; 62
     5f6:	69 89       	ldd	r22, Y+17	; 0x11
     5f8:	7a 89       	ldd	r23, Y+18	; 0x12
     5fa:	8b 89       	ldd	r24, Y+19	; 0x13
     5fc:	9c 89       	ldd	r25, Y+20	; 0x14
     5fe:	0e 94 75 08 	call	0x10ea	; 0x10ea <__mulsf3>
     602:	6d ab       	std	Y+53, r22	; 0x35
     604:	7e ab       	std	Y+54, r23	; 0x36
     606:	8f ab       	std	Y+55, r24	; 0x37
     608:	98 af       	std	Y+56, r25	; 0x38
     60a:	8d a9       	ldd	r24, Y+53	; 0x35
     60c:	9e a9       	ldd	r25, Y+54	; 0x36
     60e:	af a9       	ldd	r26, Y+55	; 0x37
     610:	b8 ad       	ldd	r27, Y+56	; 0x38
     612:	8d 8b       	std	Y+21, r24	; 0x15
     614:	9e 8b       	std	Y+22, r25	; 0x16
     616:	af 8b       	std	Y+23, r26	; 0x17
     618:	b8 8f       	std	Y+24, r27	; 0x18

0000061a <.Loc.77>:
     61a:	6d 89       	ldd	r22, Y+21	; 0x15
     61c:	7e 89       	ldd	r23, Y+22	; 0x16
     61e:	8f 89       	ldd	r24, Y+23	; 0x17
     620:	98 8d       	ldd	r25, Y+24	; 0x18
     622:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <__fixunssfsi>
     626:	69 af       	std	Y+57, r22	; 0x39
     628:	7a af       	std	Y+58, r23	; 0x3a
     62a:	8b af       	std	Y+59, r24	; 0x3b
     62c:	9c af       	std	Y+60, r25	; 0x3c
     62e:	89 ad       	ldd	r24, Y+57	; 0x39
     630:	9a ad       	ldd	r25, Y+58	; 0x3a
     632:	90 93 07 02 	sts	0x0207, r25	; 0x800207 <agv_ultrasoon_voor+0x1>
     636:	80 93 06 02 	sts	0x0206, r24	; 0x800206 <agv_ultrasoon_voor>

0000063a <.L10>:
    }
    TIMSK3 &= ~(1<<ICIE3); //zet timer3 overflow flag uit
     63a:	81 e7       	ldi	r24, 0x71	; 113
     63c:	90 e0       	ldi	r25, 0x00	; 0
     63e:	dc 01       	movw	r26, r24
     640:	2c 91       	ld	r18, X

00000642 <.Loc.79>:
     642:	81 e7       	ldi	r24, 0x71	; 113
     644:	90 e0       	ldi	r25, 0x00	; 0

00000646 <.Loc.80>:
     646:	2f 7d       	andi	r18, 0xDF	; 223
     648:	fc 01       	movw	r30, r24
     64a:	20 83       	st	Z, r18

0000064c <.Loc.81>:
    PCMSK2 = 0; //zet pin change uit voor rising edge
     64c:	8d e6       	ldi	r24, 0x6D	; 109
     64e:	90 e0       	ldi	r25, 0x00	; 0

00000650 <.Loc.82>:
     650:	dc 01       	movw	r26, r24
     652:	1c 92       	st	X, r1

00000654 <.Loc.83>:
}
     654:	00 00       	nop
     656:	ec 96       	adiw	r28, 0x3c	; 60
     658:	0f b6       	in	r0, 0x3f	; 63
     65a:	f8 94       	cli
     65c:	de bf       	out	0x3e, r29	; 62
     65e:	0f be       	out	0x3f, r0	; 63
     660:	cd bf       	out	0x3d, r28	; 61
     662:	df 91       	pop	r29
     664:	cf 91       	pop	r28
     666:	ff 91       	pop	r31
     668:	ef 91       	pop	r30
     66a:	bf 91       	pop	r27
     66c:	af 91       	pop	r26
     66e:	9f 91       	pop	r25
     670:	8f 91       	pop	r24
     672:	7f 91       	pop	r23
     674:	6f 91       	pop	r22
     676:	5f 91       	pop	r21
     678:	4f 91       	pop	r20
     67a:	3f 91       	pop	r19
     67c:	2f 91       	pop	r18
     67e:	0f 90       	pop	r0
     680:	0b be       	out	0x3b, r0	; 59
     682:	0f 90       	pop	r0
     684:	0f be       	out	0x3f, r0	; 63
     686:	0f 90       	pop	r0
     688:	1f 90       	pop	r1
     68a:	18 95       	reti

0000068c <init_time>:
*/
#include <avr/io.h>
#include <avr/interrupt.h>
#include "clock.h"

void init_time(){
     68c:	cf 93       	push	r28
     68e:	df 93       	push	r29
     690:	cd b7       	in	r28, 0x3d	; 61
     692:	de b7       	in	r29, 0x3e	; 62

00000694 <.Loc.1>:
    cli();
     694:	f8 94       	cli

00000696 <.Loc.2>:
    TCCR0A = 0;
     696:	84 e4       	ldi	r24, 0x44	; 68
     698:	90 e0       	ldi	r25, 0x00	; 0

0000069a <.Loc.3>:
     69a:	fc 01       	movw	r30, r24
     69c:	10 82       	st	Z, r1

0000069e <.Loc.4>:
    TCCR0B = 0;
     69e:	85 e4       	ldi	r24, 0x45	; 69
     6a0:	90 e0       	ldi	r25, 0x00	; 0

000006a2 <.Loc.5>:
     6a2:	fc 01       	movw	r30, r24
     6a4:	10 82       	st	Z, r1

000006a6 <.Loc.6>:
    TCNT0 = 6;
     6a6:	86 e4       	ldi	r24, 0x46	; 70
     6a8:	90 e0       	ldi	r25, 0x00	; 0

000006aa <.Loc.7>:
     6aa:	26 e0       	ldi	r18, 0x06	; 6
     6ac:	fc 01       	movw	r30, r24
     6ae:	20 83       	st	Z, r18

000006b0 <.Loc.8>:
    TCCR0A |= (1 << WGM01);
     6b0:	84 e4       	ldi	r24, 0x44	; 68
     6b2:	90 e0       	ldi	r25, 0x00	; 0
     6b4:	fc 01       	movw	r30, r24
     6b6:	20 81       	ld	r18, Z
     6b8:	84 e4       	ldi	r24, 0x44	; 68
     6ba:	90 e0       	ldi	r25, 0x00	; 0

000006bc <.Loc.9>:
     6bc:	22 60       	ori	r18, 0x02	; 2
     6be:	fc 01       	movw	r30, r24
     6c0:	20 83       	st	Z, r18

000006c2 <.Loc.10>:
    TCCR0B |= (1 << CS01) | (1 << CS00);//prescaler 64
     6c2:	85 e4       	ldi	r24, 0x45	; 69
     6c4:	90 e0       	ldi	r25, 0x00	; 0
     6c6:	fc 01       	movw	r30, r24
     6c8:	20 81       	ld	r18, Z
     6ca:	85 e4       	ldi	r24, 0x45	; 69
     6cc:	90 e0       	ldi	r25, 0x00	; 0

000006ce <.Loc.11>:
     6ce:	23 60       	ori	r18, 0x03	; 3
     6d0:	fc 01       	movw	r30, r24
     6d2:	20 83       	st	Z, r18

000006d4 <.Loc.12>:
    TIMSK0 |= (1 << TOIE0);
     6d4:	8e e6       	ldi	r24, 0x6E	; 110
     6d6:	90 e0       	ldi	r25, 0x00	; 0
     6d8:	fc 01       	movw	r30, r24
     6da:	20 81       	ld	r18, Z
     6dc:	8e e6       	ldi	r24, 0x6E	; 110
     6de:	90 e0       	ldi	r25, 0x00	; 0

000006e0 <.Loc.13>:
     6e0:	21 60       	ori	r18, 0x01	; 1
     6e2:	fc 01       	movw	r30, r24
     6e4:	20 83       	st	Z, r18

000006e6 <.Loc.14>:
    sei();
     6e6:	78 94       	sei

000006e8 <.Loc.15>:
    //clock 0 defineren
    //interupt setpoint vaststellen
}
     6e8:	00 00       	nop
     6ea:	df 91       	pop	r29
     6ec:	cf 91       	pop	r28
     6ee:	08 95       	ret

000006f0 <time_current_ms>:

int time_current_ms(int update){//0 = return, 1 = time++
     6f0:	8f 92       	push	r8
     6f2:	9f 92       	push	r9
     6f4:	af 92       	push	r10
     6f6:	bf 92       	push	r11
     6f8:	cf 92       	push	r12
     6fa:	df 92       	push	r13
     6fc:	ef 92       	push	r14
     6fe:	ff 92       	push	r15
     700:	0f 93       	push	r16
     702:	1f 93       	push	r17
     704:	cf 93       	push	r28
     706:	df 93       	push	r29
     708:	0f 92       	push	r0
     70a:	0f 92       	push	r0
     70c:	cd b7       	in	r28, 0x3d	; 61
     70e:	de b7       	in	r29, 0x3e	; 62
     710:	9a 83       	std	Y+2, r25	; 0x02
     712:	89 83       	std	Y+1, r24	; 0x01

00000714 <.Loc.17>:
    static unsigned long long int time_ms = 0;
    if (update == 1){
     714:	89 81       	ldd	r24, Y+1	; 0x01
     716:	9a 81       	ldd	r25, Y+2	; 0x02
     718:	81 30       	cpi	r24, 0x01	; 1
     71a:	91 05       	cpc	r25, r1
     71c:	99 f5       	brne	.+102    	; 0x784 <.L3>

0000071e <.Loc.18>:
        time_ms++;
     71e:	80 90 08 02 	lds	r8, 0x0208	; 0x800208 <time_ms.0>
     722:	90 90 09 02 	lds	r9, 0x0209	; 0x800209 <time_ms.0+0x1>
     726:	a0 90 0a 02 	lds	r10, 0x020A	; 0x80020a <time_ms.0+0x2>
     72a:	b0 90 0b 02 	lds	r11, 0x020B	; 0x80020b <time_ms.0+0x3>
     72e:	c0 90 0c 02 	lds	r12, 0x020C	; 0x80020c <time_ms.0+0x4>
     732:	d0 90 0d 02 	lds	r13, 0x020D	; 0x80020d <time_ms.0+0x5>
     736:	e0 90 0e 02 	lds	r14, 0x020E	; 0x80020e <time_ms.0+0x6>
     73a:	f0 90 0f 02 	lds	r15, 0x020F	; 0x80020f <time_ms.0+0x7>
     73e:	28 2d       	mov	r18, r8
     740:	39 2d       	mov	r19, r9
     742:	4a 2d       	mov	r20, r10
     744:	5b 2d       	mov	r21, r11
     746:	6c 2d       	mov	r22, r12
     748:	7d 2d       	mov	r23, r13
     74a:	8e 2d       	mov	r24, r14
     74c:	9f 2d       	mov	r25, r15
     74e:	a1 e0       	ldi	r26, 0x01	; 1
     750:	0e 94 cb 07 	call	0xf96	; 0xf96 <__adddi3_s8>
     754:	82 2e       	mov	r8, r18
     756:	93 2e       	mov	r9, r19
     758:	a4 2e       	mov	r10, r20
     75a:	b5 2e       	mov	r11, r21
     75c:	c6 2e       	mov	r12, r22
     75e:	d7 2e       	mov	r13, r23
     760:	e8 2e       	mov	r14, r24
     762:	f9 2e       	mov	r15, r25
     764:	80 92 08 02 	sts	0x0208, r8	; 0x800208 <time_ms.0>
     768:	90 92 09 02 	sts	0x0209, r9	; 0x800209 <time_ms.0+0x1>
     76c:	a0 92 0a 02 	sts	0x020A, r10	; 0x80020a <time_ms.0+0x2>
     770:	b0 92 0b 02 	sts	0x020B, r11	; 0x80020b <time_ms.0+0x3>
     774:	c0 92 0c 02 	sts	0x020C, r12	; 0x80020c <time_ms.0+0x4>
     778:	d0 92 0d 02 	sts	0x020D, r13	; 0x80020d <time_ms.0+0x5>
     77c:	e0 92 0e 02 	sts	0x020E, r14	; 0x80020e <time_ms.0+0x6>
     780:	f0 92 0f 02 	sts	0x020F, r15	; 0x80020f <time_ms.0+0x7>

00000784 <.L3>:
    }
    return(time_ms);
     784:	00 91 08 02 	lds	r16, 0x0208	; 0x800208 <time_ms.0>
     788:	10 91 09 02 	lds	r17, 0x0209	; 0x800209 <time_ms.0+0x1>
     78c:	20 91 0a 02 	lds	r18, 0x020A	; 0x80020a <time_ms.0+0x2>
     790:	30 91 0b 02 	lds	r19, 0x020B	; 0x80020b <time_ms.0+0x3>
     794:	40 91 0c 02 	lds	r20, 0x020C	; 0x80020c <time_ms.0+0x4>
     798:	50 91 0d 02 	lds	r21, 0x020D	; 0x80020d <time_ms.0+0x5>
     79c:	60 91 0e 02 	lds	r22, 0x020E	; 0x80020e <time_ms.0+0x6>
     7a0:	70 91 0f 02 	lds	r23, 0x020F	; 0x80020f <time_ms.0+0x7>
     7a4:	c8 01       	movw	r24, r16

000007a6 <.Loc.20>:
}
     7a6:	0f 90       	pop	r0
     7a8:	0f 90       	pop	r0
     7aa:	df 91       	pop	r29
     7ac:	cf 91       	pop	r28
     7ae:	1f 91       	pop	r17
     7b0:	0f 91       	pop	r16
     7b2:	ff 90       	pop	r15
     7b4:	ef 90       	pop	r14
     7b6:	df 90       	pop	r13
     7b8:	cf 90       	pop	r12
     7ba:	bf 90       	pop	r11
     7bc:	af 90       	pop	r10
     7be:	9f 90       	pop	r9
     7c0:	8f 90       	pop	r8
     7c2:	08 95       	ret

000007c4 <__vector_23>:

ISR(TIMER0_OVF_vect){
     7c4:	1f 92       	push	r1
     7c6:	0f 92       	push	r0
     7c8:	0f b6       	in	r0, 0x3f	; 63
     7ca:	0f 92       	push	r0
     7cc:	11 24       	eor	r1, r1
     7ce:	0b b6       	in	r0, 0x3b	; 59
     7d0:	0f 92       	push	r0
     7d2:	2f 93       	push	r18
     7d4:	3f 93       	push	r19
     7d6:	4f 93       	push	r20
     7d8:	5f 93       	push	r21
     7da:	6f 93       	push	r22
     7dc:	7f 93       	push	r23
     7de:	8f 93       	push	r24
     7e0:	9f 93       	push	r25
     7e2:	af 93       	push	r26
     7e4:	bf 93       	push	r27
     7e6:	ef 93       	push	r30
     7e8:	ff 93       	push	r31
     7ea:	cf 93       	push	r28
     7ec:	df 93       	push	r29
     7ee:	cd b7       	in	r28, 0x3d	; 61
     7f0:	de b7       	in	r29, 0x3e	; 62

000007f2 <.Loc.22>:
    TCNT0 = 6;
     7f2:	86 e4       	ldi	r24, 0x46	; 70
     7f4:	90 e0       	ldi	r25, 0x00	; 0

000007f6 <.Loc.23>:
     7f6:	26 e0       	ldi	r18, 0x06	; 6
     7f8:	fc 01       	movw	r30, r24
     7fa:	20 83       	st	Z, r18

000007fc <.Loc.24>:
    time_current_ms(1);
     7fc:	81 e0       	ldi	r24, 0x01	; 1
     7fe:	90 e0       	ldi	r25, 0x00	; 0
     800:	0e 94 78 03 	call	0x6f0	; 0x6f0 <time_current_ms>

00000804 <.Loc.25>:
}
     804:	00 00       	nop
     806:	df 91       	pop	r29
     808:	cf 91       	pop	r28
     80a:	ff 91       	pop	r31
     80c:	ef 91       	pop	r30
     80e:	bf 91       	pop	r27
     810:	af 91       	pop	r26
     812:	9f 91       	pop	r25
     814:	8f 91       	pop	r24
     816:	7f 91       	pop	r23
     818:	6f 91       	pop	r22
     81a:	5f 91       	pop	r21
     81c:	4f 91       	pop	r20
     81e:	3f 91       	pop	r19
     820:	2f 91       	pop	r18
     822:	0f 90       	pop	r0
     824:	0b be       	out	0x3b, r0	; 59
     826:	0f 90       	pop	r0
     828:	0f be       	out	0x3f, r0	; 63
     82a:	0f 90       	pop	r0
     82c:	1f 90       	pop	r1
     82e:	18 95       	reti

00000830 <PIN_setup>:
float overdracht_L;
float overdracht_R;
unsigned long long int boom_timer = 0;

void PIN_setup ()
{
     830:	cf 93       	push	r28
     832:	df 93       	push	r29
     834:	cd b7       	in	r28, 0x3d	; 61
     836:	de b7       	in	r29, 0x3e	; 62

00000838 <.Loc.1>:
    DDRB |= (1<<LED);
     838:	84 e2       	ldi	r24, 0x24	; 36
     83a:	90 e0       	ldi	r25, 0x00	; 0
     83c:	fc 01       	movw	r30, r24
     83e:	20 81       	ld	r18, Z
     840:	84 e2       	ldi	r24, 0x24	; 36
     842:	90 e0       	ldi	r25, 0x00	; 0

00000844 <.Loc.2>:
     844:	22 60       	ori	r18, 0x02	; 2
     846:	fc 01       	movw	r30, r24
     848:	20 83       	st	Z, r18

0000084a <.Loc.3>:
    PORTB &= ~(1<<LED);
     84a:	85 e2       	ldi	r24, 0x25	; 37
     84c:	90 e0       	ldi	r25, 0x00	; 0
     84e:	fc 01       	movw	r30, r24
     850:	20 81       	ld	r18, Z

00000852 <.Loc.4>:
     852:	85 e2       	ldi	r24, 0x25	; 37
     854:	90 e0       	ldi	r25, 0x00	; 0

00000856 <.Loc.5>:
     856:	2d 7f       	andi	r18, 0xFD	; 253
     858:	fc 01       	movw	r30, r24
     85a:	20 83       	st	Z, r18

0000085c <.Loc.6>:
    DDRL &= ~(1<<IR_L);
     85c:	8a e0       	ldi	r24, 0x0A	; 10
     85e:	91 e0       	ldi	r25, 0x01	; 1
     860:	fc 01       	movw	r30, r24
     862:	20 81       	ld	r18, Z

00000864 <.Loc.7>:
     864:	8a e0       	ldi	r24, 0x0A	; 10
     866:	91 e0       	ldi	r25, 0x01	; 1

00000868 <.Loc.8>:
     868:	2f 7e       	andi	r18, 0xEF	; 239
     86a:	fc 01       	movw	r30, r24
     86c:	20 83       	st	Z, r18

0000086e <.Loc.9>:
    DDRL &= ~(1<<IR_R);
     86e:	8a e0       	ldi	r24, 0x0A	; 10
     870:	91 e0       	ldi	r25, 0x01	; 1
     872:	fc 01       	movw	r30, r24
     874:	20 81       	ld	r18, Z

00000876 <.Loc.10>:
     876:	8a e0       	ldi	r24, 0x0A	; 10
     878:	91 e0       	ldi	r25, 0x01	; 1

0000087a <.Loc.11>:
     87a:	27 7f       	andi	r18, 0xF7	; 247
     87c:	fc 01       	movw	r30, r24
     87e:	20 83       	st	Z, r18

00000880 <.Loc.12>:
}
     880:	00 00       	nop
     882:	df 91       	pop	r29
     884:	cf 91       	pop	r28
     886:	08 95       	ret

00000888 <init_h_brug>:

void init_h_brug (void)
{
     888:	cf 93       	push	r28
     88a:	df 93       	push	r29
     88c:	cd b7       	in	r28, 0x3d	; 61
     88e:	de b7       	in	r29, 0x3e	; 62

00000890 <.Loc.14>:
    //timer PWM motoren
    TCCR4A = (1<<COM4A1) | (0<<COM4A0) | (1<<COM4B1) | (0<<COM4B0) | (0<<COM4C1) | (0<<COM4C0) | (1<<WGM41) | (0<<WGM40); //COM1xn is de PWM instelling voor de pins
     890:	80 ea       	ldi	r24, 0xA0	; 160
     892:	90 e0       	ldi	r25, 0x00	; 0

00000894 <.Loc.15>:
     894:	22 ea       	ldi	r18, 0xA2	; 162
     896:	fc 01       	movw	r30, r24
     898:	20 83       	st	Z, r18

0000089a <.Loc.16>:
    TCCR4B = (1<<WGM43) | (1<<WGM42) | (0<<CS42) | (1<<CS41) | (0<<CS40); // CS1n is de prescaler 8 WGM1n is de PWM instelling voor timer 1 (fastPWM)
     89a:	81 ea       	ldi	r24, 0xA1	; 161
     89c:	90 e0       	ldi	r25, 0x00	; 0

0000089e <.Loc.17>:
     89e:	2a e1       	ldi	r18, 0x1A	; 26
     8a0:	fc 01       	movw	r30, r24
     8a2:	20 83       	st	Z, r18

000008a4 <.Loc.18>:
    OCR4A = 0;
     8a4:	88 ea       	ldi	r24, 0xA8	; 168
     8a6:	90 e0       	ldi	r25, 0x00	; 0

000008a8 <.Loc.19>:
     8a8:	fc 01       	movw	r30, r24
     8aa:	11 82       	std	Z+1, r1	; 0x01
     8ac:	10 82       	st	Z, r1

000008ae <.Loc.20>:
    OCR4B = 0;
     8ae:	8a ea       	ldi	r24, 0xAA	; 170
     8b0:	90 e0       	ldi	r25, 0x00	; 0

000008b2 <.Loc.21>:
     8b2:	fc 01       	movw	r30, r24
     8b4:	11 82       	std	Z+1, r1	; 0x01
     8b6:	10 82       	st	Z, r1

000008b8 <.Loc.22>:
    ICR4 = 1260;
     8b8:	86 ea       	ldi	r24, 0xA6	; 166
     8ba:	90 e0       	ldi	r25, 0x00	; 0

000008bc <.Loc.23>:
     8bc:	2c ee       	ldi	r18, 0xEC	; 236
     8be:	34 e0       	ldi	r19, 0x04	; 4
     8c0:	fc 01       	movw	r30, r24
     8c2:	31 83       	std	Z+1, r19	; 0x01
     8c4:	20 83       	st	Z, r18

000008c6 <.Loc.24>:

    //pinout h-brug
    DDRH |= (1 << motorL_PWM);
     8c6:	81 e0       	ldi	r24, 0x01	; 1
     8c8:	91 e0       	ldi	r25, 0x01	; 1
     8ca:	fc 01       	movw	r30, r24
     8cc:	20 81       	ld	r18, Z
     8ce:	81 e0       	ldi	r24, 0x01	; 1
     8d0:	91 e0       	ldi	r25, 0x01	; 1

000008d2 <.Loc.25>:
     8d2:	28 60       	ori	r18, 0x08	; 8
     8d4:	fc 01       	movw	r30, r24
     8d6:	20 83       	st	Z, r18

000008d8 <.Loc.26>:
    DDRE |= (1 << motorL_1);
     8d8:	8d e2       	ldi	r24, 0x2D	; 45
     8da:	90 e0       	ldi	r25, 0x00	; 0
     8dc:	fc 01       	movw	r30, r24
     8de:	20 81       	ld	r18, Z
     8e0:	8d e2       	ldi	r24, 0x2D	; 45
     8e2:	90 e0       	ldi	r25, 0x00	; 0

000008e4 <.Loc.27>:
     8e4:	20 61       	ori	r18, 0x10	; 16
     8e6:	fc 01       	movw	r30, r24
     8e8:	20 83       	st	Z, r18

000008ea <.Loc.28>:
    DDRE |= (1 << motorL_2);
     8ea:	8d e2       	ldi	r24, 0x2D	; 45
     8ec:	90 e0       	ldi	r25, 0x00	; 0
     8ee:	fc 01       	movw	r30, r24
     8f0:	20 81       	ld	r18, Z
     8f2:	8d e2       	ldi	r24, 0x2D	; 45
     8f4:	90 e0       	ldi	r25, 0x00	; 0

000008f6 <.Loc.29>:
     8f6:	20 62       	ori	r18, 0x20	; 32
     8f8:	fc 01       	movw	r30, r24
     8fa:	20 83       	st	Z, r18

000008fc <.Loc.30>:
    DDRE |= (1 << motorR_1);
     8fc:	8d e2       	ldi	r24, 0x2D	; 45
     8fe:	90 e0       	ldi	r25, 0x00	; 0
     900:	fc 01       	movw	r30, r24
     902:	20 81       	ld	r18, Z
     904:	8d e2       	ldi	r24, 0x2D	; 45
     906:	90 e0       	ldi	r25, 0x00	; 0

00000908 <.Loc.31>:
     908:	22 60       	ori	r18, 0x02	; 2
     90a:	fc 01       	movw	r30, r24
     90c:	20 83       	st	Z, r18

0000090e <.Loc.32>:
    DDRG |= (1 << motorR_2);
     90e:	83 e3       	ldi	r24, 0x33	; 51
     910:	90 e0       	ldi	r25, 0x00	; 0
     912:	fc 01       	movw	r30, r24
     914:	20 81       	ld	r18, Z
     916:	83 e3       	ldi	r24, 0x33	; 51
     918:	90 e0       	ldi	r25, 0x00	; 0

0000091a <.Loc.33>:
     91a:	20 62       	ori	r18, 0x20	; 32
     91c:	fc 01       	movw	r30, r24
     91e:	20 83       	st	Z, r18

00000920 <.Loc.34>:
    DDRH |= (1 << motorR_PWM);
     920:	81 e0       	ldi	r24, 0x01	; 1
     922:	91 e0       	ldi	r25, 0x01	; 1
     924:	fc 01       	movw	r30, r24
     926:	20 81       	ld	r18, Z
     928:	81 e0       	ldi	r24, 0x01	; 1
     92a:	91 e0       	ldi	r25, 0x01	; 1

0000092c <.Loc.35>:
     92c:	20 61       	ori	r18, 0x10	; 16
     92e:	fc 01       	movw	r30, r24
     930:	20 83       	st	Z, r18

00000932 <.Loc.36>:
//    PORTE &= ~(1 << motorL_1);
//    PORTE &= ~(1 << motorL_2);
//    PORTE &= ~(1 << motorR_1);
//    PORTG &= ~(1 << motorR_2);
//    PORTH &= ~(1 << motorR_PWM);
}
     932:	00 00       	nop
     934:	df 91       	pop	r29
     936:	cf 91       	pop	r28
     938:	08 95       	ret

0000093a <h_bridgeL>:

void h_bridgeL(int PercentKracht)
{
     93a:	cf 93       	push	r28
     93c:	df 93       	push	r29
     93e:	0f 92       	push	r0
     940:	0f 92       	push	r0
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
     946:	9a 83       	std	Y+2, r25	; 0x02
     948:	89 83       	std	Y+1, r24	; 0x01

0000094a <.Loc.38>:
    if ((PercentKracht >= 0) && (PercentKracht <= 100))
     94a:	89 81       	ldd	r24, Y+1	; 0x01
     94c:	9a 81       	ldd	r25, Y+2	; 0x02
     94e:	99 23       	and	r25, r25
     950:	2c f1       	brlt	.+74     	; 0x99c <.L5>

00000952 <.Loc.39>:
     952:	89 81       	ldd	r24, Y+1	; 0x01
     954:	9a 81       	ldd	r25, Y+2	; 0x02
     956:	84 36       	cpi	r24, 0x64	; 100
     958:	91 05       	cpc	r25, r1
     95a:	09 f0       	breq	.+2      	; 0x95e <.Loc.40>

0000095c <L0^A>:
     95c:	fc f4       	brge	.+62     	; 0x99c <.L5>

0000095e <.Loc.40>:
    {
        OCR4A = ((ICR4/100)*PercentKracht);
     95e:	86 ea       	ldi	r24, 0xA6	; 166
     960:	90 e0       	ldi	r25, 0x00	; 0
     962:	fc 01       	movw	r30, r24
     964:	80 81       	ld	r24, Z
     966:	91 81       	ldd	r25, Z+1	; 0x01

00000968 <.Loc.41>:
     968:	96 95       	lsr	r25
     96a:	87 95       	ror	r24
     96c:	96 95       	lsr	r25
     96e:	87 95       	ror	r24
     970:	9c 01       	movw	r18, r24
     972:	ab e7       	ldi	r26, 0x7B	; 123
     974:	b4 e1       	ldi	r27, 0x14	; 20
     976:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
     97a:	bc 01       	movw	r22, r24
     97c:	76 95       	lsr	r23
     97e:	67 95       	ror	r22

00000980 <.Loc.42>:
     980:	49 81       	ldd	r20, Y+1	; 0x01
     982:	5a 81       	ldd	r21, Y+2	; 0x02

00000984 <.Loc.43>:
     984:	88 ea       	ldi	r24, 0xA8	; 168
     986:	90 e0       	ldi	r25, 0x00	; 0

00000988 <.Loc.44>:
     988:	64 9f       	mul	r22, r20
     98a:	90 01       	movw	r18, r0
     98c:	65 9f       	mul	r22, r21
     98e:	30 0d       	add	r19, r0
     990:	74 9f       	mul	r23, r20
     992:	30 0d       	add	r19, r0
     994:	11 24       	eor	r1, r1

00000996 <.Loc.45>:
     996:	fc 01       	movw	r30, r24
     998:	31 83       	std	Z+1, r19	; 0x01
     99a:	20 83       	st	Z, r18

0000099c <.L5>:
    }
}
     99c:	00 00       	nop
     99e:	0f 90       	pop	r0
     9a0:	0f 90       	pop	r0
     9a2:	df 91       	pop	r29
     9a4:	cf 91       	pop	r28
     9a6:	08 95       	ret

000009a8 <h_bridgeR>:

void h_bridgeR(int PercentKracht)
{
     9a8:	cf 93       	push	r28
     9aa:	df 93       	push	r29
     9ac:	0f 92       	push	r0
     9ae:	0f 92       	push	r0
     9b0:	cd b7       	in	r28, 0x3d	; 61
     9b2:	de b7       	in	r29, 0x3e	; 62
     9b4:	9a 83       	std	Y+2, r25	; 0x02
     9b6:	89 83       	std	Y+1, r24	; 0x01

000009b8 <.Loc.48>:
    if ((PercentKracht >= 0) && (PercentKracht <= 100))
     9b8:	89 81       	ldd	r24, Y+1	; 0x01
     9ba:	9a 81       	ldd	r25, Y+2	; 0x02
     9bc:	99 23       	and	r25, r25
     9be:	2c f1       	brlt	.+74     	; 0xa0a <.L8>

000009c0 <.Loc.49>:
     9c0:	89 81       	ldd	r24, Y+1	; 0x01
     9c2:	9a 81       	ldd	r25, Y+2	; 0x02
     9c4:	84 36       	cpi	r24, 0x64	; 100
     9c6:	91 05       	cpc	r25, r1
     9c8:	09 f0       	breq	.+2      	; 0x9cc <.Loc.50>

000009ca <L0^A>:
     9ca:	fc f4       	brge	.+62     	; 0xa0a <.L8>

000009cc <.Loc.50>:
    {
        OCR4B = ((ICR4/100)*PercentKracht);
     9cc:	86 ea       	ldi	r24, 0xA6	; 166
     9ce:	90 e0       	ldi	r25, 0x00	; 0
     9d0:	fc 01       	movw	r30, r24
     9d2:	80 81       	ld	r24, Z
     9d4:	91 81       	ldd	r25, Z+1	; 0x01

000009d6 <.Loc.51>:
     9d6:	96 95       	lsr	r25
     9d8:	87 95       	ror	r24
     9da:	96 95       	lsr	r25
     9dc:	87 95       	ror	r24
     9de:	9c 01       	movw	r18, r24
     9e0:	ab e7       	ldi	r26, 0x7B	; 123
     9e2:	b4 e1       	ldi	r27, 0x14	; 20
     9e4:	0e 94 bc 07 	call	0xf78	; 0xf78 <__umulhisi3>
     9e8:	bc 01       	movw	r22, r24
     9ea:	76 95       	lsr	r23
     9ec:	67 95       	ror	r22

000009ee <.Loc.52>:
     9ee:	49 81       	ldd	r20, Y+1	; 0x01
     9f0:	5a 81       	ldd	r21, Y+2	; 0x02

000009f2 <.Loc.53>:
     9f2:	8a ea       	ldi	r24, 0xAA	; 170
     9f4:	90 e0       	ldi	r25, 0x00	; 0

000009f6 <.Loc.54>:
     9f6:	64 9f       	mul	r22, r20
     9f8:	90 01       	movw	r18, r0
     9fa:	65 9f       	mul	r22, r21
     9fc:	30 0d       	add	r19, r0
     9fe:	74 9f       	mul	r23, r20
     a00:	30 0d       	add	r19, r0
     a02:	11 24       	eor	r1, r1

00000a04 <.Loc.55>:
     a04:	fc 01       	movw	r30, r24
     a06:	31 83       	std	Z+1, r19	; 0x01
     a08:	20 83       	st	Z, r18

00000a0a <.L8>:
    }
}
     a0a:	00 00       	nop
     a0c:	0f 90       	pop	r0
     a0e:	0f 90       	pop	r0
     a10:	df 91       	pop	r29
     a12:	cf 91       	pop	r28
     a14:	08 95       	ret

00000a16 <PID>:

float PID (overdracht_L, overdracht_R)
{
     a16:	cf 93       	push	r28
     a18:	df 93       	push	r29
     a1a:	00 d0       	rcall	.+0      	; 0xa1c <L0^A>

00000a1c <L0^A>:
     a1c:	00 d0       	rcall	.+0      	; 0xa1e <L0^A>

00000a1e <L0^A>:
     a1e:	0f 92       	push	r0
     a20:	0f 92       	push	r0
     a22:	cd b7       	in	r28, 0x3d	; 61
     a24:	de b7       	in	r29, 0x3e	; 62
     a26:	9a 83       	std	Y+2, r25	; 0x02
     a28:	89 83       	std	Y+1, r24	; 0x01
     a2a:	7c 83       	std	Y+4, r23	; 0x04
     a2c:	6b 83       	std	Y+3, r22	; 0x03

00000a2e <.Loc.58>:
    if (agv_ultrasoon_LV > agv_ultrasoon_LA)
     a2e:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     a32:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     a36:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     a3a:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

00000a3e <.Loc.59>:
     a3e:	28 17       	cp	r18, r24
     a40:	39 07       	cpc	r19, r25
     a42:	79 f0       	breq	.+30     	; 0xa62 <.L10>
     a44:	70 f0       	brcs	.+28     	; 0xa62 <.L10>

00000a46 <.Loc.60>:
    {
        overdracht_L = agv_ultrasoon_LV / agv_ultrasoon_LA;
     a46:	80 91 04 02 	lds	r24, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     a4a:	90 91 05 02 	lds	r25, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     a4e:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     a52:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>
     a56:	b9 01       	movw	r22, r18
     a58:	0e 94 a8 07 	call	0xf50	; 0xf50 <__udivmodhi4>
     a5c:	cb 01       	movw	r24, r22

00000a5e <.Loc.61>:
     a5e:	9a 83       	std	Y+2, r25	; 0x02
     a60:	89 83       	std	Y+1, r24	; 0x01

00000a62 <.L10>:
    }
    if (agv_ultrasoon_LV < agv_ultrasoon_LA)
     a62:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     a66:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     a6a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     a6e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>

00000a72 <.Loc.63>:
     a72:	28 17       	cp	r18, r24
     a74:	39 07       	cpc	r19, r25
     a76:	70 f4       	brcc	.+28     	; 0xa94 <.L11>

00000a78 <.Loc.64>:
    {
        overdracht_R = agv_ultrasoon_LA / agv_ultrasoon_LV;
     a78:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <agv_ultrasoon_LA>
     a7c:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <agv_ultrasoon_LA+0x1>
     a80:	20 91 04 02 	lds	r18, 0x0204	; 0x800204 <agv_ultrasoon_LV>
     a84:	30 91 05 02 	lds	r19, 0x0205	; 0x800205 <agv_ultrasoon_LV+0x1>
     a88:	b9 01       	movw	r22, r18
     a8a:	0e 94 a8 07 	call	0xf50	; 0xf50 <__udivmodhi4>
     a8e:	cb 01       	movw	r24, r22

00000a90 <.Loc.65>:
     a90:	9c 83       	std	Y+4, r25	; 0x04
     a92:	8b 83       	std	Y+3, r24	; 0x03

00000a94 <.L11>:
    }
}
     a94:	00 00       	nop
     a96:	6d 81       	ldd	r22, Y+5	; 0x05
     a98:	7e 81       	ldd	r23, Y+6	; 0x06
     a9a:	8f 81       	ldd	r24, Y+7	; 0x07
     a9c:	98 85       	ldd	r25, Y+8	; 0x08
     a9e:	28 96       	adiw	r28, 0x08	; 8
     aa0:	0f b6       	in	r0, 0x3f	; 63
     aa2:	f8 94       	cli
     aa4:	de bf       	out	0x3e, r29	; 62
     aa6:	0f be       	out	0x3f, r0	; 63
     aa8:	cd bf       	out	0x3d, r28	; 61
     aaa:	df 91       	pop	r29
     aac:	cf 91       	pop	r28
     aae:	08 95       	ret

00000ab0 <main>:

int main(void)
{
     ab0:	2f 92       	push	r2
     ab2:	3f 92       	push	r3
     ab4:	4f 92       	push	r4
     ab6:	5f 92       	push	r5
     ab8:	6f 92       	push	r6
     aba:	7f 92       	push	r7
     abc:	8f 92       	push	r8
     abe:	9f 92       	push	r9
     ac0:	af 92       	push	r10
     ac2:	bf 92       	push	r11
     ac4:	cf 92       	push	r12
     ac6:	df 92       	push	r13
     ac8:	ef 92       	push	r14
     aca:	ff 92       	push	r15
     acc:	0f 93       	push	r16
     ace:	1f 93       	push	r17
     ad0:	cf 93       	push	r28
     ad2:	df 93       	push	r29
     ad4:	cd b7       	in	r28, 0x3d	; 61
     ad6:	de b7       	in	r29, 0x3e	; 62
     ad8:	a4 97       	sbiw	r28, 0x24	; 36
     ada:	0f b6       	in	r0, 0x3f	; 63
     adc:	f8 94       	cli
     ade:	de bf       	out	0x3e, r29	; 62
     ae0:	0f be       	out	0x3f, r0	; 63
     ae2:	cd bf       	out	0x3d, r28	; 61

00000ae4 <.Loc.68>:
    //boom_det();
    PIN_setup();
     ae4:	0e 94 18 04 	call	0x830	; 0x830 <PIN_setup>

00000ae8 <.Loc.69>:
    //draaien();
    //draaien_2();
    agv_ultrasoon_init();
     ae8:	0e 94 95 00 	call	0x12a	; 0x12a <agv_ultrasoon_init>

00000aec <.Loc.70>:
    //PID();
    init_h_brug();
     aec:	0e 94 44 04 	call	0x888	; 0x888 <init_h_brug>

00000af0 <.Loc.71>:
    int rijden = 0;
     af0:	1a 82       	std	Y+2, r1	; 0x02
     af2:	19 82       	std	Y+1, r1	; 0x01

00000af4 <.Loc.72>:
    int knop_rijden = 0;
     af4:	1c 82       	std	Y+4, r1	; 0x04
     af6:	1b 82       	std	Y+3, r1	; 0x03

00000af8 <.L20>:
//            PORTE |= (1 << motorR_1);
//            PORTG &= ~(1 << motorR_2);
//        }


        if ((PINF & (1<<knop)) == 0)
     af8:	8f e2       	ldi	r24, 0x2F	; 47
     afa:	90 e0       	ldi	r25, 0x00	; 0
     afc:	fc 01       	movw	r30, r24
     afe:	80 81       	ld	r24, Z

00000b00 <.Loc.74>:
     b00:	88 23       	and	r24, r24
     b02:	74 f0       	brlt	.+28     	; 0xb20 <.L13>

00000b04 <.Loc.75>:
        {
            if (knop_rijden == 0)
     b04:	8b 81       	ldd	r24, Y+3	; 0x03
     b06:	9c 81       	ldd	r25, Y+4	; 0x04
     b08:	00 97       	sbiw	r24, 0x00	; 0
     b0a:	61 f4       	brne	.+24     	; 0xb24 <.L14>

00000b0c <.Loc.76>:
            {
                rijden++;
     b0c:	89 81       	ldd	r24, Y+1	; 0x01
     b0e:	9a 81       	ldd	r25, Y+2	; 0x02
     b10:	01 96       	adiw	r24, 0x01	; 1
     b12:	9a 83       	std	Y+2, r25	; 0x02
     b14:	89 83       	std	Y+1, r24	; 0x01

00000b16 <.Loc.77>:
                knop_rijden = 1;
     b16:	81 e0       	ldi	r24, 0x01	; 1
     b18:	90 e0       	ldi	r25, 0x00	; 0
     b1a:	9c 83       	std	Y+4, r25	; 0x04
     b1c:	8b 83       	std	Y+3, r24	; 0x03
     b1e:	02 c0       	rjmp	.+4      	; 0xb24 <.L14>

00000b20 <.L13>:
            }
        }
        else
        {
            knop_rijden = 0;
     b20:	1c 82       	std	Y+4, r1	; 0x04
     b22:	1b 82       	std	Y+3, r1	; 0x03

00000b24 <.L14>:
        }

        if (rijden == 1)
     b24:	89 81       	ldd	r24, Y+1	; 0x01
     b26:	9a 81       	ldd	r25, Y+2	; 0x02
     b28:	81 30       	cpi	r24, 0x01	; 1
     b2a:	91 05       	cpc	r25, r1
     b2c:	09 f0       	breq	.+2      	; 0xb30 <.Loc.80>

00000b2e <L0^A>:
     b2e:	32 c1       	rjmp	.+612    	; 0xd94 <.L15>

00000b30 <.Loc.80>:
        {
            if (agv_ultrasoon_voor >= 200)
     b30:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <agv_ultrasoon_voor>
     b34:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <agv_ultrasoon_voor+0x1>

00000b38 <.Loc.81>:
     b38:	87 3c       	cpi	r24, 0xC7	; 199
     b3a:	91 05       	cpc	r25, r1
     b3c:	09 f0       	breq	.+2      	; 0xb40 <L0^A>

00000b3e <L0^A>:
     b3e:	08 f4       	brcc	.+2      	; 0xb42 <.Loc.82>

00000b40 <L0^A>:
     b40:	f4 c0       	rjmp	.+488    	; 0xd2a <.L16>

00000b42 <.Loc.82>:
            {
                PORTB &= ~(1<<LED);
     b42:	85 e2       	ldi	r24, 0x25	; 37
     b44:	90 e0       	ldi	r25, 0x00	; 0
     b46:	fc 01       	movw	r30, r24
     b48:	20 81       	ld	r18, Z

00000b4a <.Loc.83>:
     b4a:	85 e2       	ldi	r24, 0x25	; 37
     b4c:	90 e0       	ldi	r25, 0x00	; 0

00000b4e <.Loc.84>:
     b4e:	2d 7f       	andi	r18, 0xFD	; 253
     b50:	fc 01       	movw	r30, r24
     b52:	20 83       	st	Z, r18

00000b54 <.Loc.85>:
                h_bridgeL(50);
     b54:	82 e3       	ldi	r24, 0x32	; 50
     b56:	90 e0       	ldi	r25, 0x00	; 0
     b58:	0e 94 9d 04 	call	0x93a	; 0x93a <h_bridgeL>

00000b5c <.Loc.86>:
                h_bridgeR(50);
     b5c:	82 e3       	ldi	r24, 0x32	; 50
     b5e:	90 e0       	ldi	r25, 0x00	; 0
     b60:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <h_bridgeR>

00000b64 <.Loc.87>:
                PORTE |= (1 << motorL_1);
     b64:	8e e2       	ldi	r24, 0x2E	; 46
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	fc 01       	movw	r30, r24
     b6a:	20 81       	ld	r18, Z
     b6c:	8e e2       	ldi	r24, 0x2E	; 46
     b6e:	90 e0       	ldi	r25, 0x00	; 0

00000b70 <.Loc.88>:
     b70:	20 61       	ori	r18, 0x10	; 16
     b72:	fc 01       	movw	r30, r24
     b74:	20 83       	st	Z, r18

00000b76 <.Loc.89>:
                PORTE &= ~(1 << motorL_2);
     b76:	8e e2       	ldi	r24, 0x2E	; 46
     b78:	90 e0       	ldi	r25, 0x00	; 0
     b7a:	fc 01       	movw	r30, r24
     b7c:	20 81       	ld	r18, Z

00000b7e <.Loc.90>:
     b7e:	8e e2       	ldi	r24, 0x2E	; 46
     b80:	90 e0       	ldi	r25, 0x00	; 0

00000b82 <.Loc.91>:
     b82:	2f 7d       	andi	r18, 0xDF	; 223
     b84:	fc 01       	movw	r30, r24
     b86:	20 83       	st	Z, r18

00000b88 <.Loc.92>:
                PORTE |= (1 << motorR_1);
     b88:	8e e2       	ldi	r24, 0x2E	; 46
     b8a:	90 e0       	ldi	r25, 0x00	; 0
     b8c:	fc 01       	movw	r30, r24
     b8e:	20 81       	ld	r18, Z
     b90:	8e e2       	ldi	r24, 0x2E	; 46
     b92:	90 e0       	ldi	r25, 0x00	; 0

00000b94 <.Loc.93>:
     b94:	22 60       	ori	r18, 0x02	; 2
     b96:	fc 01       	movw	r30, r24
     b98:	20 83       	st	Z, r18

00000b9a <.Loc.94>:
                PORTG &= ~(1 << motorR_2);
     b9a:	84 e3       	ldi	r24, 0x34	; 52
     b9c:	90 e0       	ldi	r25, 0x00	; 0
     b9e:	fc 01       	movw	r30, r24
     ba0:	20 81       	ld	r18, Z

00000ba2 <.Loc.95>:
     ba2:	84 e3       	ldi	r24, 0x34	; 52
     ba4:	90 e0       	ldi	r25, 0x00	; 0

00000ba6 <.Loc.96>:
     ba6:	2f 7d       	andi	r18, 0xDF	; 223
     ba8:	fc 01       	movw	r30, r24
     baa:	20 83       	st	Z, r18

00000bac <.Loc.97>:
                if (((PINF & (1<<IR_R)) == 0) || ((PINF & (1<<IR_L)) == 0))
     bac:	8f e2       	ldi	r24, 0x2F	; 47
     bae:	90 e0       	ldi	r25, 0x00	; 0
     bb0:	fc 01       	movw	r30, r24
     bb2:	80 81       	ld	r24, Z

00000bb4 <.Loc.98>:
     bb4:	88 2f       	mov	r24, r24
     bb6:	90 e0       	ldi	r25, 0x00	; 0
     bb8:	88 70       	andi	r24, 0x08	; 8
     bba:	99 27       	eor	r25, r25

00000bbc <.Loc.99>:
     bbc:	00 97       	sbiw	r24, 0x00	; 0
     bbe:	59 f0       	breq	.+22     	; 0xbd6 <.L17>

00000bc0 <.Loc.100>:
     bc0:	8f e2       	ldi	r24, 0x2F	; 47
     bc2:	90 e0       	ldi	r25, 0x00	; 0
     bc4:	fc 01       	movw	r30, r24
     bc6:	80 81       	ld	r24, Z

00000bc8 <.Loc.101>:
     bc8:	88 2f       	mov	r24, r24
     bca:	90 e0       	ldi	r25, 0x00	; 0
     bcc:	80 71       	andi	r24, 0x10	; 16
     bce:	99 27       	eor	r25, r25

00000bd0 <.Loc.102>:
     bd0:	00 97       	sbiw	r24, 0x00	; 0
     bd2:	09 f0       	breq	.+2      	; 0xbd6 <.L17>

00000bd4 <L0^A>:
     bd4:	df c0       	rjmp	.+446    	; 0xd94 <.L15>

00000bd6 <.L17>:
                {
                    boom_timer = time_current_ms(0);
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	90 e0       	ldi	r25, 0x00	; 0
     bda:	0e 94 78 03 	call	0x6f0	; 0x6f0 <time_current_ms>
     bde:	9e 83       	std	Y+6, r25	; 0x06
     be0:	8d 83       	std	Y+5, r24	; 0x05
     be2:	89 2f       	mov	r24, r25
     be4:	88 0f       	add	r24, r24
     be6:	88 0b       	sbc	r24, r24
     be8:	8f 83       	std	Y+7, r24	; 0x07
     bea:	88 87       	std	Y+8, r24	; 0x08
     bec:	89 87       	std	Y+9, r24	; 0x09
     bee:	8a 87       	std	Y+10, r24	; 0x0a
     bf0:	8b 87       	std	Y+11, r24	; 0x0b
     bf2:	8c 87       	std	Y+12, r24	; 0x0c

00000bf4 <.Loc.104>:
     bf4:	fd 81       	ldd	r31, Y+5	; 0x05
     bf6:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <boom_timer>
     bfa:	8e 81       	ldd	r24, Y+6	; 0x06
     bfc:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <boom_timer+0x1>
     c00:	ef 81       	ldd	r30, Y+7	; 0x07
     c02:	e0 93 20 02 	sts	0x0220, r30	; 0x800220 <boom_timer+0x2>
     c06:	f8 85       	ldd	r31, Y+8	; 0x08
     c08:	f0 93 21 02 	sts	0x0221, r31	; 0x800221 <boom_timer+0x3>
     c0c:	89 85       	ldd	r24, Y+9	; 0x09
     c0e:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <boom_timer+0x4>
     c12:	ea 85       	ldd	r30, Y+10	; 0x0a
     c14:	e0 93 23 02 	sts	0x0223, r30	; 0x800223 <boom_timer+0x5>
     c18:	fb 85       	ldd	r31, Y+11	; 0x0b
     c1a:	f0 93 24 02 	sts	0x0224, r31	; 0x800224 <boom_timer+0x6>
     c1e:	8c 85       	ldd	r24, Y+12	; 0x0c
     c20:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <boom_timer+0x7>

00000c24 <.Loc.105>:
                    if (time_current_ms(0) - boom_timer > 1000)
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	0e 94 78 03 	call	0x6f0	; 0x6f0 <time_current_ms>
     c2c:	9e 87       	std	Y+14, r25	; 0x0e
     c2e:	8d 87       	std	Y+13, r24	; 0x0d
     c30:	89 2f       	mov	r24, r25
     c32:	88 0f       	add	r24, r24
     c34:	88 0b       	sbc	r24, r24
     c36:	8f 87       	std	Y+15, r24	; 0x0f
     c38:	88 8b       	std	Y+16, r24	; 0x10
     c3a:	89 8b       	std	Y+17, r24	; 0x11
     c3c:	8a 8b       	std	Y+18, r24	; 0x12
     c3e:	8b 8b       	std	Y+19, r24	; 0x13
     c40:	8c 8b       	std	Y+20, r24	; 0x14

00000c42 <.Loc.106>:
     c42:	20 90 1e 02 	lds	r2, 0x021E	; 0x80021e <boom_timer>
     c46:	30 90 1f 02 	lds	r3, 0x021F	; 0x80021f <boom_timer+0x1>
     c4a:	40 90 20 02 	lds	r4, 0x0220	; 0x800220 <boom_timer+0x2>
     c4e:	50 90 21 02 	lds	r5, 0x0221	; 0x800221 <boom_timer+0x3>
     c52:	60 90 22 02 	lds	r6, 0x0222	; 0x800222 <boom_timer+0x4>
     c56:	70 90 23 02 	lds	r7, 0x0223	; 0x800223 <boom_timer+0x5>
     c5a:	80 90 24 02 	lds	r8, 0x0224	; 0x800224 <boom_timer+0x6>
     c5e:	90 90 25 02 	lds	r9, 0x0225	; 0x800225 <boom_timer+0x7>
     c62:	2d 85       	ldd	r18, Y+13	; 0x0d
     c64:	3e 85       	ldd	r19, Y+14	; 0x0e
     c66:	4f 85       	ldd	r20, Y+15	; 0x0f
     c68:	58 89       	ldd	r21, Y+16	; 0x10
     c6a:	69 89       	ldd	r22, Y+17	; 0x11
     c6c:	7a 89       	ldd	r23, Y+18	; 0x12
     c6e:	8b 89       	ldd	r24, Y+19	; 0x13
     c70:	9c 89       	ldd	r25, Y+20	; 0x14
     c72:	a2 2c       	mov	r10, r2
     c74:	b3 2c       	mov	r11, r3
     c76:	c4 2c       	mov	r12, r4
     c78:	d5 2c       	mov	r13, r5
     c7a:	e6 2c       	mov	r14, r6
     c7c:	f7 2c       	mov	r15, r7
     c7e:	08 2d       	mov	r16, r8
     c80:	19 2d       	mov	r17, r9
     c82:	0e 94 d7 07 	call	0xfae	; 0xfae <__subdi3>
     c86:	82 2e       	mov	r8, r18
     c88:	93 2e       	mov	r9, r19
     c8a:	a4 2e       	mov	r10, r20
     c8c:	b5 2e       	mov	r11, r21
     c8e:	c6 2e       	mov	r12, r22
     c90:	d7 2e       	mov	r13, r23
     c92:	e8 2e       	mov	r14, r24
     c94:	f9 2e       	mov	r15, r25

00000c96 <.Loc.107>:
     c96:	28 2d       	mov	r18, r8
     c98:	39 2d       	mov	r19, r9
     c9a:	4a 2d       	mov	r20, r10
     c9c:	5b 2d       	mov	r21, r11
     c9e:	6c 2d       	mov	r22, r12
     ca0:	7d 2d       	mov	r23, r13
     ca2:	8e 2d       	mov	r24, r14
     ca4:	9f 2d       	mov	r25, r15
     ca6:	28 3e       	cpi	r18, 0xE8	; 232
     ca8:	e3 e0       	ldi	r30, 0x03	; 3
     caa:	3e 07       	cpc	r19, r30
     cac:	41 05       	cpc	r20, r1
     cae:	51 05       	cpc	r21, r1
     cb0:	61 05       	cpc	r22, r1
     cb2:	71 05       	cpc	r23, r1
     cb4:	81 05       	cpc	r24, r1
     cb6:	91 05       	cpc	r25, r1
     cb8:	09 f0       	breq	.+2      	; 0xcbc <L0^A>

00000cba <L0^A>:
     cba:	08 f4       	brcc	.+2      	; 0xcbe <.Loc.108>

00000cbc <L0^A>:
     cbc:	6b c0       	rjmp	.+214    	; 0xd94 <.L15>

00000cbe <.Loc.108>:
                    {
                        //stop motoren
                        h_bridgeL(0);
     cbe:	80 e0       	ldi	r24, 0x00	; 0
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	0e 94 9d 04 	call	0x93a	; 0x93a <h_bridgeL>

00000cc6 <.Loc.109>:
                        h_bridgeR(0);
     cc6:	80 e0       	ldi	r24, 0x00	; 0
     cc8:	90 e0       	ldi	r25, 0x00	; 0
     cca:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <h_bridgeR>

00000cce <.Loc.110>:
                        PORTE |= (1 << motorL_1);
     cce:	8e e2       	ldi	r24, 0x2E	; 46
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	fc 01       	movw	r30, r24
     cd4:	20 81       	ld	r18, Z
     cd6:	8e e2       	ldi	r24, 0x2E	; 46
     cd8:	90 e0       	ldi	r25, 0x00	; 0

00000cda <.Loc.111>:
     cda:	20 61       	ori	r18, 0x10	; 16
     cdc:	fc 01       	movw	r30, r24
     cde:	20 83       	st	Z, r18

00000ce0 <.Loc.112>:
                        PORTE &= ~(1 << motorL_2);
     ce0:	8e e2       	ldi	r24, 0x2E	; 46
     ce2:	90 e0       	ldi	r25, 0x00	; 0
     ce4:	fc 01       	movw	r30, r24
     ce6:	20 81       	ld	r18, Z

00000ce8 <.Loc.113>:
     ce8:	8e e2       	ldi	r24, 0x2E	; 46
     cea:	90 e0       	ldi	r25, 0x00	; 0

00000cec <.Loc.114>:
     cec:	2f 7d       	andi	r18, 0xDF	; 223
     cee:	fc 01       	movw	r30, r24
     cf0:	20 83       	st	Z, r18

00000cf2 <.Loc.115>:
                        PORTE |= (1 << motorR_1);
     cf2:	8e e2       	ldi	r24, 0x2E	; 46
     cf4:	90 e0       	ldi	r25, 0x00	; 0
     cf6:	fc 01       	movw	r30, r24
     cf8:	20 81       	ld	r18, Z
     cfa:	8e e2       	ldi	r24, 0x2E	; 46
     cfc:	90 e0       	ldi	r25, 0x00	; 0

00000cfe <.Loc.116>:
     cfe:	22 60       	ori	r18, 0x02	; 2
     d00:	fc 01       	movw	r30, r24
     d02:	20 83       	st	Z, r18

00000d04 <.Loc.117>:
                        PORTG &= ~(1 << motorR_2);
     d04:	84 e3       	ldi	r24, 0x34	; 52
     d06:	90 e0       	ldi	r25, 0x00	; 0
     d08:	fc 01       	movw	r30, r24
     d0a:	20 81       	ld	r18, Z

00000d0c <.Loc.118>:
     d0c:	84 e3       	ldi	r24, 0x34	; 52
     d0e:	90 e0       	ldi	r25, 0x00	; 0

00000d10 <.Loc.119>:
     d10:	2f 7d       	andi	r18, 0xDF	; 223
     d12:	fc 01       	movw	r30, r24
     d14:	20 83       	st	Z, r18

00000d16 <.Loc.120>:
                        PORTB |= (1<<LED);
     d16:	85 e2       	ldi	r24, 0x25	; 37
     d18:	90 e0       	ldi	r25, 0x00	; 0
     d1a:	fc 01       	movw	r30, r24
     d1c:	20 81       	ld	r18, Z
     d1e:	85 e2       	ldi	r24, 0x25	; 37
     d20:	90 e0       	ldi	r25, 0x00	; 0

00000d22 <.Loc.121>:
     d22:	22 60       	ori	r18, 0x02	; 2
     d24:	fc 01       	movw	r30, r24
     d26:	20 83       	st	Z, r18
     d28:	35 c0       	rjmp	.+106    	; 0xd94 <.L15>

00000d2a <.L16>:
                    }
                }
            }
            else
            {
                PORTB |= (1<<LED);
     d2a:	85 e2       	ldi	r24, 0x25	; 37
     d2c:	90 e0       	ldi	r25, 0x00	; 0
     d2e:	fc 01       	movw	r30, r24
     d30:	20 81       	ld	r18, Z
     d32:	85 e2       	ldi	r24, 0x25	; 37
     d34:	90 e0       	ldi	r25, 0x00	; 0

00000d36 <.Loc.123>:
     d36:	22 60       	ori	r18, 0x02	; 2
     d38:	fc 01       	movw	r30, r24
     d3a:	20 83       	st	Z, r18

00000d3c <.Loc.124>:
                h_bridgeL(0);
     d3c:	80 e0       	ldi	r24, 0x00	; 0
     d3e:	90 e0       	ldi	r25, 0x00	; 0
     d40:	0e 94 9d 04 	call	0x93a	; 0x93a <h_bridgeL>

00000d44 <.Loc.125>:
                h_bridgeR(0);
     d44:	80 e0       	ldi	r24, 0x00	; 0
     d46:	90 e0       	ldi	r25, 0x00	; 0
     d48:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <h_bridgeR>

00000d4c <.Loc.126>:
                PORTE |= (1 << motorL_1);
     d4c:	8e e2       	ldi	r24, 0x2E	; 46
     d4e:	90 e0       	ldi	r25, 0x00	; 0
     d50:	fc 01       	movw	r30, r24
     d52:	20 81       	ld	r18, Z
     d54:	8e e2       	ldi	r24, 0x2E	; 46
     d56:	90 e0       	ldi	r25, 0x00	; 0

00000d58 <.Loc.127>:
     d58:	20 61       	ori	r18, 0x10	; 16
     d5a:	fc 01       	movw	r30, r24
     d5c:	20 83       	st	Z, r18

00000d5e <.Loc.128>:
                PORTE &= ~(1 << motorL_2);
     d5e:	8e e2       	ldi	r24, 0x2E	; 46
     d60:	90 e0       	ldi	r25, 0x00	; 0
     d62:	fc 01       	movw	r30, r24
     d64:	20 81       	ld	r18, Z

00000d66 <.Loc.129>:
     d66:	8e e2       	ldi	r24, 0x2E	; 46
     d68:	90 e0       	ldi	r25, 0x00	; 0

00000d6a <.Loc.130>:
     d6a:	2f 7d       	andi	r18, 0xDF	; 223
     d6c:	fc 01       	movw	r30, r24
     d6e:	20 83       	st	Z, r18

00000d70 <.Loc.131>:
                PORTE |= (1 << motorR_1);
     d70:	8e e2       	ldi	r24, 0x2E	; 46
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	fc 01       	movw	r30, r24
     d76:	20 81       	ld	r18, Z
     d78:	8e e2       	ldi	r24, 0x2E	; 46
     d7a:	90 e0       	ldi	r25, 0x00	; 0

00000d7c <.Loc.132>:
     d7c:	22 60       	ori	r18, 0x02	; 2
     d7e:	fc 01       	movw	r30, r24
     d80:	20 83       	st	Z, r18

00000d82 <.Loc.133>:
                PORTG &= ~(1 << motorR_2);
     d82:	84 e3       	ldi	r24, 0x34	; 52
     d84:	90 e0       	ldi	r25, 0x00	; 0
     d86:	fc 01       	movw	r30, r24
     d88:	20 81       	ld	r18, Z

00000d8a <.Loc.134>:
     d8a:	84 e3       	ldi	r24, 0x34	; 52
     d8c:	90 e0       	ldi	r25, 0x00	; 0

00000d8e <.Loc.135>:
     d8e:	2f 7d       	andi	r18, 0xDF	; 223
     d90:	fc 01       	movw	r30, r24
     d92:	20 83       	st	Z, r18

00000d94 <.L15>:
            }

        }
        if (rijden == 2)
     d94:	89 81       	ldd	r24, Y+1	; 0x01
     d96:	9a 81       	ldd	r25, Y+2	; 0x02
     d98:	82 30       	cpi	r24, 0x02	; 2
     d9a:	91 05       	cpc	r25, r1
     d9c:	09 f0       	breq	.+2      	; 0xda0 <.Loc.137>

00000d9e <L0^A>:
     d9e:	9f c0       	rjmp	.+318    	; 0xede <.L18>

00000da0 <.Loc.137>:
        {
            boom_timer = time_current_ms(0);
     da0:	80 e0       	ldi	r24, 0x00	; 0
     da2:	90 e0       	ldi	r25, 0x00	; 0
     da4:	0e 94 78 03 	call	0x6f0	; 0x6f0 <time_current_ms>
     da8:	9e 8b       	std	Y+22, r25	; 0x16
     daa:	8d 8b       	std	Y+21, r24	; 0x15
     dac:	89 2f       	mov	r24, r25
     dae:	88 0f       	add	r24, r24
     db0:	88 0b       	sbc	r24, r24
     db2:	8f 8b       	std	Y+23, r24	; 0x17
     db4:	88 8f       	std	Y+24, r24	; 0x18
     db6:	89 8f       	std	Y+25, r24	; 0x19
     db8:	8a 8f       	std	Y+26, r24	; 0x1a
     dba:	8b 8f       	std	Y+27, r24	; 0x1b
     dbc:	8c 8f       	std	Y+28, r24	; 0x1c

00000dbe <.Loc.138>:
     dbe:	fd 89       	ldd	r31, Y+21	; 0x15
     dc0:	f0 93 1e 02 	sts	0x021E, r31	; 0x80021e <boom_timer>
     dc4:	8e 89       	ldd	r24, Y+22	; 0x16
     dc6:	80 93 1f 02 	sts	0x021F, r24	; 0x80021f <boom_timer+0x1>
     dca:	ef 89       	ldd	r30, Y+23	; 0x17
     dcc:	e0 93 20 02 	sts	0x0220, r30	; 0x800220 <boom_timer+0x2>
     dd0:	f8 8d       	ldd	r31, Y+24	; 0x18
     dd2:	f0 93 21 02 	sts	0x0221, r31	; 0x800221 <boom_timer+0x3>
     dd6:	89 8d       	ldd	r24, Y+25	; 0x19
     dd8:	80 93 22 02 	sts	0x0222, r24	; 0x800222 <boom_timer+0x4>
     ddc:	ea 8d       	ldd	r30, Y+26	; 0x1a
     dde:	e0 93 23 02 	sts	0x0223, r30	; 0x800223 <boom_timer+0x5>
     de2:	fb 8d       	ldd	r31, Y+27	; 0x1b
     de4:	f0 93 24 02 	sts	0x0224, r31	; 0x800224 <boom_timer+0x6>
     de8:	8c 8d       	ldd	r24, Y+28	; 0x1c
     dea:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <boom_timer+0x7>

00000dee <.Loc.139>:
            if (time_current_ms(0) - boom_timer > 2000)
     dee:	80 e0       	ldi	r24, 0x00	; 0
     df0:	90 e0       	ldi	r25, 0x00	; 0
     df2:	0e 94 78 03 	call	0x6f0	; 0x6f0 <time_current_ms>
     df6:	9e 8f       	std	Y+30, r25	; 0x1e
     df8:	8d 8f       	std	Y+29, r24	; 0x1d
     dfa:	89 2f       	mov	r24, r25
     dfc:	88 0f       	add	r24, r24
     dfe:	88 0b       	sbc	r24, r24
     e00:	8f 8f       	std	Y+31, r24	; 0x1f
     e02:	88 a3       	std	Y+32, r24	; 0x20
     e04:	89 a3       	std	Y+33, r24	; 0x21
     e06:	8a a3       	std	Y+34, r24	; 0x22
     e08:	8b a3       	std	Y+35, r24	; 0x23
     e0a:	8c a3       	std	Y+36, r24	; 0x24

00000e0c <.Loc.140>:
     e0c:	20 90 1e 02 	lds	r2, 0x021E	; 0x80021e <boom_timer>
     e10:	30 90 1f 02 	lds	r3, 0x021F	; 0x80021f <boom_timer+0x1>
     e14:	40 90 20 02 	lds	r4, 0x0220	; 0x800220 <boom_timer+0x2>
     e18:	50 90 21 02 	lds	r5, 0x0221	; 0x800221 <boom_timer+0x3>
     e1c:	60 90 22 02 	lds	r6, 0x0222	; 0x800222 <boom_timer+0x4>
     e20:	70 90 23 02 	lds	r7, 0x0223	; 0x800223 <boom_timer+0x5>
     e24:	80 90 24 02 	lds	r8, 0x0224	; 0x800224 <boom_timer+0x6>
     e28:	90 90 25 02 	lds	r9, 0x0225	; 0x800225 <boom_timer+0x7>
     e2c:	2d 8d       	ldd	r18, Y+29	; 0x1d
     e2e:	3e 8d       	ldd	r19, Y+30	; 0x1e
     e30:	4f 8d       	ldd	r20, Y+31	; 0x1f
     e32:	58 a1       	ldd	r21, Y+32	; 0x20
     e34:	69 a1       	ldd	r22, Y+33	; 0x21
     e36:	7a a1       	ldd	r23, Y+34	; 0x22
     e38:	8b a1       	ldd	r24, Y+35	; 0x23
     e3a:	9c a1       	ldd	r25, Y+36	; 0x24
     e3c:	a2 2c       	mov	r10, r2
     e3e:	b3 2c       	mov	r11, r3
     e40:	c4 2c       	mov	r12, r4
     e42:	d5 2c       	mov	r13, r5
     e44:	e6 2c       	mov	r14, r6
     e46:	f7 2c       	mov	r15, r7
     e48:	08 2d       	mov	r16, r8
     e4a:	19 2d       	mov	r17, r9
     e4c:	0e 94 d7 07 	call	0xfae	; 0xfae <__subdi3>
     e50:	82 2e       	mov	r8, r18
     e52:	93 2e       	mov	r9, r19
     e54:	a4 2e       	mov	r10, r20
     e56:	b5 2e       	mov	r11, r21
     e58:	c6 2e       	mov	r12, r22
     e5a:	d7 2e       	mov	r13, r23
     e5c:	e8 2e       	mov	r14, r24
     e5e:	f9 2e       	mov	r15, r25

00000e60 <.Loc.141>:
     e60:	28 2d       	mov	r18, r8
     e62:	39 2d       	mov	r19, r9
     e64:	4a 2d       	mov	r20, r10
     e66:	5b 2d       	mov	r21, r11
     e68:	6c 2d       	mov	r22, r12
     e6a:	7d 2d       	mov	r23, r13
     e6c:	8e 2d       	mov	r24, r14
     e6e:	9f 2d       	mov	r25, r15
     e70:	20 3d       	cpi	r18, 0xD0	; 208
     e72:	e7 e0       	ldi	r30, 0x07	; 7
     e74:	3e 07       	cpc	r19, r30
     e76:	41 05       	cpc	r20, r1
     e78:	51 05       	cpc	r21, r1
     e7a:	61 05       	cpc	r22, r1
     e7c:	71 05       	cpc	r23, r1
     e7e:	81 05       	cpc	r24, r1
     e80:	91 05       	cpc	r25, r1
     e82:	69 f1       	breq	.+90     	; 0xede <.L18>
     e84:	60 f1       	brcs	.+88     	; 0xede <.L18>

00000e86 <.Loc.142>:
            {
                h_bridgeL(0);
     e86:	80 e0       	ldi	r24, 0x00	; 0
     e88:	90 e0       	ldi	r25, 0x00	; 0
     e8a:	0e 94 9d 04 	call	0x93a	; 0x93a <h_bridgeL>

00000e8e <.Loc.143>:
                h_bridgeR(70);
     e8e:	86 e4       	ldi	r24, 0x46	; 70
     e90:	90 e0       	ldi	r25, 0x00	; 0
     e92:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <h_bridgeR>

00000e96 <.Loc.144>:
                PORTE |= (1 << motorL_1);
     e96:	8e e2       	ldi	r24, 0x2E	; 46
     e98:	90 e0       	ldi	r25, 0x00	; 0
     e9a:	fc 01       	movw	r30, r24
     e9c:	20 81       	ld	r18, Z
     e9e:	8e e2       	ldi	r24, 0x2E	; 46
     ea0:	90 e0       	ldi	r25, 0x00	; 0

00000ea2 <.Loc.145>:
     ea2:	20 61       	ori	r18, 0x10	; 16
     ea4:	fc 01       	movw	r30, r24
     ea6:	20 83       	st	Z, r18

00000ea8 <.Loc.146>:
                PORTE &= ~(1 << motorL_2);
     ea8:	8e e2       	ldi	r24, 0x2E	; 46
     eaa:	90 e0       	ldi	r25, 0x00	; 0
     eac:	fc 01       	movw	r30, r24
     eae:	20 81       	ld	r18, Z

00000eb0 <.Loc.147>:
     eb0:	8e e2       	ldi	r24, 0x2E	; 46
     eb2:	90 e0       	ldi	r25, 0x00	; 0

00000eb4 <.Loc.148>:
     eb4:	2f 7d       	andi	r18, 0xDF	; 223
     eb6:	fc 01       	movw	r30, r24
     eb8:	20 83       	st	Z, r18

00000eba <.Loc.149>:
                PORTE |= (1 << motorR_1);
     eba:	8e e2       	ldi	r24, 0x2E	; 46
     ebc:	90 e0       	ldi	r25, 0x00	; 0
     ebe:	fc 01       	movw	r30, r24
     ec0:	20 81       	ld	r18, Z
     ec2:	8e e2       	ldi	r24, 0x2E	; 46
     ec4:	90 e0       	ldi	r25, 0x00	; 0

00000ec6 <.Loc.150>:
     ec6:	22 60       	ori	r18, 0x02	; 2
     ec8:	fc 01       	movw	r30, r24
     eca:	20 83       	st	Z, r18

00000ecc <.Loc.151>:
                PORTG &= ~(1 << motorR_2);
     ecc:	84 e3       	ldi	r24, 0x34	; 52
     ece:	90 e0       	ldi	r25, 0x00	; 0
     ed0:	fc 01       	movw	r30, r24
     ed2:	20 81       	ld	r18, Z

00000ed4 <.Loc.152>:
     ed4:	84 e3       	ldi	r24, 0x34	; 52
     ed6:	90 e0       	ldi	r25, 0x00	; 0

00000ed8 <.Loc.153>:
     ed8:	2f 7d       	andi	r18, 0xDF	; 223
     eda:	fc 01       	movw	r30, r24
     edc:	20 83       	st	Z, r18

00000ede <.L18>:
            }
        }
        if ((rijden != 1) && (rijden != 2))
     ede:	89 81       	ldd	r24, Y+1	; 0x01
     ee0:	9a 81       	ldd	r25, Y+2	; 0x02
     ee2:	81 30       	cpi	r24, 0x01	; 1
     ee4:	91 05       	cpc	r25, r1
     ee6:	09 f4       	brne	.+2      	; 0xeea <.Loc.155>

00000ee8 <L0^A>:
     ee8:	07 ce       	rjmp	.-1010   	; 0xaf8 <.L20>

00000eea <.Loc.155>:
     eea:	89 81       	ldd	r24, Y+1	; 0x01
     eec:	9a 81       	ldd	r25, Y+2	; 0x02
     eee:	82 30       	cpi	r24, 0x02	; 2
     ef0:	91 05       	cpc	r25, r1
     ef2:	09 f4       	brne	.+2      	; 0xef6 <.Loc.156>

00000ef4 <L0^A>:
     ef4:	01 ce       	rjmp	.-1022   	; 0xaf8 <.L20>

00000ef6 <.Loc.156>:
        {
            h_bridgeL(0);
     ef6:	80 e0       	ldi	r24, 0x00	; 0
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	0e 94 9d 04 	call	0x93a	; 0x93a <h_bridgeL>

00000efe <.Loc.157>:
            h_bridgeR(0);
     efe:	80 e0       	ldi	r24, 0x00	; 0
     f00:	90 e0       	ldi	r25, 0x00	; 0
     f02:	0e 94 d4 04 	call	0x9a8	; 0x9a8 <h_bridgeR>

00000f06 <.Loc.158>:
            PORTE |= (1 << motorL_1);
     f06:	8e e2       	ldi	r24, 0x2E	; 46
     f08:	90 e0       	ldi	r25, 0x00	; 0
     f0a:	fc 01       	movw	r30, r24
     f0c:	20 81       	ld	r18, Z
     f0e:	8e e2       	ldi	r24, 0x2E	; 46
     f10:	90 e0       	ldi	r25, 0x00	; 0

00000f12 <.Loc.159>:
     f12:	20 61       	ori	r18, 0x10	; 16
     f14:	fc 01       	movw	r30, r24
     f16:	20 83       	st	Z, r18

00000f18 <.Loc.160>:
            PORTE &= ~(1 << motorL_2);
     f18:	8e e2       	ldi	r24, 0x2E	; 46
     f1a:	90 e0       	ldi	r25, 0x00	; 0
     f1c:	fc 01       	movw	r30, r24
     f1e:	20 81       	ld	r18, Z

00000f20 <.Loc.161>:
     f20:	8e e2       	ldi	r24, 0x2E	; 46
     f22:	90 e0       	ldi	r25, 0x00	; 0

00000f24 <.Loc.162>:
     f24:	2f 7d       	andi	r18, 0xDF	; 223
     f26:	fc 01       	movw	r30, r24
     f28:	20 83       	st	Z, r18

00000f2a <.Loc.163>:
            PORTE |= (1 << motorR_1);
     f2a:	8e e2       	ldi	r24, 0x2E	; 46
     f2c:	90 e0       	ldi	r25, 0x00	; 0
     f2e:	fc 01       	movw	r30, r24
     f30:	20 81       	ld	r18, Z
     f32:	8e e2       	ldi	r24, 0x2E	; 46
     f34:	90 e0       	ldi	r25, 0x00	; 0

00000f36 <.Loc.164>:
     f36:	22 60       	ori	r18, 0x02	; 2
     f38:	fc 01       	movw	r30, r24
     f3a:	20 83       	st	Z, r18

00000f3c <.Loc.165>:
            PORTG &= ~(1 << motorR_2);
     f3c:	84 e3       	ldi	r24, 0x34	; 52
     f3e:	90 e0       	ldi	r25, 0x00	; 0
     f40:	fc 01       	movw	r30, r24
     f42:	20 81       	ld	r18, Z

00000f44 <.Loc.166>:
     f44:	84 e3       	ldi	r24, 0x34	; 52
     f46:	90 e0       	ldi	r25, 0x00	; 0

00000f48 <.Loc.167>:
     f48:	2f 7d       	andi	r18, 0xDF	; 223
     f4a:	fc 01       	movw	r30, r24
     f4c:	20 83       	st	Z, r18

00000f4e <.Loc.168>:
        if ((PINF & (1<<knop)) == 0)
     f4e:	d4 cd       	rjmp	.-1112   	; 0xaf8 <.L20>

00000f50 <__udivmodhi4>:
     f50:	aa 1b       	sub	r26, r26

00000f52 <.Loc.1>:
     f52:	bb 1b       	sub	r27, r27

00000f54 <.Loc.2>:
     f54:	51 e1       	ldi	r21, 0x11	; 17

00000f56 <.Loc.3>:
     f56:	07 c0       	rjmp	.+14     	; 0xf66 <__udivmodhi4_ep>

00000f58 <__udivmodhi4_loop>:
     f58:	aa 1f       	adc	r26, r26

00000f5a <.Loc.5>:
     f5a:	bb 1f       	adc	r27, r27

00000f5c <.Loc.6>:
     f5c:	a6 17       	cp	r26, r22

00000f5e <.Loc.7>:
     f5e:	b7 07       	cpc	r27, r23

00000f60 <.Loc.8>:
     f60:	10 f0       	brcs	.+4      	; 0xf66 <__udivmodhi4_ep>

00000f62 <.Loc.9>:
     f62:	a6 1b       	sub	r26, r22

00000f64 <.Loc.10>:
     f64:	b7 0b       	sbc	r27, r23

00000f66 <__udivmodhi4_ep>:
     f66:	88 1f       	adc	r24, r24

00000f68 <.Loc.12>:
     f68:	99 1f       	adc	r25, r25

00000f6a <.Loc.13>:
     f6a:	5a 95       	dec	r21

00000f6c <.Loc.14>:
     f6c:	a9 f7       	brne	.-22     	; 0xf58 <__udivmodhi4_loop>

00000f6e <.Loc.15>:
     f6e:	80 95       	com	r24

00000f70 <.Loc.16>:
     f70:	90 95       	com	r25

00000f72 <.Loc.17>:
     f72:	bc 01       	movw	r22, r24

00000f74 <.Loc.18>:
     f74:	cd 01       	movw	r24, r26

00000f76 <.Loc.19>:
     f76:	08 95       	ret

00000f78 <__umulhisi3>:
     f78:	a2 9f       	mul	r26, r18

00000f7a <.Loc.1>:
     f7a:	b0 01       	movw	r22, r0

00000f7c <.Loc.2>:
     f7c:	b3 9f       	mul	r27, r19

00000f7e <.Loc.3>:
     f7e:	c0 01       	movw	r24, r0

00000f80 <.Loc.4>:
     f80:	a3 9f       	mul	r26, r19

00000f82 <.Loc.5>:
     f82:	70 0d       	add	r23, r0

00000f84 <.Loc.6>:
     f84:	81 1d       	adc	r24, r1

00000f86 <.Loc.7>:
     f86:	11 24       	eor	r1, r1

00000f88 <.Loc.8>:
     f88:	91 1d       	adc	r25, r1

00000f8a <.Loc.9>:
     f8a:	b2 9f       	mul	r27, r18

00000f8c <.Loc.10>:
     f8c:	70 0d       	add	r23, r0

00000f8e <.Loc.11>:
     f8e:	81 1d       	adc	r24, r1

00000f90 <.Loc.12>:
     f90:	11 24       	eor	r1, r1

00000f92 <.Loc.13>:
     f92:	91 1d       	adc	r25, r1

00000f94 <.Loc.14>:
     f94:	08 95       	ret

00000f96 <__adddi3_s8>:
     f96:	00 24       	eor	r0, r0

00000f98 <.Loc.1>:
     f98:	a7 fd       	sbrc	r26, 7

00000f9a <.Loc.2>:
     f9a:	00 94       	com	r0

00000f9c <.Loc.3>:
     f9c:	2a 0f       	add	r18, r26
     f9e:	30 1d       	adc	r19, r0
     fa0:	40 1d       	adc	r20, r0
     fa2:	50 1d       	adc	r21, r0

00000fa4 <.Loc.4>:
     fa4:	60 1d       	adc	r22, r0
     fa6:	70 1d       	adc	r23, r0
     fa8:	80 1d       	adc	r24, r0
     faa:	90 1d       	adc	r25, r0

00000fac <.Loc.5>:
     fac:	08 95       	ret

00000fae <__subdi3>:
     fae:	2a 19       	sub	r18, r10
     fb0:	3b 09       	sbc	r19, r11
     fb2:	4c 09       	sbc	r20, r12
     fb4:	5d 09       	sbc	r21, r13

00000fb6 <.Loc.1>:
     fb6:	6e 09       	sbc	r22, r14
     fb8:	7f 09       	sbc	r23, r15
     fba:	80 0b       	sbc	r24, r16
     fbc:	91 0b       	sbc	r25, r17

00000fbe <.Loc.2>:
     fbe:	08 95       	ret

00000fc0 <__fixunssfsi>:
     fc0:	0e 94 54 08 	call	0x10a8	; 0x10a8 <__fp_splitA>
     fc4:	88 f0       	brcs	.+34     	; 0xfe8 <.L_err>
     fc6:	9f 57       	subi	r25, 0x7F	; 127
     fc8:	98 f0       	brcs	.+38     	; 0xff0 <.L_zr>
     fca:	b9 2f       	mov	r27, r25
     fcc:	99 27       	eor	r25, r25
     fce:	b7 51       	subi	r27, 0x17	; 23
     fd0:	b0 f0       	brcs	.+44     	; 0xffe <.L4^B1>
     fd2:	e1 f0       	breq	.+56     	; 0x100c <.L_sign>

00000fd4 <.L1^B1>:
     fd4:	66 0f       	add	r22, r22
     fd6:	77 1f       	adc	r23, r23
     fd8:	88 1f       	adc	r24, r24
     fda:	99 1f       	adc	r25, r25
     fdc:	1a f0       	brmi	.+6      	; 0xfe4 <.L2^B1>
     fde:	ba 95       	dec	r27
     fe0:	c9 f7       	brne	.-14     	; 0xfd4 <.L1^B1>
     fe2:	14 c0       	rjmp	.+40     	; 0x100c <.L_sign>

00000fe4 <.L2^B1>:
     fe4:	b1 30       	cpi	r27, 0x01	; 1
     fe6:	91 f0       	breq	.+36     	; 0x100c <.L_sign>

00000fe8 <.L_err>:
     fe8:	0e 94 6e 08 	call	0x10dc	; 0x10dc <__fp_zero>
     fec:	b1 e0       	ldi	r27, 0x01	; 1
     fee:	08 95       	ret

00000ff0 <.L_zr>:
     ff0:	0c 94 6e 08 	jmp	0x10dc	; 0x10dc <__fp_zero>

00000ff4 <.L3^B1>:
     ff4:	67 2f       	mov	r22, r23
     ff6:	78 2f       	mov	r23, r24
     ff8:	88 27       	eor	r24, r24
     ffa:	b8 5f       	subi	r27, 0xF8	; 248
     ffc:	39 f0       	breq	.+14     	; 0x100c <.L_sign>

00000ffe <.L4^B1>:
     ffe:	b9 3f       	cpi	r27, 0xF9	; 249
    1000:	cc f3       	brlt	.-14     	; 0xff4 <.L3^B1>

00001002 <.L5^B1>:
    1002:	86 95       	lsr	r24
    1004:	77 95       	ror	r23
    1006:	67 95       	ror	r22
    1008:	b3 95       	inc	r27
    100a:	d9 f7       	brne	.-10     	; 0x1002 <.L5^B1>

0000100c <.L_sign>:
    100c:	3e f4       	brtc	.+14     	; 0x101c <.L6^B1>
    100e:	90 95       	com	r25
    1010:	80 95       	com	r24
    1012:	70 95       	com	r23
    1014:	61 95       	neg	r22
    1016:	7f 4f       	sbci	r23, 0xFF	; 255
    1018:	8f 4f       	sbci	r24, 0xFF	; 255
    101a:	9f 4f       	sbci	r25, 0xFF	; 255

0000101c <.L6^B1>:
    101c:	08 95       	ret

0000101e <__floatunsisf>:
    101e:	e8 94       	clt
    1020:	09 c0       	rjmp	.+18     	; 0x1034 <.L1^B1>

00001022 <__floatsisf>:
    1022:	97 fb       	bst	r25, 7
    1024:	3e f4       	brtc	.+14     	; 0x1034 <.L1^B1>
    1026:	90 95       	com	r25
    1028:	80 95       	com	r24
    102a:	70 95       	com	r23
    102c:	61 95       	neg	r22
    102e:	7f 4f       	sbci	r23, 0xFF	; 255
    1030:	8f 4f       	sbci	r24, 0xFF	; 255
    1032:	9f 4f       	sbci	r25, 0xFF	; 255

00001034 <.L1^B1>:
    1034:	99 23       	and	r25, r25
    1036:	a9 f0       	breq	.+42     	; 0x1062 <.L4^B1>
    1038:	f9 2f       	mov	r31, r25
    103a:	96 e9       	ldi	r25, 0x96	; 150
    103c:	bb 27       	eor	r27, r27

0000103e <.L2^B1>:
    103e:	93 95       	inc	r25
    1040:	f6 95       	lsr	r31
    1042:	87 95       	ror	r24
    1044:	77 95       	ror	r23
    1046:	67 95       	ror	r22
    1048:	b7 95       	ror	r27
    104a:	f1 11       	cpse	r31, r1
    104c:	f8 cf       	rjmp	.-16     	; 0x103e <.L2^B1>
    104e:	fa f4       	brpl	.+62     	; 0x108e <.L_pack>
    1050:	bb 0f       	add	r27, r27
    1052:	11 f4       	brne	.+4      	; 0x1058 <.L3^B1>
    1054:	60 ff       	sbrs	r22, 0
    1056:	1b c0       	rjmp	.+54     	; 0x108e <.L_pack>

00001058 <.L3^B1>:
    1058:	6f 5f       	subi	r22, 0xFF	; 255
    105a:	7f 4f       	sbci	r23, 0xFF	; 255
    105c:	8f 4f       	sbci	r24, 0xFF	; 255
    105e:	9f 4f       	sbci	r25, 0xFF	; 255
    1060:	16 c0       	rjmp	.+44     	; 0x108e <.L_pack>

00001062 <.L4^B1>:
    1062:	88 23       	and	r24, r24
    1064:	11 f0       	breq	.+4      	; 0x106a <.L5^B1>
    1066:	96 e9       	ldi	r25, 0x96	; 150
    1068:	11 c0       	rjmp	.+34     	; 0x108c <.L8^B1>

0000106a <.L5^B1>:
    106a:	77 23       	and	r23, r23
    106c:	21 f0       	breq	.+8      	; 0x1076 <.L6^B1>
    106e:	9e e8       	ldi	r25, 0x8E	; 142
    1070:	87 2f       	mov	r24, r23
    1072:	76 2f       	mov	r23, r22
    1074:	05 c0       	rjmp	.+10     	; 0x1080 <.L7^B1>

00001076 <.L6^B1>:
    1076:	66 23       	and	r22, r22
    1078:	71 f0       	breq	.+28     	; 0x1096 <.L9^B1>
    107a:	96 e8       	ldi	r25, 0x86	; 134
    107c:	86 2f       	mov	r24, r22
    107e:	70 e0       	ldi	r23, 0x00	; 0

00001080 <.L7^B1>:
    1080:	60 e0       	ldi	r22, 0x00	; 0
    1082:	2a f0       	brmi	.+10     	; 0x108e <.L_pack>

00001084 <.L10^B1>:
    1084:	9a 95       	dec	r25
    1086:	66 0f       	add	r22, r22
    1088:	77 1f       	adc	r23, r23
    108a:	88 1f       	adc	r24, r24

0000108c <.L8^B1>:
    108c:	da f7       	brpl	.-10     	; 0x1084 <.L10^B1>

0000108e <.L_pack>:
    108e:	88 0f       	add	r24, r24
    1090:	96 95       	lsr	r25
    1092:	87 95       	ror	r24
    1094:	97 f9       	bld	r25, 7

00001096 <.L9^B1>:
    1096:	08 95       	ret

00001098 <__fp_split3>:
    1098:	57 fd       	sbrc	r21, 7
    109a:	90 58       	subi	r25, 0x80	; 128
    109c:	44 0f       	add	r20, r20
    109e:	55 1f       	adc	r21, r21
    10a0:	59 f0       	breq	.+22     	; 0x10b8 <.L4^B1>
    10a2:	5f 3f       	cpi	r21, 0xFF	; 255
    10a4:	71 f0       	breq	.+28     	; 0x10c2 <.L5^B1>

000010a6 <.L1^B1>:
    10a6:	47 95       	ror	r20

000010a8 <__fp_splitA>:
    10a8:	88 0f       	add	r24, r24
    10aa:	97 fb       	bst	r25, 7
    10ac:	99 1f       	adc	r25, r25
    10ae:	61 f0       	breq	.+24     	; 0x10c8 <.L6^B1>
    10b0:	9f 3f       	cpi	r25, 0xFF	; 255
    10b2:	79 f0       	breq	.+30     	; 0x10d2 <.L7^B1>

000010b4 <.L3^B1>:
    10b4:	87 95       	ror	r24
    10b6:	08 95       	ret

000010b8 <.L4^B1>:
    10b8:	12 16       	cp	r1, r18
    10ba:	13 06       	cpc	r1, r19
    10bc:	14 06       	cpc	r1, r20
    10be:	55 1f       	adc	r21, r21
    10c0:	f2 cf       	rjmp	.-28     	; 0x10a6 <.L1^B1>

000010c2 <.L5^B1>:
    10c2:	46 95       	lsr	r20
    10c4:	f1 df       	rcall	.-30     	; 0x10a8 <__fp_splitA>
    10c6:	08 c0       	rjmp	.+16     	; 0x10d8 <.L8^B1>

000010c8 <.L6^B1>:
    10c8:	16 16       	cp	r1, r22
    10ca:	17 06       	cpc	r1, r23
    10cc:	18 06       	cpc	r1, r24
    10ce:	99 1f       	adc	r25, r25
    10d0:	f1 cf       	rjmp	.-30     	; 0x10b4 <.L3^B1>

000010d2 <.L7^B1>:
    10d2:	86 95       	lsr	r24
    10d4:	71 05       	cpc	r23, r1
    10d6:	61 05       	cpc	r22, r1

000010d8 <.L8^B1>:
    10d8:	08 94       	sec
    10da:	08 95       	ret

000010dc <__fp_zero>:
    10dc:	e8 94       	clt

000010de <__fp_szero>:
    10de:	bb 27       	eor	r27, r27
    10e0:	66 27       	eor	r22, r22
    10e2:	77 27       	eor	r23, r23
    10e4:	cb 01       	movw	r24, r22
    10e6:	97 f9       	bld	r25, 7
    10e8:	08 95       	ret

000010ea <__mulsf3>:
    10ea:	0e 94 88 08 	call	0x1110	; 0x1110 <__mulsf3x>
    10ee:	0c 94 f9 08 	jmp	0x11f2	; 0x11f2 <__fp_round>

000010f2 <.L^B1>:
    10f2:	0e 94 eb 08 	call	0x11d6	; 0x11d6 <__fp_pscA>
    10f6:	38 f0       	brcs	.+14     	; 0x1106 <.L1^B1>
    10f8:	0e 94 f2 08 	call	0x11e4	; 0x11e4 <__fp_pscB>
    10fc:	20 f0       	brcs	.+8      	; 0x1106 <.L1^B1>
    10fe:	95 23       	and	r25, r21
    1100:	11 f0       	breq	.+4      	; 0x1106 <.L1^B1>
    1102:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__fp_inf>

00001106 <.L1^B1>:
    1106:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__fp_nan>

0000110a <.L2^B1>:
    110a:	11 24       	eor	r1, r1
    110c:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_szero>

00001110 <__mulsf3x>:
    1110:	0e 94 4c 08 	call	0x1098	; 0x1098 <__fp_split3>
    1114:	70 f3       	brcs	.-36     	; 0x10f2 <.L^B1>

00001116 <__mulsf3_pse>:
    1116:	95 9f       	mul	r25, r21
    1118:	c1 f3       	breq	.-16     	; 0x110a <.L2^B1>
    111a:	95 0f       	add	r25, r21
    111c:	50 e0       	ldi	r21, 0x00	; 0
    111e:	55 1f       	adc	r21, r21
    1120:	62 9f       	mul	r22, r18
    1122:	f0 01       	movw	r30, r0
    1124:	72 9f       	mul	r23, r18
    1126:	bb 27       	eor	r27, r27
    1128:	f0 0d       	add	r31, r0
    112a:	b1 1d       	adc	r27, r1
    112c:	63 9f       	mul	r22, r19
    112e:	aa 27       	eor	r26, r26
    1130:	f0 0d       	add	r31, r0
    1132:	b1 1d       	adc	r27, r1
    1134:	aa 1f       	adc	r26, r26
    1136:	64 9f       	mul	r22, r20
    1138:	66 27       	eor	r22, r22
    113a:	b0 0d       	add	r27, r0
    113c:	a1 1d       	adc	r26, r1
    113e:	66 1f       	adc	r22, r22
    1140:	82 9f       	mul	r24, r18
    1142:	22 27       	eor	r18, r18
    1144:	b0 0d       	add	r27, r0
    1146:	a1 1d       	adc	r26, r1
    1148:	62 1f       	adc	r22, r18
    114a:	73 9f       	mul	r23, r19
    114c:	b0 0d       	add	r27, r0
    114e:	a1 1d       	adc	r26, r1
    1150:	62 1f       	adc	r22, r18
    1152:	83 9f       	mul	r24, r19
    1154:	a0 0d       	add	r26, r0
    1156:	61 1d       	adc	r22, r1
    1158:	22 1f       	adc	r18, r18
    115a:	74 9f       	mul	r23, r20
    115c:	33 27       	eor	r19, r19
    115e:	a0 0d       	add	r26, r0
    1160:	61 1d       	adc	r22, r1
    1162:	23 1f       	adc	r18, r19
    1164:	84 9f       	mul	r24, r20
    1166:	60 0d       	add	r22, r0
    1168:	21 1d       	adc	r18, r1
    116a:	82 2f       	mov	r24, r18
    116c:	76 2f       	mov	r23, r22
    116e:	6a 2f       	mov	r22, r26
    1170:	11 24       	eor	r1, r1
    1172:	9f 57       	subi	r25, 0x7F	; 127
    1174:	50 40       	sbci	r21, 0x00	; 0
    1176:	9a f0       	brmi	.+38     	; 0x119e <.L13^B1>
    1178:	f1 f0       	breq	.+60     	; 0x11b6 <.L15^B1>

0000117a <.L10^B1>:
    117a:	88 23       	and	r24, r24
    117c:	4a f0       	brmi	.+18     	; 0x1190 <.L11^B1>
    117e:	ee 0f       	add	r30, r30
    1180:	ff 1f       	adc	r31, r31
    1182:	bb 1f       	adc	r27, r27
    1184:	66 1f       	adc	r22, r22
    1186:	77 1f       	adc	r23, r23
    1188:	88 1f       	adc	r24, r24
    118a:	91 50       	subi	r25, 0x01	; 1
    118c:	50 40       	sbci	r21, 0x00	; 0
    118e:	a9 f7       	brne	.-22     	; 0x117a <.L10^B1>

00001190 <.L11^B1>:
    1190:	9e 3f       	cpi	r25, 0xFE	; 254
    1192:	51 05       	cpc	r21, r1
    1194:	80 f0       	brcs	.+32     	; 0x11b6 <.L15^B1>
    1196:	0c 94 e2 08 	jmp	0x11c4	; 0x11c4 <__fp_inf>

0000119a <.L12^B1>:
    119a:	0c 94 6f 08 	jmp	0x10de	; 0x10de <__fp_szero>

0000119e <.L13^B1>:
    119e:	5f 3f       	cpi	r21, 0xFF	; 255
    11a0:	e4 f3       	brlt	.-8      	; 0x119a <.L12^B1>
    11a2:	98 3e       	cpi	r25, 0xE8	; 232
    11a4:	d4 f3       	brlt	.-12     	; 0x119a <.L12^B1>

000011a6 <.L14^B1>:
    11a6:	86 95       	lsr	r24
    11a8:	77 95       	ror	r23
    11aa:	67 95       	ror	r22
    11ac:	b7 95       	ror	r27
    11ae:	f7 95       	ror	r31
    11b0:	e7 95       	ror	r30
    11b2:	9f 5f       	subi	r25, 0xFF	; 255
    11b4:	c1 f7       	brne	.-16     	; 0x11a6 <.L14^B1>

000011b6 <.L15^B1>:
    11b6:	fe 2b       	or	r31, r30
    11b8:	88 0f       	add	r24, r24
    11ba:	91 1d       	adc	r25, r1
    11bc:	96 95       	lsr	r25
    11be:	87 95       	ror	r24
    11c0:	97 f9       	bld	r25, 7
    11c2:	08 95       	ret

000011c4 <__fp_inf>:
    11c4:	97 f9       	bld	r25, 7
    11c6:	9f 67       	ori	r25, 0x7F	; 127
    11c8:	80 e8       	ldi	r24, 0x80	; 128
    11ca:	70 e0       	ldi	r23, 0x00	; 0
    11cc:	60 e0       	ldi	r22, 0x00	; 0
    11ce:	08 95       	ret

000011d0 <__fp_nan>:
    11d0:	9f ef       	ldi	r25, 0xFF	; 255
    11d2:	80 ec       	ldi	r24, 0xC0	; 192
    11d4:	08 95       	ret

000011d6 <__fp_pscA>:
    11d6:	00 24       	eor	r0, r0
    11d8:	0a 94       	dec	r0
    11da:	16 16       	cp	r1, r22
    11dc:	17 06       	cpc	r1, r23
    11de:	18 06       	cpc	r1, r24
    11e0:	09 06       	cpc	r0, r25
    11e2:	08 95       	ret

000011e4 <__fp_pscB>:
    11e4:	00 24       	eor	r0, r0
    11e6:	0a 94       	dec	r0
    11e8:	12 16       	cp	r1, r18
    11ea:	13 06       	cpc	r1, r19
    11ec:	14 06       	cpc	r1, r20
    11ee:	05 06       	cpc	r0, r21
    11f0:	08 95       	ret

000011f2 <__fp_round>:
    11f2:	09 2e       	mov	r0, r25
    11f4:	03 94       	inc	r0
    11f6:	00 0c       	add	r0, r0
    11f8:	11 f4       	brne	.+4      	; 0x11fe <.L1^B1>
    11fa:	88 23       	and	r24, r24
    11fc:	52 f0       	brmi	.+20     	; 0x1212 <.L3^B1>

000011fe <.L1^B1>:
    11fe:	bb 0f       	add	r27, r27
    1200:	40 f4       	brcc	.+16     	; 0x1212 <.L3^B1>
    1202:	bf 2b       	or	r27, r31
    1204:	11 f4       	brne	.+4      	; 0x120a <.L2^B1>
    1206:	60 ff       	sbrs	r22, 0
    1208:	04 c0       	rjmp	.+8      	; 0x1212 <.L3^B1>

0000120a <.L2^B1>:
    120a:	6f 5f       	subi	r22, 0xFF	; 255
    120c:	7f 4f       	sbci	r23, 0xFF	; 255
    120e:	8f 4f       	sbci	r24, 0xFF	; 255
    1210:	9f 4f       	sbci	r25, 0xFF	; 255

00001212 <.L3^B1>:
    1212:	08 95       	ret

00001214 <_exit>:
    1214:	f8 94       	cli

00001216 <__stop_program>:
    1216:	ff cf       	rjmp	.-2      	; 0x1216 <__stop_program>
